/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PlataformaVentas;

import clases.Conexion;
import java.awt.Color;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author The_S
 */
public class CrearOT extends javax.swing.JFrame {

    Conexion con = new Conexion();
    Connection cn = con.conecta();

    public CrearOT() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AgregarProductoOT = new javax.swing.JFrame();
        jLayeredPane13 = new javax.swing.JLayeredPane();
        jTabbedPane16 = new javax.swing.JTabbedPane();
        jPanel40 = new javax.swing.JPanel();
        lblNombreProducto = new javax.swing.JLabel();
        txtNombreProducto = new javax.swing.JTextField();
        jPanel41 = new javax.swing.JPanel();
        jLabel80 = new javax.swing.JLabel();
        txtIDProducto = new javax.swing.JTextField();
        jPanel42 = new javax.swing.JPanel();
        jLabel85 = new javax.swing.JLabel();
        txtSKU = new javax.swing.JTextField();
        jTabbedPane14 = new javax.swing.JTabbedPane();
        jScrollPane20 = new javax.swing.JScrollPane();
        tblAgregarProdOT = new javax.swing.JTable();
        jScrollPane21 = new javax.swing.JScrollPane();
        tblProdadd = new javax.swing.JTable();
        jTabbedPane17 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        txtEspecificacionComprador = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        lblValorDolar = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        txtValorDolar = new javax.swing.JTextField();
        txtEspecificacionProveedor = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        txtCargos = new javax.swing.JTextField();
        txtDescuento = new javax.swing.JTextField();
        btnConfirmarVolver = new javax.swing.JButton();
        btnCalcularValores = new javax.swing.JButton();
        btnBorrarProducto1 = new javax.swing.JButton();
        btnAgregarProdOT = new javax.swing.JButton();
        jLabel65 = new javax.swing.JLabel();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        jPanel33 = new javax.swing.JPanel();
        btnVolver4 = new javax.swing.JButton();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        jPanel12 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jLabel93 = new javax.swing.JLabel();
        jLabel102 = new javax.swing.JLabel();
        jLabel103 = new javax.swing.JLabel();
        jLabel113 = new javax.swing.JLabel();
        jTabbedPane9 = new javax.swing.JTabbedPane();
        jScrollPane13 = new javax.swing.JScrollPane();
        tblProductosOrdenCompra = new javax.swing.JTable();
        txtDescripcionOC = new javax.swing.JTextField();
        btnAddProductoOT = new javax.swing.JButton();
        jLabel77 = new javax.swing.JLabel();
        btnBorrarProducto = new javax.swing.JButton();
        btnGenerarOrden1 = new javax.swing.JButton();
        jPanel34 = new javax.swing.JPanel();
        txtEstadoOC = new javax.swing.JTextField();
        jLabel100 = new javax.swing.JLabel();
        jLabel101 = new javax.swing.JLabel();
        jLabel97 = new javax.swing.JLabel();
        jLabel96 = new javax.swing.JLabel();
        txtRutCompradorOC = new javax.swing.JTextField();
        txtDireccionDemandanteOC = new javax.swing.JTextField();
        txtTelefonoComprador = new javax.swing.JTextField();
        jLabel98 = new javax.swing.JLabel();
        txtNombreDemandanteOC = new javax.swing.JTextField();
        txtUnidadCompraCliente = new javax.swing.JTextField();
        jLabel114 = new javax.swing.JLabel();
        jLabel99 = new javax.swing.JLabel();
        txtFechaEnvioOc = new javax.swing.JTextField();
        jPanel36 = new javax.swing.JPanel();
        jLabel90 = new javax.swing.JLabel();
        txtProveedorOC = new javax.swing.JTextField();
        jPanel37 = new javax.swing.JPanel();
        jLabel104 = new javax.swing.JLabel();
        txtNombreOrdenCompra = new javax.swing.JTextField();
        txtFechaEntregaProductoOC = new javax.swing.JTextField();
        jLabel105 = new javax.swing.JLabel();
        jLabel106 = new javax.swing.JLabel();
        txtDireccionesDespachoOC = new javax.swing.JTextField();
        txtDireccionEnvioFacturaOC = new javax.swing.JTextField();
        jLabel107 = new javax.swing.JLabel();
        jLabel112 = new javax.swing.JLabel();
        txtMailEnvioFactura = new javax.swing.JTextField();
        jLabel108 = new javax.swing.JLabel();
        jLabel110 = new javax.swing.JLabel();
        jLabel109 = new javax.swing.JLabel();
        jLabel111 = new javax.swing.JLabel();
        txtContactoOC = new javax.swing.JTextField();
        txtContactoPagoOC = new javax.swing.JTextField();
        txtFormaPagoOC = new javax.swing.JTextField();
        txtMetodoDespachoOC = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        txtCodigoOCOT = new javax.swing.JTextField();
        jPanel22 = new javax.swing.JPanel();
        jLabel115 = new javax.swing.JLabel();
        jLabel116 = new javax.swing.JLabel();
        jLabel117 = new javax.swing.JLabel();
        jLabel118 = new javax.swing.JLabel();
        jLabel119 = new javax.swing.JLabel();
        jLabel120 = new javax.swing.JLabel();
        jLabel121 = new javax.swing.JLabel();
        txtImpuestoEspecifico = new javax.swing.JTextField();
        txtIVAOC = new javax.swing.JTextField();
        txtSubtotalOC = new javax.swing.JTextField();
        txtCargosOC = new javax.swing.JTextField();
        txtDCTOOC = new javax.swing.JTextField();
        txtNetoOC = new javax.swing.JTextField();
        txtTotalOC = new javax.swing.JTextField();
        jLabel78 = new javax.swing.JLabel();
        jPanel38 = new javax.swing.JPanel();
        rdbOCMP = new javax.swing.JRadioButton();
        rdbOCOtro = new javax.swing.JRadioButton();
        lblCodigoOCTitulo = new javax.swing.JLabel();
        txtConsultarOC = new javax.swing.JTextField();
        btnConsultarOC = new javax.swing.JButton();
        jLabel56 = new javax.swing.JLabel();
        lblFondoOrdenTrabajo = new javax.swing.JLabel();

        AgregarProductoOT.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        AgregarProductoOT.setMinimumSize(new java.awt.Dimension(1280, 740));
        AgregarProductoOT.setResizable(false);

        jTabbedPane16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTabbedPane16.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane16.setAutoscrolls(true);
        jTabbedPane16.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N

        lblNombreProducto.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lblNombreProducto.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblNombreProducto.setText("Buscando:");

        txtNombreProducto.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtNombreProducto.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtNombreProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreProductoActionPerformed(evt);
            }
        });
        txtNombreProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreProductoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel40Layout = new javax.swing.GroupLayout(jPanel40);
        jPanel40.setLayout(jPanel40Layout);
        jPanel40Layout.setHorizontalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel40Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lblNombreProducto)
                .addGap(30, 30, 30)
                .addComponent(txtNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel40Layout.setVerticalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel40Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombreProducto)
                    .addComponent(txtNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44))
        );

        jTabbedPane16.addTab("Buscar Por Nombre", jPanel40);

        jLabel80.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel80.setText("Buscando:");

        txtIDProducto.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtIDProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIDProductoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel41Layout = new javax.swing.GroupLayout(jPanel41);
        jPanel41.setLayout(jPanel41Layout);
        jPanel41Layout.setHorizontalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel41Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel80)
                .addGap(30, 30, 30)
                .addComponent(txtIDProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel41Layout.setVerticalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel41Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel80, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIDProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44))
        );

        jTabbedPane16.addTab("Buscar Por ID", jPanel41);

        jLabel85.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel85.setText("Buscando:");

        txtSKU.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtSKU.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSKUKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel42Layout = new javax.swing.GroupLayout(jPanel42);
        jPanel42.setLayout(jPanel42Layout);
        jPanel42Layout.setHorizontalGroup(
            jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel42Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel85)
                .addGap(30, 30, 30)
                .addComponent(txtSKU, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel42Layout.setVerticalGroup(
            jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel42Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSKU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel85, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44))
        );

        jTabbedPane16.addTab("Buscar Por SKU", jPanel42);

        jTabbedPane14.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jTabbedPane14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane14MouseClicked(evt);
            }
        });

        tblAgregarProdOT = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int celIndex){
                return false;
            }
        };
        tblAgregarProdOT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblAgregarProdOT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAgregarProdOTMouseClicked(evt);
            }
        });
        jScrollPane20.setViewportView(tblAgregarProdOT);

        jTabbedPane14.addTab("Seleccione Productos", jScrollPane20);

        tblProdadd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID de Producto", "Producto", "Categoría", "Cantidad", "Especificación de Compador", "Especificación de Proveedor", "Moneda", "Precio Unitario", "Cargos", "Descuento", "Total"
            }
        ));
        tblProdadd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProdaddMouseClicked(evt);
            }
        });
        tblProdadd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblProdaddKeyPressed(evt);
            }
        });
        jScrollPane21.setViewportView(tblProdadd);

        jTabbedPane14.addTab("Productos que se añadirán", jScrollPane21);

        jTabbedPane17.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N

        jPanel4.setBackground(new java.awt.Color(0, 153, 153));

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel37.setText("Especificación de Comprador:");

        txtEspecificacionComprador.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtEspecificacionComprador.setToolTipText("");

        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel38.setText("Especificación de Proveedor:");

        jLabel39.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel39.setText("Cantidad:");

        jLabel66.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel66.setText("Cargos:");
        jLabel66.setToolTipText("");

        lblValorDolar.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lblValorDolar.setText("Valor de Dólar:");

        jLabel71.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel71.setText("Descuento:");

        txtValorDolar.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtValorDolar.setToolTipText("");

        txtEspecificacionProveedor.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtEspecificacionProveedor.setToolTipText("");

        txtCantidad.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtCantidad.setToolTipText("");

        txtCargos.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtCargos.setToolTipText("");

        txtDescuento.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtDescuento.setToolTipText("");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel37)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEspecificacionComprador))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel38)
                        .addGap(20, 20, 20)
                        .addComponent(txtEspecificacionProveedor))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel71)
                        .addGap(198, 198, 198)
                        .addComponent(txtDescuento))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(lblValorDolar)
                        .addGap(160, 160, 160)
                        .addComponent(txtValorDolar))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel39)
                        .addGap(214, 214, 214)
                        .addComponent(txtCantidad))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel66)
                        .addGap(235, 235, 235)
                        .addComponent(txtCargos)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(txtEspecificacionComprador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(txtEspecificacionProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblValorDolar)
                    .addComponent(txtValorDolar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel66)
                    .addComponent(txtCargos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel71)
                    .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane17.addTab("Cálculo de Valores", jPanel4);

        btnConfirmarVolver.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnConfirmarVolver.setText("Confirmar y Volver a la OT");
        btnConfirmarVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarVolverActionPerformed(evt);
            }
        });

        btnCalcularValores.setEnabled(false);
        btnCalcularValores.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnCalcularValores.setText("Calcular Valores");
        btnCalcularValores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularValoresActionPerformed(evt);
            }
        });

        btnBorrarProducto1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnBorrarProducto1.setText("Borrar Producto");
        btnBorrarProducto1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarProducto1ActionPerformed(evt);
            }
        });

        btnAgregarProdOT.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnAgregarProdOT.setText("Agregar Producto a Orden");
        btnAgregarProdOT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarProdOTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPane13Layout = new javax.swing.GroupLayout(jLayeredPane13);
        jLayeredPane13.setLayout(jLayeredPane13Layout);
        jLayeredPane13Layout.setHorizontalGroup(
            jLayeredPane13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
            .addGroup(jLayeredPane13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane13Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(jLayeredPane13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jLayeredPane13Layout.createSequentialGroup()
                            .addGap(254, 254, 254)
                            .addComponent(jTabbedPane16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jLayeredPane13Layout.createSequentialGroup()
                            .addGroup(jLayeredPane13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jLayeredPane13Layout.createSequentialGroup()
                                    .addGap(4, 4, 4)
                                    .addComponent(jTabbedPane17))
                                .addComponent(jTabbedPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 950, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jLayeredPane13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jLayeredPane13Layout.createSequentialGroup()
                                    .addGap(4, 4, 4)
                                    .addGroup(jLayeredPane13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnAgregarProdOT, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnBorrarProducto1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnCalcularValores, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane13Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnConfirmarVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jLayeredPane13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane13Layout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(jLabel65, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );
        jLayeredPane13Layout.setVerticalGroup(
            jLayeredPane13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 740, Short.MAX_VALUE)
            .addGroup(jLayeredPane13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane13Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jTabbedPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(8, 8, 8)
                    .addGroup(jLayeredPane13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTabbedPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jLayeredPane13Layout.createSequentialGroup()
                            .addGap(42, 42, 42)
                            .addComponent(btnAgregarProdOT)
                            .addGap(5, 5, 5)
                            .addComponent(btnBorrarProducto1)
                            .addGap(5, 5, 5)
                            .addComponent(btnCalcularValores)))
                    .addGap(2, 2, 2)
                    .addGroup(jLayeredPane13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTabbedPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jLayeredPane13Layout.createSequentialGroup()
                            .addGap(220, 220, 220)
                            .addComponent(btnConfirmarVolver)))
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jLayeredPane13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane13Layout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(jLabel65, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );
        jLayeredPane13.setLayer(jTabbedPane16, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane13.setLayer(jTabbedPane14, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane13.setLayer(jTabbedPane17, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane13.setLayer(btnConfirmarVolver, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane13.setLayer(btnCalcularValores, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane13.setLayer(btnBorrarProducto1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane13.setLayer(btnAgregarProdOT, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane13.setLayer(jLabel65, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout AgregarProductoOTLayout = new javax.swing.GroupLayout(AgregarProductoOT.getContentPane());
        AgregarProductoOT.getContentPane().setLayout(AgregarProductoOTLayout);
        AgregarProductoOTLayout.setHorizontalGroup(
            AgregarProductoOTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AgregarProductoOTLayout.createSequentialGroup()
                .addComponent(jLayeredPane13)
                .addGap(0, 0, 0))
        );
        AgregarProductoOTLayout.setVerticalGroup(
            AgregarProductoOTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane13, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel33.setBackground(new Color(0, 0, 0, 0));
        jPanel33.setBackground(new java.awt.Color(0, 153, 153));

        btnVolver4.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnVolver4.setText("Volver");
        btnVolver4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolver4ActionPerformed(evt);
            }
        });

        jTabbedPane3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTabbedPane3.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N

        jScrollPane7.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel12.setBackground(new java.awt.Color(0, 153, 153));

        jPanel21.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel93.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel93.setText("Información de la empresa:");

        jLabel102.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel102.setText("Información del Demandante:");

        jLabel103.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel103.setText("Información de Orden:");

        jLabel113.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel113.setText("Detalle de Orden:");

        tblProductosOrdenCompra = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int celIndex){
                return false;
            }
        };
        tblProductosOrdenCompra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código de Producto", "Producto", "Cantidad", "Especificación de Comprador", "Especificación de Proveedor", "Moneda", "Precio Unitario", "Cargos", "Descuento", "Valor Total"
            }
        ));
        jScrollPane13.setViewportView(tblProductosOrdenCompra);

        jTabbedPane9.addTab("Información de Productos", jScrollPane13);

        //btnAddProductoOT.setVisible(false);
        //btnAddProductoOT.setEnabled(false);
        btnAddProductoOT.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnAddProductoOT.setText("Añadir Producto a Lista");
        btnAddProductoOT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProductoOTActionPerformed(evt);
            }
        });

        jLabel77.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel77.setForeground(new java.awt.Color(255, 51, 51));
        jLabel77.setText("*Se añadirá un campo en blanco para rellenar con la información de producto");

        btnBorrarProducto.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnBorrarProducto.setText("Borrar Producto");
        btnBorrarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarProductoActionPerformed(evt);
            }
        });

        btnGenerarOrden1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnGenerarOrden1.setText("Guardar Orden de Compra");
        btnGenerarOrden1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarOrden1ActionPerformed(evt);
            }
        });

        jPanel34.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel100.setText("Estado:");

        jLabel101.setText("Teléfono:");

        jLabel97.setText("Dirección Demandante:");

        jLabel96.setText("Rut de Comprador:");

        jLabel98.setText("Demandante:");

        jLabel114.setText("Unidad de Compra:");

        jLabel99.setText("Fecha de Envio OC:");

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel34Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel100)
                    .addComponent(jLabel97)
                    .addComponent(jLabel101)
                    .addComponent(jLabel96))
                .addGap(10, 10, 10)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTelefonoComprador, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                    .addComponent(txtDireccionDemandanteOC)
                    .addComponent(txtRutCompradorOC)
                    .addComponent(txtEstadoOC))
                .addGap(39, 39, 39)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel99)
                    .addComponent(jLabel98)
                    .addComponent(jLabel114))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtUnidadCompraCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                    .addComponent(txtFechaEnvioOc)
                    .addComponent(txtNombreDemandanteOC))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel34Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel98)
                    .addComponent(txtNombreDemandanteOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel96)
                    .addComponent(txtRutCompradorOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel114)
                    .addComponent(txtUnidadCompraCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel97)
                    .addComponent(txtDireccionDemandanteOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel99)
                    .addComponent(txtFechaEnvioOc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel101)
                    .addComponent(txtTelefonoComprador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEstadoOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel100))
                .addContainerGap())
        );

        jPanel36.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel90.setText("Proveedor:");

        javax.swing.GroupLayout jPanel36Layout = new javax.swing.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel36Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel90)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtProveedorOC, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel36Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProveedorOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel90))
                .addContainerGap())
        );

        jPanel37.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel104.setText("Nombre de Orden de Compra:");

        txtNombreOrdenCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreOrdenCompraActionPerformed(evt);
            }
        });

        jLabel105.setText("Fecha de Entrega Productos:");

        jLabel106.setText("Direcciones de Despacho:");

        txtDireccionesDespachoOC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionesDespachoOCActionPerformed(evt);
            }
        });

        txtDireccionEnvioFacturaOC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionEnvioFacturaOCActionPerformed(evt);
            }
        });

        jLabel107.setText("Dirección de Envío de factura:");

        jLabel112.setText("Mail de envío de factura:");

        jLabel108.setText("Metodo de Despacho:");

        jLabel110.setText("Forma de Pago:");

        jLabel109.setText("Contacto de Pago:");

        jLabel111.setText("Contacto OC:");

        jLabel42.setText("Código de Orden de Compra:");

        javax.swing.GroupLayout jPanel37Layout = new javax.swing.GroupLayout(jPanel37);
        jPanel37.setLayout(jPanel37Layout);
        jPanel37Layout.setHorizontalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel37Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel107)
                    .addComponent(jLabel112)
                    .addComponent(jLabel106)
                    .addComponent(jLabel105)
                    .addComponent(jLabel104, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtDireccionEnvioFacturaOC, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                    .addComponent(txtDireccionesDespachoOC, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFechaEntregaProductoOC, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNombreOrdenCompra, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMailEnvioFactura))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel37Layout.createSequentialGroup()
                        .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel110)
                            .addComponent(jLabel108)
                            .addComponent(jLabel109)
                            .addComponent(jLabel111, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtFormaPagoOC, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE)
                            .addComponent(txtContactoPagoOC, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtContactoOC, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMetodoDespachoOC))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel37Layout.createSequentialGroup()
                        .addComponent(jLabel42)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodigoOCOT)))
                .addContainerGap())
        );
        jPanel37Layout.setVerticalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel37Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel104)
                    .addComponent(txtNombreOrdenCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel108)
                    .addComponent(txtMetodoDespachoOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFechaEntregaProductoOC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel105)
                        .addComponent(txtFormaPagoOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel110)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDireccionesDespachoOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel109)
                    .addComponent(txtContactoPagoOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel106))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel107)
                    .addComponent(txtDireccionEnvioFacturaOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel111)
                    .addComponent(txtContactoOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMailEnvioFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel112)
                    .addComponent(jLabel42)
                    .addComponent(txtCodigoOCOT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel22.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel115.setText("Neto:");

        jLabel116.setText("Dcto:");

        jLabel117.setText("Cargos:");

        jLabel118.setText("Subtotal:");

        jLabel119.setText("19% IVA:");

        jLabel120.setText("Impuesto Especifico:");

        jLabel121.setText("Total:");

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel118)
                    .addComponent(jLabel117)
                    .addComponent(jLabel116)
                    .addComponent(jLabel115))
                .addGap(59, 59, 59)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCargosOC)
                    .addComponent(txtSubtotalOC)
                    .addComponent(txtDCTOOC)
                    .addComponent(txtNetoOC, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel121)
                    .addComponent(jLabel119)
                    .addComponent(jLabel120))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtImpuestoEspecifico, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                    .addComponent(txtTotalOC, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtIVAOC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel78, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel115)
                    .addComponent(txtNetoOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel78)
                    .addComponent(jLabel119)
                    .addComponent(txtIVAOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel116)
                    .addComponent(txtDCTOOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel120)
                    .addComponent(txtImpuestoEspecifico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel117)
                    .addComponent(txtCargosOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel121)
                    .addComponent(txtTotalOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel118)
                    .addComponent(txtSubtotalOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                                .addComponent(jLabel113)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDescripcionOC))
                            .addComponent(jTabbedPane9)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel21Layout.createSequentialGroup()
                                        .addComponent(btnAddProductoOT)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnBorrarProducto))
                                    .addComponent(jLabel77))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel21Layout.createSequentialGroup()
                                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jPanel37, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jPanel36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, 1157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addComponent(btnGenerarOrden1)
                    .addComponent(jLabel103)
                    .addComponent(jLabel102)
                    .addComponent(jLabel93)))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel102)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel93)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel103)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel37, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddProductoOT)
                            .addComponent(btnBorrarProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel77)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDescripcionOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel113))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGenerarOrden1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel38.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        rdbOCMP.setSelected(true);
        rdbOCMP.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        rdbOCMP.setText("Orden para Mercado Público");
        rdbOCMP.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdbOCMPItemStateChanged(evt);
            }
        });
        rdbOCMP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbOCMPActionPerformed(evt);
            }
        });

        rdbOCOtro.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        rdbOCOtro.setText("Orden para otras entidades");
        rdbOCOtro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdbOCOtroItemStateChanged(evt);
            }
        });

        lblCodigoOCTitulo.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lblCodigoOCTitulo.setText("Número de Orden de Compra");

        txtConsultarOC.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N

        btnConsultarOC.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnConsultarOC.setText("Consultar");
        btnConsultarOC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarOCActionPerformed(evt);
            }
        });

        jLabel56.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel56.setForeground(new java.awt.Color(255, 51, 51));
        jLabel56.setText("*Solo consultar en caso de que haya una orden de compra de Mercado Público");
        jLabel56.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout jPanel38Layout = new javax.swing.GroupLayout(jPanel38);
        jPanel38.setLayout(jPanel38Layout);
        jPanel38Layout.setHorizontalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel38Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel38Layout.createSequentialGroup()
                        .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel56)
                            .addGroup(jPanel38Layout.createSequentialGroup()
                                .addComponent(lblCodigoOCTitulo)
                                .addGap(12, 12, 12)
                                .addComponent(txtConsultarOC, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnConsultarOC, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel38Layout.createSequentialGroup()
                        .addComponent(rdbOCMP)
                        .addGap(18, 18, 18)
                        .addComponent(rdbOCOtro)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel38Layout.setVerticalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel38Layout.createSequentialGroup()
                .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbOCMP)
                    .addComponent(rdbOCOtro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblCodigoOCTitulo)
                    .addComponent(txtConsultarOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConsultarOC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel56)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(79, 79, 79))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane7.setViewportView(jPanel12);

        jTabbedPane3.addTab("Generar orden de trabajo", jScrollPane7);

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel33Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnVolver4)
                .addContainerGap())
            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel33Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jTabbedPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1230, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnVolver4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel33Layout.createSequentialGroup()
                    .addGap(46, 46, 46)
                    .addComponent(jTabbedPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        lblFondoOrdenTrabajo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jLayeredPane4Layout = new javax.swing.GroupLayout(jLayeredPane4);
        jLayeredPane4.setLayout(jLayeredPane4Layout);
        jLayeredPane4Layout.setHorizontalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblFondoOrdenTrabajo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jLayeredPane4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );
        jLayeredPane4Layout.setVerticalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblFondoOrdenTrabajo, javax.swing.GroupLayout.DEFAULT_SIZE, 686, Short.MAX_VALUE)
            .addGroup(jLayeredPane4Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jPanel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jLayeredPane4.setLayer(jPanel33, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(lblFondoOrdenTrabajo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane4)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane4)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolver4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolver4ActionPerformed
        this.dispose();
        txtProveedorOC.setText("");
        txtRutCompradorOC.setText("");
        txtDireccionDemandanteOC.setText("");
        txtTelefonoComprador.setText("");
        txtNombreDemandanteOC.setText("");
        txtUnidadCompraCliente.setText("");
        txtFechaEnvioOc.setText("");
        txtEstadoOC.setText("");
        txtCodigoOCOT.setText("");
        txtNombreOrdenCompra.setText("");
        txtFechaEntregaProductoOC.setText("");
        txtDireccionesDespachoOC.setText("");
        txtDireccionEnvioFacturaOC.setText("");
        txtMetodoDespachoOC.setText("");
        txtContactoPagoOC.setText("");
        txtFormaPagoOC.setText("");
        txtContactoOC.setText("");
        txtMailEnvioFactura.setText("");
        txtCargosOC.setText("");
        txtNetoOC.setText("");
        txtDCTOOC.setText("");
        txtSubtotalOC.setText("");
        txtIVAOC.setText("");
        txtImpuestoEspecifico.setText("");
        txtTotalOC.setText("");
    }//GEN-LAST:event_btnVolver4ActionPerformed

    private void btnAddProductoOTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProductoOTActionPerformed
        try {
            AgregarProductoOT.setVisible(true);
            this.setVisible(false);
            String queryProducto = "Select inv.idProducto as 'ID producto', inv.SKU, inv.categoria as 'Categoría', inv.nombreProducto as 'Producto',\n"
                    + "inv.descripcion as 'Descripción' ,inv.precioVenta as 'Precio Venta',inv.StatusProducto as 'Estado', inv.stock as 'Stock en la bodega'\n"
                    + "FROM inventario inv;";
            PreparedStatement pstProducto = cn.prepareStatement(queryProducto);
            ResultSet rsProducto = pstProducto.executeQuery();
            tblAgregarProdOT.setModel(DbUtils.resultSetToTableModel(rsProducto));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
        }
        try {
            TableModel cotizacion = tblProductosOrdenCompra.getModel();
            int indexs[] = tblProductosOrdenCompra.getSelectedRows();
            Object[] row = new Object[14];
            DefaultTableModel modeloNuevo = (DefaultTableModel) tblProdadd.getModel();
            TableModel modelo = tblProductosOrdenCompra.getModel();
            int selectedRows[] = tblProductosOrdenCompra.getSelectedRows();
            for (int i = 0; i < indexs.length; i++) {
                row[0] = cotizacion.getValueAt(indexs[i], 0);
                row[1] = cotizacion.getValueAt(indexs[i], 1);
                row[2] = cotizacion.getValueAt(indexs[i], 2);
                row[3] = cotizacion.getValueAt(indexs[i], 3);
                row[4] = cotizacion.getValueAt(indexs[i], 4);
                row[5] = cotizacion.getValueAt(indexs[i], 5);
                row[6] = cotizacion.getValueAt(indexs[i], 6);
                row[7] = cotizacion.getValueAt(indexs[i], 7);
                row[8] = cotizacion.getValueAt(indexs[i], 8);
                row[9] = cotizacion.getValueAt(indexs[i], 9);
                modeloNuevo.addRow(row);
            }
            //JOptionPane.showMessageDialog(null, "Productos Agregados a OT");
            btnBorrarProducto.setEnabled(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnAddProductoOTActionPerformed

    private void btnBorrarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarProductoActionPerformed
        DefaultTableModel modeloTabla = (DefaultTableModel) tblProductosOrdenCompra.getModel();
        // Se obtiene el numero de columna seleccionado
        try {
            int seleccion = tblProductosOrdenCompra.getSelectedRow();
            //Se borra
            modeloTabla.removeRow(seleccion);
            if (tblProductosOrdenCompra.getRowCount() == 0) {
                btnBorrarProducto.setEnabled(false);
            }
            JOptionPane.showMessageDialog(null, "Producto borrado de Orden de Compra");
            btnBorrarProducto.setEnabled(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnBorrarProductoActionPerformed

    private void btnGenerarOrden1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarOrden1ActionPerformed
        try {
            if (txtDescripcionOC.getText().equals("") || txtDescripcionOC.getText() == null) {
                JOptionPane.showMessageDialog(null, "El campo detalle se encuentra vacío");
            } else {
                String msgConfirmacion = JOptionPane.showInputDialog("Ingrese Código de Autorización");
                String validar = msgConfirmacion;
                if (validar.equals("1")) {
                    if (rdbOCMP.isSelected()) {
                        try {
                            String query = "INSERT INTO `acimabasededatos`.`ordentrabajo` (`idOrden`,`codigoOrdenCompra`,`nombre_proveedor` ,`rutCliente`,"
                                    + " `DireccionDemandante`, `Telefono`, `Demandante`,"
                                    + " `UnidadCompra`, `fechaEnvioOC`, `codigoEstado`, `nombreOrdenCompra`, `fechaEntregaProductos`, `direccionesDespacho`, `direccionEnvioFactura`, "
                                    + "`tipoDespacho`, `contactoPago`, `formaPago`, `contactoOC`, `emailEnvioFactura`,`neto`, `dcto`, `subtotal`, "
                                    + "`iva`, `impuestoEspecifico`, `total`,`codigo_autorizacion`)"
                                    + "VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                            PreparedStatement pst;
                            pst = cn.prepareStatement(query);
                            pst.setInt(1, Integer.parseInt(txtConsultarOC.getText()));
                            pst.setString(2, txtCodigoOCOT.getText().toUpperCase());
                            pst.setString(3, txtProveedorOC.getText());
                            pst.setString(4, txtRutCompradorOC.getText());
                            pst.setString(5, txtDireccionDemandanteOC.getText());
                            pst.setString(6, txtTelefonoComprador.getText());
                            pst.setString(7, txtNombreDemandanteOC.getText());
                            pst.setString(8, txtUnidadCompraCliente.getText());
                            pst.setString(9, txtFechaEnvioOc.getText());
                            pst.setString(10, txtEstadoOC.getText());
                            pst.setString(11, txtNombreOrdenCompra.getText());
                            pst.setString(12, txtFechaEntregaProductoOC.getText());
                            pst.setString(13, txtDireccionesDespachoOC.getText());
                            pst.setString(14, txtDireccionEnvioFacturaOC.getText());
                            pst.setString(15, txtMetodoDespachoOC.getText());
                            pst.setString(16, txtContactoPagoOC.getText());
                            pst.setString(17, txtFormaPagoOC.getText());
                            pst.setString(18, txtContactoOC.getText());
                            pst.setString(19, txtMailEnvioFactura.getText());
                            pst.setString(20, txtNetoOC.getText());
                            pst.setString(21, txtDCTOOC.getText());
                            pst.setString(22, txtSubtotalOC.getText());
                            pst.setString(23, txtIVAOC.getText());
                            pst.setString(24, txtImpuestoEspecifico.getText());
                            pst.setString(25, txtTotalOC.getText());
                            pst.setInt(26, Integer.parseInt(validar));
                            int up = pst.executeUpdate();
                            int selectedRows = tblProductosOrdenCompra.getRowCount();
                            for (int i = 0; i < selectedRows; i++) {
                                String queryDetalle = "INSERT INTO `acimabasededatos`.`detalleordentrabajo` (`idOrden`,"
                                        + "`codigoProducto`, `nombreProducto`, `cantidad`,`moneda`,"
                                        + " `precioUnitario`, `descuento`, `cargos`, `valorTotal`) "
                                        + " VALUES(?,?,?,?,?,?,?,?,?);";
                                PreparedStatement pstDetalle = cn.prepareStatement(queryDetalle);
                                pstDetalle.setInt(1, Integer.parseInt(txtConsultarOC.getText()));
                                pstDetalle.setString(2, tblProductosOrdenCompra.getValueAt(i, 0).toString());
                                pstDetalle.setString(3, (tblProductosOrdenCompra.getValueAt(i, 1).toString()));
                                pstDetalle.setString(4, (tblProductosOrdenCompra.getValueAt(i, 2).toString()));
                                pstDetalle.setString(5, (tblProductosOrdenCompra.getValueAt(i, 5).toString()));
                                pstDetalle.setString(6, (tblProductosOrdenCompra.getValueAt(i, 6).toString()));
                                pstDetalle.setString(7, (tblProductosOrdenCompra.getValueAt(i, 7).toString()));
                                pstDetalle.setString(8, (tblProductosOrdenCompra.getValueAt(i, 8).toString()));
                                pstDetalle.setString(9, (tblProductosOrdenCompra.getValueAt(i, 9).toString()));
                                int upDetalle = pstDetalle.executeUpdate();

                            }
                            JOptionPane.showMessageDialog(null, "Se ha ingresado la orden de trabajo para la Orden de Compra");
                            JOptionPane.showMessageDialog(null, "Orden de Trabajo almacenada");
                        } catch (SQLException | NumberFormatException | HeadlessException ex) {
                            JOptionPane.showMessageDialog(null, ex);
                        }
                    } else if (rdbOCOtro.isSelected()) {
                        try {
                            String query = "INSERT INTO `acimabasededatos`.`ordentrabajo` (`codigoOrdenCompra`,`nombre_proveedor` ,`rutCliente`, `DireccionDemandante`, `Telefono`, `Demandante`,"
                                    + " `UnidadCompra`, `fechaEnvioOC`, `codigoEstado`, `nombreOrdenCompra`, `fechaEntregaProductos`, `direccionesDespacho`, `direccionEnvioFactura`, "
                                    + "`tipoDespacho`, `contactoPago`, `formaPago`, `contactoOC`, `emailEnvioFactura`,`neto`, `dcto`, `subtotal`, "
                                    + "`iva`, `impuestoEspecifico`, `total`,`codigo_autorizacion`)"
                                    + "VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                            PreparedStatement pst;
                            pst = cn.prepareStatement(query);
                            pst.setString(1, "No Aplica");
                            pst.setString(2, txtProveedorOC.getText());
                            pst.setString(3, txtRutCompradorOC.getText());
                            pst.setString(4, txtNombreDemandanteOC.getText());
                            pst.setString(5, txtTelefonoComprador.getText());
                            pst.setString(6, txtNombreDemandanteOC.getText());
                            pst.setString(7, txtUnidadCompraCliente.getText());
                            pst.setString(8, txtFechaEnvioOc.getText());
                            pst.setString(9, txtEstadoOC.getText());
                            pst.setString(10, txtNombreOrdenCompra.getText());
                            pst.setString(11, txtFechaEntregaProductoOC.getText());
                            pst.setString(12, txtDireccionesDespachoOC.getText());
                            pst.setString(13, txtDireccionEnvioFacturaOC.getText());
                            pst.setString(14, txtMetodoDespachoOC.getText());
                            pst.setString(15, txtContactoPagoOC.getText());
                            pst.setString(16, txtFormaPagoOC.getText());
                            pst.setString(17, txtContactoOC.getText());
                            pst.setString(18, txtMailEnvioFactura.getText());
                            pst.setString(19, txtNetoOC.getText());
                            pst.setString(20, txtDCTOOC.getText());
                            pst.setString(21, txtSubtotalOC.getText());
                            pst.setString(22, txtIVAOC.getText());
                            pst.setString(23, txtImpuestoEspecifico.getText());
                            pst.setString(24, txtTotalOC.getText());
                            pst.setInt(25, Integer.parseInt(validar));
                            int up = pst.executeUpdate();
                            int selectedRows = tblProductosOrdenCompra.getRowCount();
                            for (int i = 0; i < selectedRows; i++) {
                                String sub = tblProductosOrdenCompra.getValueAt(i, 1).toString();
                                sub = sub.substring(sub.indexOf("(") + 1);
                                sub = sub.substring(0, sub.indexOf(")"));
                                System.out.println(sub);
                                String queryDetalle = "INSERT INTO `acimabasededatos`.`detalleordentrabajo` (`idOrdenTrabajo`,"
                                        + "`codigoProducto`, `nombreProducto`, `cantidad`,"
                                        + " `precioUnitario`, `descuento`, `cargos`, `valorTotal`) "
                                        + " VALUES(?,?,?,?,?,?,?,?);";
                                PreparedStatement pstDetalle = cn.prepareStatement(queryDetalle);
                                pstDetalle.setString(1, txtConsultarOC.getText().toUpperCase());
                                pstDetalle.setString(2, sub);
                                pstDetalle.setString(3, (tblProductosOrdenCompra.getValueAt(i, 1).toString()));
                                pstDetalle.setString(4, (tblProductosOrdenCompra.getValueAt(i, 2).toString()));
                                pstDetalle.setString(5, (tblProductosOrdenCompra.getValueAt(i, 5).toString()));
                                pstDetalle.setString(6, (tblProductosOrdenCompra.getValueAt(i, 6).toString()));
                                pstDetalle.setString(7, (tblProductosOrdenCompra.getValueAt(i, 7).toString()));
                                int upDetalle = pstDetalle.executeUpdate();
                                JOptionPane.showMessageDialog(null, "Se ha ingresado la orden de trabajo para la Orden de Compra");
                            }
                            JOptionPane.showMessageDialog(null, "Orden de Trabajo almacenada");
                        } catch (SQLException | NumberFormatException | HeadlessException ex) {
                            JOptionPane.showMessageDialog(null, ex);
                        }
                    } else if (rdbOCMP.isSelected() == false && rdbOCOtro.isSelected() == false) {
                        JOptionPane.showMessageDialog(null, "Debe seleccionar una de las opciones de ingreso");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Código de Validación no es correcto");
                }
            }
        } catch (HeadlessException | NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error");
        }
    }//GEN-LAST:event_btnGenerarOrden1ActionPerformed

    private void txtNombreOrdenCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreOrdenCompraActionPerformed

    }//GEN-LAST:event_txtNombreOrdenCompraActionPerformed

    private void txtDireccionesDespachoOCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionesDespachoOCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionesDespachoOCActionPerformed

    private void txtDireccionEnvioFacturaOCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionEnvioFacturaOCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionEnvioFacturaOCActionPerformed

    private void rdbOCMPItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdbOCMPItemStateChanged
        if (rdbOCMP.isSelected()) {
            btnAddProductoOT.setVisible(true);
            btnAddProductoOT.setEnabled(true);
            lblCodigoOCTitulo.setVisible(true);
            txtConsultarOC.setVisible(true);
            btnConsultarOC.setVisible(true);
            btnConsultarOC.setEnabled(true);
        }
    }//GEN-LAST:event_rdbOCMPItemStateChanged

    private void rdbOCMPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbOCMPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbOCMPActionPerformed

    private void rdbOCOtroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdbOCOtroItemStateChanged
        if (rdbOCOtro.isSelected()) {
            btnAddProductoOT.setVisible(true);
            btnAddProductoOT.setEnabled(true);
            btnConsultarOC.setEnabled(false);
            lblCodigoOCTitulo.setVisible(false);
            txtConsultarOC.setVisible(false);
            btnConsultarOC.setVisible(false);
            btnAddProductoOT.setEnabled(true);
        }
    }//GEN-LAST:event_rdbOCOtroItemStateChanged

    private void btnConsultarOCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarOCActionPerformed
        try {
            String tipoOrden = "";
            //JOptionPane.showMessageDialog(null, "La Orden de Compra se encuentra en la base de datos");
            //Consulta de BD
            String query = "SELECT * FROM acimabasededatos.ordenDecompra oc join detalleordencompra doc on oc.codigoordencompra = doc.codigoordencompra join acimabasededatos.glosarioformapago gfp on oc.idFormaPago=gfp.idFormaPago\n"
                    + "join acimabasededatos.glosariotipodespacho gtd on oc.idTipoDespacho = gtd.idTipoDespacho\n"
                    + "where oc.idorden=?;";
            PreparedStatement pst = cn.prepareStatement(query);
            pst.setString(1, txtConsultarOC.getText());
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                txtProveedorOC.setText(rs.getString("nombre_proveedor"));
                txtRutCompradorOC.setText(rs.getString("rutCliente"));
                txtDireccionDemandanteOC.setText(rs.getString("direcciondemandante"));
                txtTelefonoComprador.setText(rs.getString("telefono"));
                txtNombreDemandanteOC.setText(rs.getString("demandante"));
                txtUnidadCompraCliente.setText(rs.getString("unidadcompra"));
                txtFechaEnvioOc.setText(rs.getString("fechaenviooc"));
                txtEstadoOC.setText(rs.getString("codigoestado"));
                txtCodigoOCOT.setText(rs.getString("codigoordencompra"));
                txtNombreOrdenCompra.setText(rs.getString("nombreordencompra"));
                txtFechaEntregaProductoOC.setText(rs.getString("fechaentregaproductos"));
                txtDireccionesDespachoOC.setText(rs.getString("direccionesdespacho"));
                txtDireccionEnvioFacturaOC.setText(rs.getString("direccionEnvioFactura"));
                txtMetodoDespachoOC.setText(rs.getString("gtd.descripcion"));
                txtContactoPagoOC.setText(rs.getString("contactoPago"));
                txtFormaPagoOC.setText(rs.getString("gfp.descripcion"));
                txtContactoOC.setText(rs.getString("contactoOC"));
                txtMailEnvioFactura.setText(rs.getString("emailEnvioFactura"));
                txtCargosOC.setText(rs.getString("doc.cargos"));
                txtNetoOC.setText(rs.getString("neto"));
                txtDCTOOC.setText(rs.getString("dcto"));
                txtSubtotalOC.setText(rs.getString("subtotal"));
                txtIVAOC.setText(rs.getString("iva"));
                txtImpuestoEspecifico.setText(rs.getString("impuestoEspecifico"));
                txtTotalOC.setText(rs.getString("total"));
            }
            String queryProducto = "Select doc.codigoProducto as 'Código de Producto',\n"
                    + "SUBSTRING_INDEX(doc.nombreProducto, ')', -1) as 'Nombre de Producto',doc.cantidad as 'Cantidad',\n"
                    + "oc.especificacionComprador as 'Especificación de Comprador',oc.especificacionProveedor as 'Especificación de Proveedor',\n"
                    + "oc.moneda,doc.precioUnitario as 'Precio Unitario', doc.descuento as 'Descuento',\n"
                    + "doc.cargos as 'Cargos', doc.valorTotal as 'Valor Total' from detalleordencompra doc\n"
                    + "join ordendecompra oc on doc.codigoordencompra = oc.codigoordencompra\n"
                    + "where oc.idOrden=?";
            PreparedStatement pstProd = cn.prepareStatement(queryProducto);
            pstProd.setString(1, txtConsultarOC.getText());
            ResultSet rsProd = pstProd.executeQuery();
            tblProductosOrdenCompra.setModel(DbUtils.resultSetToTableModel(rsProd));
            System.out.println("La consulta fue realizada con éxito");
            /*
             txtProveedorOC.setText("");
             txtRutCompradorOC.setText("");
             txtDireccionDemandanteOC.setText("");
             txtTelefonoComprador.setText("");
             txtNombreDemandanteOC.setText("");
             txtUnidadCompraCliente.setText("");
             txtFechaEnvioOc.setText("");
             txtEstadoOC.setText("");
             txtCodigoOCOT.setText("");
             txtNombreOrdenCompra.setText("");
             txtFechaEntregaProductoOC.setText("");
             txtDireccionesDespachoOC.setText("");
             txtDireccionEnvioFacturaOC.setText("");
             txtMetodoDespachoOC.setText("");
             txtContactoPagoOC.setText("");
             txtFormaPagoOC.setText("");
             txtContactoOC.setText("");
             txtMailEnvioFactura.setText("");
             txtCargosOC.setText("");
             txtNetoOC.setText("");
             txtDCTOOC.setText("");
             txtSubtotalOC.setText("");
             txtIVAOC.setText("");
             txtImpuestoEspecifico.setText("");
             txtTotalOC.setText("");
             */
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnConsultarOCActionPerformed

    private void txtNombreProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreProductoActionPerformed

    }//GEN-LAST:event_txtNombreProductoActionPerformed

    private void txtNombreProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreProductoKeyPressed
        try {
            String query = "Select inv.idProducto as 'ID producto', inv.SKU, inv.categoria as 'Categoría', inv.nombreProducto as 'Producto',\n"
                    + "inv.descripcion as 'Descripción' ,inv.precioVenta as 'Precio Venta',inv.StatusProducto as 'Estado',\n"
                    + "inv.stock as 'Stock en la bodega', b.nombreBodega as 'Nombre de Bodega'\n"
                    + "FROM inventario inv join bodega b on inv.idBodega = b.idBodega\n"
                    + "where inv.nombreProducto RLIKE 'a';";
            String param = txtNombreProducto.getText();
            PreparedStatement pst = cn.prepareStatement(query);
            pst.setString(1, "%" + param + "%");
            ResultSet rs = pst.executeQuery();
            tblAgregarProdOT.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
        }
    }//GEN-LAST:event_txtNombreProductoKeyPressed

    private void txtIDProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDProductoKeyPressed
        try {
            String query = "Select inv.idProducto as 'ID producto', inv.SKU, inv.categoria as 'Categoría', inv.nombreProducto as 'Producto',\n"
                    + "inv.descripcion as 'Descripción' ,inv.precioVenta as 'Precio Venta',inv.StatusProducto as 'Estado',\n"
                    + "inv.stock as 'Stock en la bodega', b.nombreBodega as 'Nombre de Bodega'\n"
                    + "FROM inventario inv join bodega b on inv.idBodega = b.idBodega\n"
                    + "where inv.idProducto RLIKE 'a';";
            String param = txtIDProducto.getText();
            PreparedStatement pst = cn.prepareStatement(query);
            pst.setString(1, "%" + param + "%");
            ResultSet rs = pst.executeQuery();
            tblAgregarProdOT.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
        }
    }//GEN-LAST:event_txtIDProductoKeyPressed

    private void txtSKUKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSKUKeyPressed
        try {
            String query = "Select inv.idProducto as 'ID producto', inv.SKU, inv.categoria as 'Categoría', inv.nombreProducto as 'Producto',\n"
                    + "inv.descripcion as 'Descripción' ,inv.precioVenta as 'Precio Venta',inv.StatusProducto as 'Estado',\n"
                    + "inv.stock as 'Stock en la bodega', b.nombreBodega as 'Nombre de Bodega'\n"
                    + "FROM inventario inv join bodega b on inv.idBodega = b.idBodega\n"
                    + "where inv.SKU RLIKE 'a';";
            String param = txtSKU.getText();
            PreparedStatement pst = cn.prepareStatement(query);
            pst.setString(1, "%" + param + "%");
            ResultSet rs = pst.executeQuery();
            tblAgregarProdOT.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
        }
    }//GEN-LAST:event_txtSKUKeyPressed

    private void tblAgregarProdOTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAgregarProdOTMouseClicked
        btnCalcularValores.setEnabled(false);
    }//GEN-LAST:event_tblAgregarProdOTMouseClicked

    private void tblProdaddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProdaddMouseClicked
        btnCalcularValores.setEnabled(true);
    }//GEN-LAST:event_tblProdaddMouseClicked

    private void tblProdaddKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblProdaddKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tblProdaddKeyPressed

    private void jTabbedPane14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane14MouseClicked
        if (jTabbedPane14.getSelectedIndex() == 0) {
            btnBorrarProducto1.setEnabled(false);
            //  btnConfirmarInfoProd1.setEnabled(false);
            btnAgregarProdOT.setEnabled(true);
        } else {
            btnAgregarProdOT.setEnabled(false);
            btnBorrarProducto1.setEnabled(true);
            //btnConfirmarInfoProd1.setEnabled(true);
        }
    }//GEN-LAST:event_jTabbedPane14MouseClicked

    private void btnConfirmarVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarVolverActionPerformed
        int resp = JOptionPane.showConfirmDialog(null, "¿Desea agregar más productos?", "La información previa se conservará", JOptionPane.YES_NO_OPTION);
        if (resp == 0) {
            DefaultTableModel modelo = (DefaultTableModel) tblProdadd.getModel();
            int selectedRows = tblProdadd.getSelectedRow();
            String idProducto = "";
            String nombreProducto = "";
            String especComprador = txtEspecificacionComprador.getText();
            String especProveedor = txtEspecificacionProveedor.getText();
            String cantidad = txtCantidad.getText();
            String moneda;
            String valorDolar = "";
            //El calculo de dólares será solo para HW y SW
            if (modelo.getValueAt(selectedRows, 2).toString().equalsIgnoreCase("Hardware, licencias de software y recursos educativos digitales")) {
                lblValorDolar.setEnabled(true);
                lblValorDolar.setVisible(true);
                txtValorDolar.setEnabled(true);
                txtValorDolar.setVisible(true);
                moneda = "USD (Convertido a CLP)";
                valorDolar = txtValorDolar.getText();
                System.out.println(moneda);
                String descuento = txtDescuento.getText();
                String cargos = txtCargos.getText();
                int valorDolarCLP = Integer.parseInt(valorDolar);
                int cantidadProd = Integer.parseInt(cantidad);
                int precioUnitarioProd = 0;
                int precioUnitCalculo = 0;
                int cantidadCalculo = 0;
                int descuentoCalculo = 0;
                int cargosSinCalculo = 0;
                int cargosCalculo = 0;
                int totalCalculo = 0;
                int sumNeto = 0;
                int sumDescuento = 0;
                int sumCargoTotal = 0;
                int sumValorTotal = 0;
                int selectedRow[] = tblProdadd.getSelectedRows();
                for (int i : selectedRow) {
                    idProducto = tblProdadd.getValueAt(i, 0).toString();
                    nombreProducto = tblProdadd.getValueAt(i, 1).toString();
                    cantidadProd = Integer.parseInt(cantidad);
                    precioUnitarioProd = Integer.parseInt(tblProdadd.getValueAt(i, 7).toString());
                    precioUnitarioProd = (precioUnitarioProd * cantidadProd) * valorDolarCLP;
                    cargosSinCalculo = Integer.parseInt(cargos);
                    cargosCalculo = Integer.parseInt(cargos);
                    cargosCalculo = precioUnitarioProd + cargosCalculo;
                    totalCalculo = cargosCalculo - Integer.parseInt(descuento);
                    tblProdadd.setValueAt(idProducto, i, 0);
                    tblProdadd.setValueAt(nombreProducto, i, 1);
                    tblProdadd.setValueAt(cantidadProd, i, 3);
                    tblProdadd.setValueAt(especComprador, i, 4);
                    tblProdadd.setValueAt(especProveedor, i, 5);
                    tblProdadd.setValueAt(moneda, i, 6);
                    tblProdadd.setValueAt(cargosSinCalculo, i, 8);
                    tblProdadd.setValueAt(descuento, i, 9);
                    tblProdadd.setValueAt(totalCalculo, i, 10);
                    sumNeto = Integer.parseInt(tblProdadd.getValueAt(i, 7).toString());
                    sumDescuento = Integer.parseInt(tblProdadd.getValueAt(i, 9).toString());
                    sumCargoTotal = Integer.parseInt(tblProdadd.getValueAt(i, 8).toString());
                    sumValorTotal = Integer.parseInt(tblProdadd.getValueAt(i, 10).toString());
                    /*
                     txtNetoOC.setText(Integer.toString(sumNeto));
                     txtDCTOOC.setText(Integer.toString(sumDescuento));
                     txtCargosOC.setText(Integer.toString(sumCargoTotal));
                     tblProdadd.setModel(modelo
                     */
                }
            } else {
                moneda = "CLP";
                lblValorDolar.setEnabled(false);
                lblValorDolar.setVisible(false);
                txtValorDolar.setEnabled(false);
                txtValorDolar.setVisible(false);
                System.out.println(moneda);
                String descuento = txtDescuento.getText();
                String cargos = txtCargos.getText();
                int cantidadProd = Integer.parseInt(cantidad);
                int precioUnitarioProd = 0;
                int precioUnitCalculo = 0;
                int cantidadCalculo = 0;
                int descuentoCalculo = 0;
                int cargosSinCalculo = 0;
                int cargosCalculo = 0;
                int totalCalculo = 0;
                int sumNeto = 0;
                int sumDescuento = 0;
                int sumCargoTotal = 0;
                int sumValorTotal = 0;
                int selectedRow[] = tblProdadd.getSelectedRows();
                for (int i : selectedRow) {
                    idProducto = tblProdadd.getValueAt(i, 0).toString();
                    nombreProducto = tblProdadd.getValueAt(i, 1).toString();
                    cantidadProd = Integer.parseInt(cantidad);
                    precioUnitarioProd = Integer.parseInt(tblProdadd.getValueAt(i, 7).toString());
                    precioUnitarioProd = precioUnitarioProd * cantidadProd;
                    cargosSinCalculo = Integer.parseInt(cargos);
                    cargosCalculo = Integer.parseInt(cargos);
                    cargosCalculo = precioUnitarioProd + cargosCalculo;
                    totalCalculo = cargosCalculo - Integer.parseInt(descuento);
                    tblProdadd.setValueAt(idProducto, i, 0);
                    tblProdadd.setValueAt(nombreProducto, i, 1);
                    tblProdadd.setValueAt(cantidadProd, i, 3);
                    tblProdadd.setValueAt(especComprador, i, 4);
                    tblProdadd.setValueAt(especProveedor, i, 5);
                    tblProdadd.setValueAt(moneda, i, 6);
                    tblProdadd.setValueAt(cargosSinCalculo, i, 8);
                    tblProdadd.setValueAt(descuento, i, 9);
                    tblProdadd.setValueAt(totalCalculo, i, 10);
                    sumNeto = Integer.parseInt(tblProdadd.getValueAt(i, 7).toString());
                    sumDescuento = Integer.parseInt(tblProdadd.getValueAt(i, 9).toString());
                    sumCargoTotal = Integer.parseInt(tblProdadd.getValueAt(i, 8).toString());
                    sumValorTotal = Integer.parseInt(tblProdadd.getValueAt(i, 10).toString());
                    /*
                     txtNetoOC.setText(Integer.toString(sumNeto));
                     txtDCTOOC.setText(Integer.toString(sumDescuento));
                     txtCargosOC.setText(Integer.toString(sumCargoTotal));
                     tblProdadd.setModel(modelo
                     */
                }
            }
            txtCargos.setText("");
            txtEspecificacionComprador.setText("");
            txtEspecificacionProveedor.setText("");
            txtCantidad.setText("");
            txtValorDolar.setText("");
            txtDescuento.setText("");
        } else {
            DefaultTableModel modelo = (DefaultTableModel) tblProdadd.getModel();
            int selectedRows = tblProdadd.getSelectedRow();
            String idProducto = "";
            String nombreProducto = "";
            String especComprador = txtEspecificacionComprador.getText();
            String especProveedor = txtEspecificacionProveedor.getText();
            String cantidad = txtCantidad.getText();
            String moneda;
            String valorDolar = "";
            //El calculo de dólares será solo para HW y SW
            if (modelo.getValueAt(selectedRows, 2).toString().equalsIgnoreCase("Hardware, licencias de software y recursos educativos digitales")) {
                lblValorDolar.setEnabled(true);
                lblValorDolar.setVisible(true);
                txtValorDolar.setEnabled(true);
                txtValorDolar.setVisible(true);
                moneda = "USD (Convertido a CLP)";
                valorDolar = txtValorDolar.getText();
                System.out.println(moneda);
                String descuento = txtDescuento.getText();
                String cargos = txtCargos.getText();
                int valorDolarCLP = Integer.parseInt(valorDolar);
                int cantidadProd = Integer.parseInt(cantidad);
                int precioUnitarioProd = 0;
                int precioUnitCalculo = 0;
                int cantidadCalculo = 0;
                int descuentoCalculo = 0;
                int cargosSinCalculo = 0;
                int cargosCalculo = 0;
                int totalCalculo = 0;
                int sumNeto = 0;
                int sumDescuento = 0;
                int sumCargoTotal = 0;
                int sumValorTotal = 0;
                int selectedRow[] = tblProdadd.getSelectedRows();
                for (int i : selectedRow) {
                    idProducto = tblProdadd.getValueAt(i, 0).toString();
                    nombreProducto = tblProdadd.getValueAt(i, 1).toString();
                    cantidadProd = Integer.parseInt(cantidad);
                    precioUnitarioProd = Integer.parseInt(tblProdadd.getValueAt(i, 7).toString());
                    precioUnitarioProd = (precioUnitarioProd * cantidadProd) * valorDolarCLP;
                    cargosSinCalculo = Integer.parseInt(cargos);
                    cargosCalculo = Integer.parseInt(cargos);
                    cargosCalculo = precioUnitarioProd + cargosCalculo;
                    totalCalculo = cargosCalculo - Integer.parseInt(descuento);
                    tblProdadd.setValueAt(idProducto, i, 0);
                    tblProdadd.setValueAt(nombreProducto, i, 1);
                    tblProdadd.setValueAt(cantidadProd, i, 3);
                    tblProdadd.setValueAt(especComprador, i, 4);
                    tblProdadd.setValueAt(especProveedor, i, 5);
                    tblProdadd.setValueAt(moneda, i, 6);
                    tblProdadd.setValueAt(cargosSinCalculo, i, 8);
                    tblProdadd.setValueAt(descuento, i, 9);
                    tblProdadd.setValueAt(totalCalculo, i, 10);
                    sumNeto = Integer.parseInt(tblProdadd.getValueAt(i, 7).toString());
                    sumDescuento = Integer.parseInt(tblProdadd.getValueAt(i, 9).toString());
                    sumCargoTotal = Integer.parseInt(tblProdadd.getValueAt(i, 8).toString());
                    sumValorTotal = Integer.parseInt(tblProdadd.getValueAt(i, 10).toString());
                    /*
                     txtNetoOC.setText(Integer.toString(sumNeto));
                     txtDCTOOC.setText(Integer.toString(sumDescuento));
                     txtCargosOC.setText(Integer.toString(sumCargoTotal));
                     tblProdadd.setModel(modelo
                     */
                }
            } else {
                moneda = "CLP";
                lblValorDolar.setEnabled(false);
                lblValorDolar.setVisible(false);
                txtValorDolar.setEnabled(false);
                txtValorDolar.setVisible(false);
                System.out.println(moneda);
                String descuento = txtDescuento.getText();
                String cargos = txtCargos.getText();
                int cantidadProd = Integer.parseInt(cantidad);
                int precioUnitarioProd = 0;
                int precioUnitCalculo = 0;
                int cantidadCalculo = 0;
                int descuentoCalculo = 0;
                int cargosSinCalculo = 0;
                int cargosCalculo = 0;
                int totalCalculo = 0;
                int sumNeto = 0;
                int sumDescuento = 0;
                int sumCargoTotal = 0;
                int sumValorTotal = 0;
                int selectedRow[] = tblProdadd.getSelectedRows();
                for (int i : selectedRow) {
                    idProducto = tblProdadd.getValueAt(i, 0).toString();
                    nombreProducto = tblProdadd.getValueAt(i, 1).toString();
                    cantidadProd = Integer.parseInt(cantidad);
                    precioUnitarioProd = Integer.parseInt(tblProdadd.getValueAt(i, 7).toString());
                    precioUnitarioProd = precioUnitarioProd * cantidadProd;
                    cargosSinCalculo = Integer.parseInt(cargos);
                    cargosCalculo = Integer.parseInt(cargos);
                    cargosCalculo = precioUnitarioProd + cargosCalculo;
                    totalCalculo = cargosCalculo - Integer.parseInt(descuento);
                    tblProdadd.setValueAt(idProducto, i, 0);
                    tblProdadd.setValueAt(nombreProducto, i, 1);
                    tblProdadd.setValueAt(cantidadProd, i, 3);
                    tblProdadd.setValueAt(especComprador, i, 4);
                    tblProdadd.setValueAt(especProveedor, i, 5);
                    tblProdadd.setValueAt(moneda, i, 6);
                    tblProdadd.setValueAt(cargosSinCalculo, i, 8);
                    tblProdadd.setValueAt(descuento, i, 9);
                    tblProdadd.setValueAt(totalCalculo, i, 10);
                    sumNeto = Integer.parseInt(tblProdadd.getValueAt(i, 7).toString());
                    sumDescuento = Integer.parseInt(tblProdadd.getValueAt(i, 9).toString());
                    sumCargoTotal = Integer.parseInt(tblProdadd.getValueAt(i, 8).toString());
                    sumValorTotal = Integer.parseInt(tblProdadd.getValueAt(i, 10).toString());
                    /*
                     txtNetoOC.setText(Integer.toString(sumNeto));
                     txtDCTOOC.setText(Integer.toString(sumDescuento));
                     txtCargosOC.setText(Integer.toString(sumCargoTotal));
                     tblProdadd.setModel(modelo
                     */
                }
            }
            try {
                DefaultTableModel reiniciar = (DefaultTableModel) tblProdadd.getModel();
                TableModel cotizacion = tblProdadd.getModel();
                int indexs = tblProdadd.getRowCount();
                Object[] row = new Object[14];
                DefaultTableModel modeloNuevo = (DefaultTableModel) tblProductosOrdenCompra.getModel();
                for (int i = 0; i < indexs; i++) {
                    row[0] = cotizacion.getValueAt(i, 0);
                    row[1] = cotizacion.getValueAt(i, 1);
                    row[2] = cotizacion.getValueAt(i, 3);
                    row[3] = cotizacion.getValueAt(i, 4);
                    row[4] = cotizacion.getValueAt(i, 5);
                    row[5] = cotizacion.getValueAt(i, 6);
                    row[6] = cotizacion.getValueAt(i, 7);
                    row[7] = cotizacion.getValueAt(i, 8);
                    row[8] = cotizacion.getValueAt(i, 9);
                    row[9] = cotizacion.getValueAt(i, 10);
                    modeloNuevo.addRow(row);
                }
                reiniciar.setRowCount(0);
                AgregarProductoOT.dispose();
                this.setVisible(true);
                // ordenTrabajoFrame.setVisible(true);
                JOptionPane.showMessageDialog(null, "Productos Agregados a OT");
                txtCargos.setText("");
                txtEspecificacionComprador.setText("");
                txtEspecificacionProveedor.setText("");
                txtCantidad.setText("");
                txtValorDolar.setText("");
                txtDescuento.setText("");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnConfirmarVolverActionPerformed

    private void btnCalcularValoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularValoresActionPerformed

        DefaultTableModel modelo = (DefaultTableModel) tblProdadd.getModel();
        int selectedRows = tblProdadd.getSelectedRow();
        String idProducto = "";
        String nombreProducto = "";
        String especComprador = txtEspecificacionComprador.getText();
        String especProveedor = txtEspecificacionProveedor.getText();
        String cantidad = txtCantidad.getText();
        String moneda;
        String valorDolar = "";

        //El calculo de dólares será solo para HW y SW
        if (modelo.getValueAt(selectedRows, 2).toString().equalsIgnoreCase("Hardware, licencias de software y recursos educativos digitales")) {
            lblValorDolar.setEnabled(true);
            lblValorDolar.setVisible(true);
            txtValorDolar.setEnabled(true);
            txtValorDolar.setVisible(true);
            moneda = "USD (Convertido a CLP)";
            valorDolar = txtValorDolar.getText();
            System.out.println(moneda);
            String descuento = txtDescuento.getText();
            String cargos = txtCargos.getText();
            int valorDolarCLP = Integer.parseInt(valorDolar);
            int cantidadProd = Integer.parseInt(cantidad);
            int precioUnitarioProd = 0;
            int precioUnitCalculo = 0;
            int cantidadCalculo = 0;
            int descuentoCalculo = 0;
            int cargosSinCalculo = 0;
            int cargosCalculo = 0;
            int totalCalculo = 0;
            int sumNeto = 0;
            int sumDescuento = 0;
            int sumCargoTotal = 0;
            int sumValorTotal = 0;
            int selectedRow[] = tblProdadd.getSelectedRows();
            for (int i : selectedRow) {
                idProducto = tblProdadd.getValueAt(i, 0).toString();
                nombreProducto = tblProdadd.getValueAt(i, 1).toString();
                cantidadProd = Integer.parseInt(cantidad);
                precioUnitarioProd = Integer.parseInt(tblProdadd.getValueAt(i, 7).toString());
                precioUnitarioProd = (precioUnitarioProd * cantidadProd) * valorDolarCLP;
                cargosSinCalculo = Integer.parseInt(cargos);
                cargosCalculo = Integer.parseInt(cargos);
                cargosCalculo = precioUnitarioProd + cargosCalculo;
                totalCalculo = cargosCalculo - Integer.parseInt(descuento);
                tblProdadd.setValueAt(idProducto, i, 0);
                tblProdadd.setValueAt(nombreProducto, i, 1);
                tblProdadd.setValueAt(cantidadProd, i, 3);
                tblProdadd.setValueAt(especComprador, i, 4);
                tblProdadd.setValueAt(especProveedor, i, 5);
                tblProdadd.setValueAt(moneda, i, 6);
                tblProdadd.setValueAt(cargosSinCalculo, i, 8);
                tblProdadd.setValueAt(descuento, i, 9);
                tblProdadd.setValueAt(totalCalculo, i, 10);
                sumNeto = Integer.parseInt(tblProdadd.getValueAt(i, 7).toString());
                sumDescuento = Integer.parseInt(tblProdadd.getValueAt(i, 9).toString());
                sumCargoTotal = Integer.parseInt(tblProdadd.getValueAt(i, 8).toString());
                sumValorTotal = Integer.parseInt(tblProdadd.getValueAt(i, 10).toString());
                /*
                 txtNetoOC.setText(Integer.toString(sumNeto));
                 txtDCTOOC.setText(Integer.toString(sumDescuento));
                 txtCargosOC.setText(Integer.toString(sumCargoTotal));
                 tblProdadd.setModel(modelo
                 */
            }
        } else {
            moneda = "CLP";
            lblValorDolar.setEnabled(false);
            lblValorDolar.setVisible(false);
            txtValorDolar.setEnabled(false);
            txtValorDolar.setVisible(false);
            System.out.println(moneda);
            String descuento = txtDescuento.getText();
            String cargos = txtCargos.getText();
            int cantidadProd = Integer.parseInt(cantidad);
            int precioUnitarioProd = 0;
            int precioUnitCalculo = 0;
            int cantidadCalculo = 0;
            int descuentoCalculo = 0;
            int cargosSinCalculo = 0;
            int cargosCalculo = 0;
            int totalCalculo = 0;
            int sumNeto = 0;
            int sumDescuento = 0;
            int sumCargoTotal = 0;
            int sumValorTotal = 0;
            int selectedRow[] = tblProdadd.getSelectedRows();
            for (int i : selectedRow) {
                idProducto = tblProdadd.getValueAt(i, 0).toString();
                nombreProducto = tblProdadd.getValueAt(i, 1).toString();
                cantidadProd = Integer.parseInt(cantidad);
                precioUnitarioProd = Integer.parseInt(tblProdadd.getValueAt(i, 7).toString());
                precioUnitarioProd = precioUnitarioProd * cantidadProd;
                cargosSinCalculo = Integer.parseInt(cargos);
                cargosCalculo = Integer.parseInt(cargos);
                cargosCalculo = precioUnitarioProd + cargosCalculo;
                totalCalculo = cargosCalculo - Integer.parseInt(descuento);
                tblProdadd.setValueAt(idProducto, i, 0);
                tblProdadd.setValueAt(nombreProducto, i, 1);
                tblProdadd.setValueAt(cantidadProd, i, 3);
                tblProdadd.setValueAt(especComprador, i, 4);
                tblProdadd.setValueAt(especProveedor, i, 5);
                tblProdadd.setValueAt(moneda, i, 6);
                tblProdadd.setValueAt(cargosSinCalculo, i, 8);
                tblProdadd.setValueAt(descuento, i, 9);
                tblProdadd.setValueAt(totalCalculo, i, 10);
                sumNeto = Integer.parseInt(tblProdadd.getValueAt(i, 7).toString());
                sumDescuento = Integer.parseInt(tblProdadd.getValueAt(i, 9).toString());
                sumCargoTotal = Integer.parseInt(tblProdadd.getValueAt(i, 8).toString());
                sumValorTotal = Integer.parseInt(tblProdadd.getValueAt(i, 10).toString());
                /*
                 txtNetoOC.setText(Integer.toString(sumNeto));
                 txtDCTOOC.setText(Integer.toString(sumDescuento));
                 txtCargosOC.setText(Integer.toString(sumCargoTotal));
                 tblProdadd.setModel(modelo
                 */
            }
        }
    }//GEN-LAST:event_btnCalcularValoresActionPerformed

    private void btnBorrarProducto1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarProducto1ActionPerformed
        DefaultTableModel modeloTabla = (DefaultTableModel) tblProdadd.getModel();
        // Se obtiene el numero de columna seleccionado
        try {
            int seleccion = tblProdadd.getSelectedRow();
            //Se borra
            modeloTabla.removeRow(seleccion);
            if (tblProdadd.getRowCount() == 0) {
                btnBorrarProducto1.setEnabled(false);
            }
            JOptionPane.showMessageDialog(null, "Producto borrado de Selección");
            btnBorrarProducto1.setEnabled(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnBorrarProducto1ActionPerformed

    private void btnAgregarProdOTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarProdOTActionPerformed
        try {
            TableModel cotizacion = tblAgregarProdOT.getModel();
            int indexs[] = tblAgregarProdOT.getSelectedRows();
            Object[] row = new Object[14];
            DefaultTableModel modeloNuevo = (DefaultTableModel) tblProdadd.getModel();
            TableModel modelo = tblAgregarProdOT.getModel();
            int selectedRows[] = tblAgregarProdOT.getSelectedRows();
            for (int i = 0; i < indexs.length; i++) {
                row[0] = cotizacion.getValueAt(indexs[i], 0);
                row[1] = cotizacion.getValueAt(indexs[i], 3);
                row[2] = cotizacion.getValueAt(indexs[i], 2);
                row[7] = cotizacion.getValueAt(indexs[i], 5);
                modeloNuevo.addRow(row);
            }
            JOptionPane.showMessageDialog(null, "Productos Agregados a OT");
            btnBorrarProducto.setEnabled(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnAgregarProdOTActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrearOT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrearOT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrearOT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrearOT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrearOT().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame AgregarProductoOT;
    private javax.swing.JButton btnAddProductoOT;
    private javax.swing.JButton btnAgregarProdOT;
    private javax.swing.JButton btnBorrarProducto;
    private javax.swing.JButton btnBorrarProducto1;
    private javax.swing.JButton btnCalcularValores;
    private javax.swing.JButton btnConfirmarVolver;
    private javax.swing.JButton btnConsultarOC;
    private javax.swing.JButton btnGenerarOrden1;
    private javax.swing.JButton btnVolver4;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel103;
    private javax.swing.JLabel jLabel104;
    private javax.swing.JLabel jLabel105;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel108;
    private javax.swing.JLabel jLabel109;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel113;
    private javax.swing.JLabel jLabel114;
    private javax.swing.JLabel jLabel115;
    private javax.swing.JLabel jLabel116;
    private javax.swing.JLabel jLabel117;
    private javax.swing.JLabel jLabel118;
    private javax.swing.JLabel jLabel119;
    private javax.swing.JLabel jLabel120;
    private javax.swing.JLabel jLabel121;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JLayeredPane jLayeredPane13;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane14;
    private javax.swing.JTabbedPane jTabbedPane16;
    private javax.swing.JTabbedPane jTabbedPane17;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTabbedPane jTabbedPane9;
    private javax.swing.JLabel lblCodigoOCTitulo;
    private javax.swing.JLabel lblFondoOrdenTrabajo;
    private javax.swing.JLabel lblNombreProducto;
    private javax.swing.JLabel lblValorDolar;
    private javax.swing.JRadioButton rdbOCMP;
    private javax.swing.JRadioButton rdbOCOtro;
    private javax.swing.JTable tblAgregarProdOT;
    private javax.swing.JTable tblProdadd;
    private javax.swing.JTable tblProductosOrdenCompra;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtCargos;
    private javax.swing.JTextField txtCargosOC;
    private javax.swing.JTextField txtCodigoOCOT;
    public javax.swing.JTextField txtConsultarOC;
    private javax.swing.JTextField txtContactoOC;
    private javax.swing.JTextField txtContactoPagoOC;
    private javax.swing.JTextField txtDCTOOC;
    private javax.swing.JTextField txtDescripcionOC;
    private javax.swing.JTextField txtDescuento;
    private javax.swing.JTextField txtDireccionDemandanteOC;
    private javax.swing.JTextField txtDireccionEnvioFacturaOC;
    private javax.swing.JTextField txtDireccionesDespachoOC;
    private javax.swing.JTextField txtEspecificacionComprador;
    private javax.swing.JTextField txtEspecificacionProveedor;
    private javax.swing.JTextField txtEstadoOC;
    private javax.swing.JTextField txtFechaEntregaProductoOC;
    private javax.swing.JTextField txtFechaEnvioOc;
    private javax.swing.JTextField txtFormaPagoOC;
    private javax.swing.JTextField txtIDProducto;
    private javax.swing.JTextField txtIVAOC;
    private javax.swing.JTextField txtImpuestoEspecifico;
    private javax.swing.JTextField txtMailEnvioFactura;
    private javax.swing.JTextField txtMetodoDespachoOC;
    private javax.swing.JTextField txtNetoOC;
    private javax.swing.JTextField txtNombreDemandanteOC;
    private javax.swing.JTextField txtNombreOrdenCompra;
    private javax.swing.JTextField txtNombreProducto;
    private javax.swing.JTextField txtProveedorOC;
    private javax.swing.JTextField txtRutCompradorOC;
    private javax.swing.JTextField txtSKU;
    private javax.swing.JTextField txtSubtotalOC;
    private javax.swing.JTextField txtTelefonoComprador;
    private javax.swing.JTextField txtTotalOC;
    private javax.swing.JTextField txtUnidadCompraCliente;
    private javax.swing.JTextField txtValorDolar;
    // End of variables declaration//GEN-END:variables
}
