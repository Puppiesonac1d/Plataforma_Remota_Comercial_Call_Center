package PlataformaVentas;

import clases.Conexion;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Diego Alfaro Fierro, Diego González Romàn
 */
public class ClientesRecientes extends javax.swing.JFrame {

    /**
     * Creates new form ClientesRecientes
     */
    String tabla = "SELECT `IDCliente`  AS \"ID Cliente\" , region.`nombreRegion` AS \"Region\", comuna.`NombreComuna` AS \"Comuna\", `Rut`, `Nombre`, o.NombreOrganizacion AS \"Organización\",unidaddecompra.detalle AS \"Detalle\", `Cargo`, `Razon_social` AS \"Razon Social\", `Correo`  AS \"Correo\", `Telefono`, `Ciudad`, `Direccion`, `fechaIngreso`  AS \"Ingreso\" FROM `cliente` join region on cliente.IDRegion = region.IDRegion join comuna on comuna.IDComuna = cliente.IDComuna join organizacion o on cliente.idOrganizacion = o.idOrganizacion join unidaddecompra on unidaddecompra.idunidadcompra=cliente.idunidadcompra \n";

    /*  \n" +   */
    Conexion con = new Conexion();
    Connection cn = con.conecta();

    public ClientesRecientes() {
        initComponents();
        LlenarTabla();

        jPanel2.setBackground(new Color(0, 0, 0, 30));
        //jPanel1.setBackground(new Color(0, 0, 0, 30));
        LlenarRegion();
        cboComuna4.disable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        panel = new javax.swing.JScrollPane();
        tblresultado = new javax.swing.JTable();
        btnVolver = new javax.swing.JButton();
        b_Titulo = new javax.swing.JLabel();
        Filtros = new javax.swing.JTabbedPane();
        panelNombre = new javax.swing.JPanel();
        lbNombre = new javax.swing.JLabel();
        txtnombre = new javax.swing.JTextField();
        panelREgionComuna = new javax.swing.JPanel();
        lbRegion = new javax.swing.JLabel();
        lbComuna = new javax.swing.JLabel();
        cboRegion4 = new javax.swing.JComboBox<>();
        cboComuna4 = new javax.swing.JComboBox<>();
        panelOrganizacion = new javax.swing.JPanel();
        lbOrganizacion = new javax.swing.JLabel();
        txtOrganizacion = new javax.swing.JTextField();
        panelRut = new javax.swing.JPanel();
        lbRut = new javax.swing.JLabel();
        txtRut = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnReiniciarFiltros = new javax.swing.JButton();
        Fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Clientes Recientes");
        setMaximumSize(new java.awt.Dimension(1280, 686));
        setMinimumSize(new java.awt.Dimension(1280, 686));
        setPreferredSize(new java.awt.Dimension(1280, 686));
        setResizable(false);

        jLayeredPane1.setMaximumSize(new java.awt.Dimension(1280, 686));
        jLayeredPane1.setMinimumSize(new java.awt.Dimension(1280, 686));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        panel.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        panel.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        panel.setMaximumSize(new java.awt.Dimension(1920, 1080));
        panel.setMinimumSize(new java.awt.Dimension(1920, 1080));
        panel.setPreferredSize(new java.awt.Dimension(1920, 1080));

        tblresultado = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int celIndex){
                return false;
            }
        };
        tblresultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        panel.setViewportView(tblresultado);

        btnVolver.setFont(new java.awt.Font("Century Gothic", 0, 20)); // NOI18N
        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        b_Titulo.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        b_Titulo.setText("Clientes Recientes");

        Filtros.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lbNombre.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lbNombre.setText("Nombre:");

        txtnombre.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtnombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtnombreKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout panelNombreLayout = new javax.swing.GroupLayout(panelNombre);
        panelNombre.setLayout(panelNombreLayout);
        panelNombreLayout.setHorizontalGroup(
            panelNombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelNombreLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbNombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
        );
        panelNombreLayout.setVerticalGroup(
            panelNombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelNombreLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(panelNombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtnombre))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        Filtros.addTab("Nombre", panelNombre);

        lbRegion.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lbRegion.setText("Región:");

        lbComuna.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lbComuna.setText("Comuna:");

        cboRegion4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        cboRegion4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Región", "Todas las regiones" }));
        cboRegion4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboRegion4ItemStateChanged(evt);
            }
        });

        cboComuna4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        cboComuna4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione su comuna" }));
        cboComuna4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboComuna4ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout panelREgionComunaLayout = new javax.swing.GroupLayout(panelREgionComuna);
        panelREgionComuna.setLayout(panelREgionComunaLayout);
        panelREgionComunaLayout.setHorizontalGroup(
            panelREgionComunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelREgionComunaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelREgionComunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbRegion)
                    .addComponent(lbComuna))
                .addGap(40, 40, 40)
                .addGroup(panelREgionComunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboComuna4, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboRegion4, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        panelREgionComunaLayout.setVerticalGroup(
            panelREgionComunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelREgionComunaLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelREgionComunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cboRegion4)
                    .addComponent(lbRegion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(panelREgionComunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cboComuna4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelREgionComunaLayout.createSequentialGroup()
                        .addComponent(lbComuna, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(3, 3, 3))))
        );

        Filtros.addTab("Region y Comuna", panelREgionComuna);

        lbOrganizacion.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lbOrganizacion.setText("Organización:");

        txtOrganizacion.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtOrganizacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtOrganizacionKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout panelOrganizacionLayout = new javax.swing.GroupLayout(panelOrganizacion);
        panelOrganizacion.setLayout(panelOrganizacionLayout);
        panelOrganizacionLayout.setHorizontalGroup(
            panelOrganizacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelOrganizacionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbOrganizacion)
                .addGap(8, 8, 8)
                .addComponent(txtOrganizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
        );
        panelOrganizacionLayout.setVerticalGroup(
            panelOrganizacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOrganizacionLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(panelOrganizacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtOrganizacion)
                    .addComponent(lbOrganizacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        Filtros.addTab("Organización", panelOrganizacion);

        lbRut.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lbRut.setText("Rut:");

        txtRut.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtRut.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRutKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout panelRutLayout = new javax.swing.GroupLayout(panelRut);
        panelRut.setLayout(panelRutLayout);
        panelRutLayout.setHorizontalGroup(
            panelRutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbRut)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtRut, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
        );
        panelRutLayout.setVerticalGroup(
            panelRutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRutLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(panelRutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbRut, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        Filtros.addTab("Rut", panelRut);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlataformaVentas/Imagenes/acima-logo-200p.png"))); // NOI18N

        btnReiniciarFiltros.setText("Reiniciar Filtros");
        btnReiniciarFiltros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReiniciarFiltrosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(225, 225, 225)
                                .addComponent(b_Titulo))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(Filtros, javax.swing.GroupLayout.PREFERRED_SIZE, 812, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnReiniciarFiltros)))
                        .addGap(0, 28, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(b_Titulo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Filtros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnReiniciarFiltros)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1250, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 646, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        Fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlataformaVentas/Imagenes/BackgroundNew.png"))); // NOI18N

        jLayeredPane1.setLayer(jPanel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(Fondo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addComponent(Fondo, javax.swing.GroupLayout.PREFERRED_SIZE, 1330, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Fondo, javax.swing.GroupLayout.PREFERRED_SIZE, 686, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void LlenarTabla() {
        try {
            String query = tabla + "group by cliente.idCliente";
            PreparedStatement pst = cn.prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            tblresultado.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }

    public void LlenarRegion() {
        try {
            String query = "select NombreRegion from region ORDER BY IDRegion";
            PreparedStatement pst = cn.prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                cboRegion4.addItem(rs.getString(1));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    public void LLenadoComuna(JComboBox comboRegion, JComboBox comboComuna) {
        //Llenado del cboComuna
        try {
            String query = "select co.nombreComuna "
                    + "from Comuna co join Region re on co.IDRegion = re.IDRegion "
                    + "where re.NombreRegion = ?  "
                    + "order by co.nombreComuna asc";
            String param = comboRegion.getSelectedItem().toString();
            PreparedStatement pst = cn.prepareStatement(query);
            pst.setString(1, param);
            ResultSet rs = pst.executeQuery();
            comboComuna.addItem("Todas las Comunas");
            while (rs.next()) {
                comboComuna.addItem(rs.getString(1));
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void txtRutKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRutKeyPressed
        try {
            String param = txtRut.getText();

            String query = "SELECT `IDCliente`  AS 'ID Cliente' , region.`nombreRegion` AS 'Region',\n"
                    + " comuna.`NombreComuna` AS 'Comuna', `Rut`, `Nombre`, o.NombreOrganizacion AS 'Organización',\n"
                    + " unidaddecompra.detalle AS 'Detalle', `Cargo`, `Razon_social` AS 'Razon Social', `Correo`  AS 'Correo', `Telefono`,\n"
                    + " `Ciudad`, `Direccion`, `fechaIngreso`  AS 'Ingreso' FROM `cliente` join region on cliente.IDRegion = region.IDRegion \n"
                    + " join comuna on comuna.IDComuna = cliente.IDComuna join organizacion o on cliente.idOrganizacion = o.idOrganizacion \n"
                    + " join unidaddecompra on unidaddecompra.idunidadcompra=cliente.idunidadcompra\n" + "where Rut RLIKE ? \n"
                    + "group by cliente.idCliente";
            PreparedStatement pst = cn.prepareStatement(query);
            pst.setString(1, param);
            ResultSet rs = pst.executeQuery();
            tblresultado.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception ex) {
            //  JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_txtRutKeyPressed

    private void txtnombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnombreKeyPressed
        try {
            String param = txtnombre.getText();

            String query = "SELECT `IDCliente`  AS 'ID Cliente' , region.`nombreRegion` AS 'Region',\n"
                    + " comuna.`NombreComuna` AS 'Comuna', `Rut`, `Nombre`, o.NombreOrganizacion AS 'Organización',\n"
                    + " unidaddecompra.detalle AS 'Detalle', `Cargo`, `Razon_social` AS 'Razon Social', `Correo`  AS 'Correo', `Telefono`,\n"
                    + " `Ciudad`, `Direccion`, `fechaIngreso`  AS 'Ingreso' FROM `cliente` join region on cliente.IDRegion = region.IDRegion \n"
                    + " join comuna on comuna.IDComuna = cliente.IDComuna join organizacion o on cliente.idOrganizacion = o.idOrganizacion \n"
                    + " join unidaddecompra on unidaddecompra.idunidadcompra=cliente.idunidadcompra\n"
                    + "where Nombre RLIKE ? \n"
                    + "group by cliente.idCliente";
            PreparedStatement pst = cn.prepareStatement(query);
            pst.setString(1, param);
            ResultSet rs = pst.executeQuery();
            tblresultado.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception ex) {
            // JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_txtnombreKeyPressed

    private void txtOrganizacionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOrganizacionKeyPressed
        try {
            String param = txtOrganizacion.getText();
            String query = "SELECT `IDCliente`  AS 'ID Cliente' , region.`nombreRegion` AS 'Region',\n"
                    + " comuna.`NombreComuna` AS 'Comuna', `Rut`, `Nombre`, o.NombreOrganizacion AS 'Organización',\n"
                    + " unidaddecompra.detalle AS 'Detalle', `Cargo`, `Razon_social` AS 'Razon Social', `Correo`  AS 'Correo', `Telefono`,\n"
                    + " `Ciudad`, `Direccion`, `fechaIngreso`  AS 'Ingreso' FROM `cliente` join region on cliente.IDRegion = region.IDRegion \n"
                    + " join comuna on comuna.IDComuna = cliente.IDComuna join organizacion o on cliente.idOrganizacion = o.idOrganizacion \n"
                    + " join unidaddecompra on unidaddecompra.idunidadcompra=cliente.idunidadcompra\n"
                    + "where o.NombreOrganizacion RLIKE ? \n"
                    + "group by cliente.idCliente";
            PreparedStatement pst = cn.prepareStatement(query);
            pst.setString(1, param);
            ResultSet rs = pst.executeQuery();
            tblresultado.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception ex) {
            //  JOptionPane.showMessageDialog(null, "error: " + ex.getMessage());
        }
    }//GEN-LAST:event_txtOrganizacionKeyPressed

    private void cboRegion4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboRegion4ItemStateChanged
        String busqueda = cboRegion4.getSelectedItem().toString();
        //Filtro para todas las regiones
        if (busqueda.equals("Todas las regiones")) {
            cboComuna4.disable();
            try {
                String query = "SELECT `IDCliente`  AS 'ID Cliente' , region.`nombreRegion` AS 'Region',\n"
                        + " comuna.`NombreComuna` AS 'Comuna', `Rut`, `Nombre`, o.NombreOrganizacion AS 'Organización',\n"
                        + " unidaddecompra.detalle AS 'Detalle', `Cargo`, `Razon_social` AS 'Razon Social', `Correo`  AS 'Correo', `Telefono`,\n"
                        + " `Ciudad`, `Direccion`, `fechaIngreso`  AS 'Ingreso' FROM `cliente` join region on cliente.IDRegion = region.IDRegion \n"
                        + " join comuna on comuna.IDComuna = cliente.IDComuna join organizacion o on cliente.idOrganizacion = o.idOrganizacion \n"
                        + " join unidaddecompra on unidaddecompra.idunidadcompra=cliente.idunidadcompra\n"
                        + "group by cliente.idCliente";
                PreparedStatement pst = cn.prepareStatement(query);
                ResultSet rs = pst.executeQuery();
                tblresultado.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (Exception ex) {
            }
        } else if (busqueda.equals("Seleccione Region")) {
            cboComuna4.disable();
        } else {
            try {
                cboComuna4.disable();
                cboComuna4.removeAllItems();

                /*
                 Filtro para una region en especifica
                 */
                if (cboComuna4.getItemCount() != 0) {
                    cboComuna4.removeAllItems();
                }
                String query = "SELECT `IDCliente`  AS 'ID Cliente' , region.`nombreRegion` AS 'Region',\n"
                        + " comuna.`NombreComuna` AS 'Comuna', `Rut`, `Nombre`, o.NombreOrganizacion AS 'Organización',\n"
                        + " unidaddecompra.detalle AS 'Detalle', `Cargo`, `Razon_social` AS 'Razon Social', `Correo`  AS 'Correo', `Telefono`,\n"
                        + " `Ciudad`, `Direccion`, `fechaIngreso`  AS 'Ingreso' FROM `cliente` join region on cliente.IDRegion = region.IDRegion \n"
                        + " join comuna on comuna.IDComuna = cliente.IDComuna join organizacion o on cliente.idOrganizacion = o.idOrganizacion \n"
                        + " join unidaddecompra on unidaddecompra.idunidadcompra=cliente.idunidadcompra\n"
                        + "where region.NombreRegion = ?\n"
                        + "group by cliente.idCliente";
                String param = cboRegion4.getSelectedItem().toString();
                PreparedStatement pst = cn.prepareStatement(query);
                pst.setString(1, param);
                ResultSet rs = pst.executeQuery();
                tblresultado.setModel(DbUtils.resultSetToTableModel(rs));

                LLenadoComuna(cboRegion4, cboComuna4);
                cboComuna4.setEnabled(true);
            } catch (Exception ex) {
            }
        }
    }//GEN-LAST:event_cboRegion4ItemStateChanged

    private void cboComuna4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboComuna4ItemStateChanged
        //Filtro de comunas
        String busquedaComuna = cboComuna4.getSelectedItem().toString();

        //Filtro todas las comunas
        if (busquedaComuna.equals("Todas las Comunas")) {
            try {
                String query = "SELECT `IDCliente`  AS 'ID Cliente' , region.`nombreRegion` AS 'Region',\n"
                        + " comuna.`NombreComuna` AS 'Comuna', `Rut`, `Nombre`, o.NombreOrganizacion AS 'Organización',\n"
                        + " unidaddecompra.detalle AS 'Detalle', `Cargo`, `Razon_social` AS 'Razon Social', `Correo`  AS 'Correo', `Telefono`,\n"
                        + " `Ciudad`, `Direccion`, `fechaIngreso`  AS 'Ingreso' FROM `cliente` join region on cliente.IDRegion = region.IDRegion \n"
                        + " join comuna on comuna.IDComuna = cliente.IDComuna join organizacion o on cliente.idOrganizacion = o.idOrganizacion \n"
                        + " join unidaddecompra on unidaddecompra.idunidadcompra=cliente.idunidadcompra\n"
                        + "where region.NombreRegion = ? \n"
                        + "group by cliente.idCliente";
                String param = cboRegion4.getSelectedItem().toString();
                PreparedStatement pst = cn.prepareStatement(query);
                pst.setString(1, param);
                ResultSet rs = pst.executeQuery();
                tblresultado.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Error en comuna todas las comunas: " +ex.getMessage());
            }
        } else {
            try {
                //Filtro para comuna especifica
                String query = "SELECT `IDCliente`  AS 'ID Cliente' , region.`nombreRegion` AS 'Region',\n"
                        + " comuna.`NombreComuna` AS 'Comuna', `Rut`, `Nombre`, o.NombreOrganizacion AS 'Organización',\n"
                        + " unidaddecompra.detalle AS 'Detalle', `Cargo`, `Razon_social` AS 'Razon Social', `Correo`  AS 'Correo', `Telefono`,\n"
                        + " `Ciudad`, `Direccion`, `fechaIngreso`  AS 'Ingreso' FROM `cliente` join region on cliente.IDRegion = region.IDRegion \n"
                        + " join comuna on comuna.IDComuna = cliente.IDComuna join organizacion o on cliente.idOrganizacion = o.idOrganizacion \n"
                        + " join unidaddecompra on unidaddecompra.idunidadcompra=cliente.idunidadcompra\n"
                        + "where comuna.NombreComuna = ? \n"
                        + "group by cliente.idCliente";
                String param = cboComuna4.getSelectedItem().toString();
                PreparedStatement pst = cn.prepareStatement(query);
                pst.setString(1, param);
                ResultSet rs = pst.executeQuery();
                tblresultado.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null,"Error en comuna especifica: " +ex.getMessage());
            }
        }
    }//GEN-LAST:event_cboComuna4ItemStateChanged

    private void btnReiniciarFiltrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReiniciarFiltrosActionPerformed
        LlenarTabla();
    }//GEN-LAST:event_btnReiniciarFiltrosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientesRecientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientesRecientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientesRecientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientesRecientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientesRecientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Filtros;
    private javax.swing.JLabel Fondo;
    private javax.swing.JLabel b_Titulo;
    private javax.swing.JButton btnReiniciarFiltros;
    private javax.swing.JButton btnVolver;
    private javax.swing.JComboBox<String> cboComuna4;
    private javax.swing.JComboBox<String> cboRegion4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lbComuna;
    private javax.swing.JLabel lbNombre;
    private javax.swing.JLabel lbOrganizacion;
    private javax.swing.JLabel lbRegion;
    private javax.swing.JLabel lbRut;
    private javax.swing.JScrollPane panel;
    private javax.swing.JPanel panelNombre;
    private javax.swing.JPanel panelOrganizacion;
    private javax.swing.JPanel panelREgionComuna;
    private javax.swing.JPanel panelRut;
    public javax.swing.JTable tblresultado;
    private javax.swing.JTextField txtOrganizacion;
    private javax.swing.JTextField txtRut;
    private javax.swing.JTextField txtnombre;
    // End of variables declaration//GEN-END:variables
}
