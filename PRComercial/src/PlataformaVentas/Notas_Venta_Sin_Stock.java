/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PlataformaVentas;

import clases.Conexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author The_S
 */
public class Notas_Venta_Sin_Stock extends javax.swing.JFrame {

    Conexion con = new Conexion();
    Connection cn = con.conecta();

    public Notas_Venta_Sin_Stock() {
        initComponents();
        try {
            String query = "SELECT \n"
                    + "    pa.idOrden AS 'Numero de Nota de Venta',\n"
                    + "    pa.codigoOrdenCompra AS 'Código de Orden de Compra',\n"
                    + "    ot.nombre_proveedor AS 'Empresa',\n"
                    + "    pa.codigoProducto AS 'SKU',\n"
                    + "    pa.nombreproducto AS 'Producto Solicitado',\n"
                    + "    pa.cantidad AS 'Cantidad Solicitada',\n"
                    + "    i.stock AS 'Stock en Inventario',\n"
                    + "   \n"
                    + "    pa.disponibilidad AS 'Disponibilidad de Producto'\n"
                    + "FROM\n"
                    + "    detalleordentrabajo pa\n"
                    + "        LEFT JOIN\n"
                    + "    ordentrabajo ot ON pa.idOrden = ot.idOrden\n"
                    + "        LEFT JOIN\n"
                    + "    inventario i ON pa.codigoProducto = i.idProducto\n"
                    + "WHERE\n"
                    + "    pa.disponibilidad = 'Sin Stock de Proveedor' AND i.idProducto = pa.codigoProducto;";
            PreparedStatement pst;
            pst = cn.prepareStatement(query);
            java.sql.ResultSet rs = pst.executeQuery();
            tblNotasVenta.setModel(DbUtils.resultSetToTableModel(rs));
            ajusteTabla();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }

    public void ajusteTabla() {
        TableColumnModel modeloColumnas = tblNotasVenta.getColumnModel();
        TableModel modeloTabla = tblNotasVenta.getModel();
        int total = modeloColumnas.getColumnCount();
        for (int i = 0; i < total; i++) {
            int tamanio = 0;
            int total2 = modeloTabla.getRowCount();
            for (int j = 0; j < total2; j++) {
                if (modeloTabla.getValueAt(j, i) != null) {

                    int tamanio2 = modeloTabla.getValueAt(j, i).toString().length() * 7;
                    if (tamanio2 > tamanio) {
                        tamanio = tamanio2;
                    }
                }
                modeloColumnas.getColumn(i).setPreferredWidth(tamanio);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblNotasVenta = new javax.swing.JTable();
        btnVolver = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtOC = new javax.swing.JTextField();
        btnBuscarOC = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtNV = new javax.swing.JTextField();
        btnBuscarNV = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        btnReiniciarFiltros = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblNotasVenta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblNotasVenta.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblNotasVenta);

        btnVolver.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        jTabbedPane1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel1.setText("Código de Orden de Compra:");

        txtOC.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        btnBuscarOC.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btnBuscarOC.setText("Buscar");
        btnBuscarOC.setToolTipText("");
        btnBuscarOC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarOCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtOC, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscarOC)
                .addContainerGap(497, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarOC))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Buscar por Orden de Compra", jPanel1);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel2.setText("Número de Nota de Venta:");

        txtNV.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        btnBuscarNV.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btnBuscarNV.setText("Buscar");
        btnBuscarNV.setToolTipText("");
        btnBuscarNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarNVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNV, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscarNV)
                .addContainerGap(517, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarNV))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Buscar por Orden de Compra", jPanel2);

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar Estado", "Sin Stock", "Canceladas" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(868, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        jTabbedPane1.addTab("Notas de Venta Sin Stock / Canceladas", jPanel3);

        btnReiniciarFiltros.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btnReiniciarFiltros.setText("Reiniciar Filtros");
        btnReiniciarFiltros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReiniciarFiltrosActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 153, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton1.setText("Cancelar Orden de Compra");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1092, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 178, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnReiniciarFiltros)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVolver)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReiniciarFiltros)
                    .addComponent(jButton1)
                    .addComponent(btnVolver))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarOCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarOCActionPerformed
        try {
            String query = "SELECT \n"
                    + "    pa.idOrden AS 'Numero de Nota de Venta',\n"
                    + "    pa.codigoOrdenCompra AS 'Código de Orden de Compra',\n"
                    + "    ot.nombre_proveedor AS 'Empresa',\n"
                    + "    pa.codigoProducto AS 'SKU',\n"
                    + "    pa.nombreproducto AS 'Producto Solicitado',\n"
                    + "    pa.cantidad AS 'Cantidad Solicitada',\n"
                    + "    i.stock AS 'Stock en Inventario',\n"
                    + "    pa.disponibilidad AS 'Disponibilidad de Producto'\n"
                    + "FROM\n"
                    + "    detalleordentrabajo pa\n"
                    + "        LEFT JOIN\n"
                    + "    ordentrabajo ot ON pa.idOrden = ot.idOrden\n"
                    + "        LEFT JOIN\n"
                    + "    inventario i ON pa.codigoProducto = i.idProducto\n"
                    + "WHERE\n"
                    + "    pa.disponibilidad = 'Sin Stock de Proveedor' "
                    + "        AND i.idProducto = pa.codigoProducto\n"
                    + "        AND pa.codigoOrdenCompra = ?;";
            PreparedStatement pst;
            pst = cn.prepareStatement(query);
            pst.setString(1, txtOC.getText());
            java.sql.ResultSet rs = pst.executeQuery();
            tblNotasVenta.setModel(DbUtils.resultSetToTableModel(rs));
            ajusteTabla();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnBuscarOCActionPerformed

    private void btnReiniciarFiltrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReiniciarFiltrosActionPerformed
        try {
            String query = "SELECT \n"
                    + "    pa.idOrden AS 'Numero de Nota de Venta',\n"
                    + "    pa.codigoOrdenCompra AS 'Código de Orden de Compra',\n"
                    + "    ot.nombre_proveedor AS 'Empresa',\n"
                    + "    pa.codigoProducto AS 'SKU',\n"
                    + "    pa.nombreproducto AS 'Producto Solicitado',\n"
                    + "    pa.cantidad AS 'Cantidad Solicitada',\n"
                    + "    i.stock AS 'Stock en Inventario',\n"
                    + "   \n"
                    + "    pa.disponibilidad AS 'Disponibilidad de Producto'\n"
                    + "FROM\n"
                    + "    detalleordentrabajo pa\n"
                    + "        LEFT JOIN\n"
                    + "    ordentrabajo ot ON pa.idOrden = ot.idOrden\n"
                    + "        LEFT JOIN\n"
                    + "    inventario i ON pa.codigoProducto = i.idProducto\n"
                    + "WHERE\n"
                    + "    pa.disponibilidad = 'Sin Stock de Proveedor' AND i.idProducto = pa.codigoProducto;";
            PreparedStatement pst;
            pst = cn.prepareStatement(query);
            java.sql.ResultSet rs = pst.executeQuery();
            tblNotasVenta.setModel(DbUtils.resultSetToTableModel(rs));
            ajusteTabla();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnReiniciarFiltrosActionPerformed

    private void btnBuscarNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarNVActionPerformed
        try {
            String query = "SELECT \n"
                    + "    pa.idOrden AS 'Numero de Nota de Venta',\n"
                    + "    pa.codigoOrdenCompra AS 'Código de Orden de Compra',\n"
                    + "    ot.nombre_proveedor AS 'Empresa',\n"
                    + "    pa.codigoProducto AS 'SKU',\n"
                    + "    pa.nombreproducto AS 'Producto Solicitado',\n"
                    + "    pa.cantidad AS 'Cantidad Solicitada',\n"
                    + "    i.stock AS 'Stock en Inventario',\n"
                    + "    pa.disponibilidad AS 'Disponibilidad de Producto'\n"
                    + "FROM\n"
                    + "    detalleordentrabajo pa\n"
                    + "        LEFT JOIN\n"
                    + "    ordentrabajo ot ON pa.idOrden = ot.idOrden\n"
                    + "        LEFT JOIN\n"
                    + "    inventario i ON pa.codigoProducto = i.idProducto\n"
                    + "WHERE\n"
                    + "    pa.disponibilidad = 'Sin Stock de Proveedor'"
                    + "        AND i.idProducto = pa.codigoProducto\n"
                    + "        AND pa.idOrden = ?;";
            PreparedStatement pst;
            pst = cn.prepareStatement(query);
            pst.setString(1, txtNV.getText());
            java.sql.ResultSet rs = pst.executeQuery();
            tblNotasVenta.setModel(DbUtils.resultSetToTableModel(rs));
            ajusteTabla();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnBuscarNVActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            int resp = JOptionPane.showConfirmDialog(null, "¿Desea cancelar la orden de compra?", null, JOptionPane.YES_NO_OPTION);
            if (resp == 0) {
                int index = tblNotasVenta.getSelectedRow();
                String query = "update detalleOrdenTrabajo set disponibilidad = 'Cancelada' where idOrden = ? and codigoOrdenCompra = ?;";
                PreparedStatement preparedStmt = cn.prepareStatement(query);
                preparedStmt.setInt(1, Integer.parseInt(tblNotasVenta.getValueAt(index, 0).toString()));
                preparedStmt.setString(2, tblNotasVenta.getValueAt(index, 1).toString());
                preparedStmt.executeUpdate();
                JOptionPane.showMessageDialog(null, "Se ha cancelado la orden de compra : " + tblNotasVenta.getValueAt(index, 1).toString());
                btnReiniciarFiltros.doClick();
            } else {
                JOptionPane.showMessageDialog(null, "No se ha realizado ninguna operación");
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error" + ex.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged

        try {
            if (jComboBox1.getSelectedItem().toString().equals("Canceladas")) {
                String query = "SELECT \n"
                        + "    pa.idOrden AS 'Numero de Nota de Venta',\n"
                        + "    pa.codigoOrdenCompra AS 'Código de Orden de Compra',\n"
                        + "    ot.nombre_proveedor AS 'Empresa',\n"
                        + "    pa.codigoProducto AS 'SKU',\n"
                        + "    pa.nombreproducto AS 'Producto Solicitado',\n"
                        + "    pa.cantidad AS 'Cantidad Solicitada',\n"
                        + "    i.stock AS 'Stock en Inventario',\n"
                        + "    pa.disponibilidad AS 'Disponibilidad de Producto'\n"
                        + "FROM\n"
                        + "    detalleordentrabajo pa\n"
                        + "        LEFT JOIN\n"
                        + "    ordentrabajo ot ON pa.idOrden = ot.idOrden\n"
                        + "        LEFT JOIN\n"
                        + "    inventario i ON pa.codigoProducto = i.idProducto\n"
                        + "WHERE\n"
                        + "    pa.disponibilidad = 'Cancelada' AND i.idProducto = pa.codigoProducto;";
                PreparedStatement pst;
                pst = cn.prepareStatement(query);

                java.sql.ResultSet rs = pst.executeQuery();
                tblNotasVenta.setModel(DbUtils.resultSetToTableModel(rs));
                ajusteTabla();
            } else if (jComboBox1.getSelectedItem().toString().equals("Sin Stock")) {
                //'Sin Stock de Proveedor'
                String query = "SELECT \n"
                        + "    pa.idOrden AS 'Numero de Nota de Venta',\n"
                        + "    pa.codigoOrdenCompra AS 'Código de Orden de Compra',\n"
                        + "    ot.nombre_proveedor AS 'Empresa',\n"
                        + "    pa.codigoProducto AS 'SKU',\n"
                        + "    pa.nombreproducto AS 'Producto Solicitado',\n"
                        + "    pa.cantidad AS 'Cantidad Solicitada',\n"
                        + "    i.stock AS 'Stock en Inventario',\n"
                        + "    pa.disponibilidad AS 'Disponibilidad de Producto'\n"
                        + "FROM\n"
                        + "    detalleordentrabajo pa\n"
                        + "        LEFT JOIN\n"
                        + "    ordentrabajo ot ON pa.idOrden = ot.idOrden\n"
                        + "        LEFT JOIN\n"
                        + "    inventario i ON pa.codigoProducto = i.idProducto\n"
                        + "WHERE\n"
                        + "    pa.disponibilidad = 'Sin Stock de Proveedor' AND i.idProducto = pa.codigoProducto;";
                PreparedStatement pst;
                pst = cn.prepareStatement(query);

                java.sql.ResultSet rs = pst.executeQuery();
                tblNotasVenta.setModel(DbUtils.resultSetToTableModel(rs));
                ajusteTabla();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error" + ex.getMessage());
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Notas_Venta_Sin_Stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Notas_Venta_Sin_Stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Notas_Venta_Sin_Stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Notas_Venta_Sin_Stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Notas_Venta_Sin_Stock().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarNV;
    private javax.swing.JButton btnBuscarOC;
    private javax.swing.JButton btnReiniciarFiltros;
    private javax.swing.JButton btnVolver;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblNotasVenta;
    private javax.swing.JTextField txtNV;
    private javax.swing.JTextField txtOC;
    // End of variables declaration//GEN-END:variables
}
