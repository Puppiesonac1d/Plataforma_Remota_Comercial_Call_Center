package PlataformaVentas;

import clases.Conexion;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.PdfName;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfPage;
import com.itextpdf.text.pdf.PdfPageEventHelper;
import com.itextpdf.text.pdf.PdfWriter;

import java.awt.Color;
import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.StringReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.charset.StandardCharsets;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import net.proteanit.sql.DbUtils;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;

import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

/**
 *
 * @author The_S
 */
public class ConsultaMP extends javax.swing.JFrame {

    Conexion con = new Conexion();
    Connection cn = con.conecta();

    public ConsultaMP() {
        initComponents();
        jPanel3.setBackground(new Color(0, 0, 0, 30));
        jPanel2.revalidate();
        jPanel3.repaint();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AgregarProductoOT = new javax.swing.JFrame();
        jLayeredPane13 = new javax.swing.JLayeredPane();
        jTabbedPane16 = new javax.swing.JTabbedPane();
        jPanel40 = new javax.swing.JPanel();
        lblNombreProducto = new javax.swing.JLabel();
        txtNombreProducto = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel41 = new javax.swing.JPanel();
        jLabel80 = new javax.swing.JLabel();
        txtIDProducto = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jPanel42 = new javax.swing.JPanel();
        jLabel85 = new javax.swing.JLabel();
        txtSKU = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jTabbedPane14 = new javax.swing.JTabbedPane();
        jScrollPane20 = new javax.swing.JScrollPane();
        tblAgregarProdOT = new javax.swing.JTable();
        jScrollPane21 = new javax.swing.JScrollPane();
        tblProdadd = new javax.swing.JTable();
        jTabbedPane17 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        txtEspecificacionComprador = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        txtEspecificacionProveedor = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        txtCargos1 = new javax.swing.JTextField();
        txtDescuento = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        cmbMoneda = new javax.swing.JComboBox();
        btnConfirmarVolver = new javax.swing.JButton();
        btnCalcularValores = new javax.swing.JButton();
        btnBorrarProducto1 = new javax.swing.JButton();
        btnAgregarProdOT = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnReiniciarFiltros = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        bultos = new javax.swing.JFrame();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel20 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jPanel11 = new javax.swing.JPanel();
        jLabel83 = new javax.swing.JLabel();
        txtNumeroNotaVenta = new javax.swing.JTextField();
        jScrollPane26 = new javax.swing.JScrollPane();
        tblProductosPendientes = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jLabel84 = new javax.swing.JLabel();
        txtQty = new javax.swing.JTextField();
        btnAgregarNV = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPaso = new javax.swing.JTable();
        jLabel43 = new javax.swing.JLabel();
        jLabel157 = new javax.swing.JLabel();
        jScrollPane28 = new javax.swing.JScrollPane();
        tblProdsAgregadosNV = new javax.swing.JTable();
        jButton13 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        btnBorrarNV = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel53 = new javax.swing.JLabel();
        InventarioPorBodega = new javax.swing.JFrame();
        jScrollPane7 = new javax.swing.JScrollPane();
        panelIngresoProducto1 = new javax.swing.JPanel();
        jLabel95 = new javax.swing.JLabel();
        txtIDproductoIngreso1 = new javax.swing.JTextField();
        jLabel123 = new javax.swing.JLabel();
        txtStockIngresado1 = new javax.swing.JTextField();
        jLabel124 = new javax.swing.JLabel();
        txtSKUIngreso1 = new javax.swing.JTextField();
        jLabel126 = new javax.swing.JLabel();
        jLabel127 = new javax.swing.JLabel();
        jLabel128 = new javax.swing.JLabel();
        jLabel129 = new javax.swing.JLabel();
        jLabel132 = new javax.swing.JLabel();
        jLabel133 = new javax.swing.JLabel();
        jLabel134 = new javax.swing.JLabel();
        jLabel135 = new javax.swing.JLabel();
        jLabel136 = new javax.swing.JLabel();
        jLabel141 = new javax.swing.JLabel();
        txtNombreProductoIngreso1 = new javax.swing.JTextField();
        txtPrecioVentaIngreso1 = new javax.swing.JTextField();
        txtPrecioCostoIngreso1 = new javax.swing.JTextField();
        txtDescripcionIngreso1 = new javax.swing.JTextField();
        txtRegionesIngreso1 = new javax.swing.JTextField();
        txtCondicionDespachoIngreso1 = new javax.swing.JTextField();
        txtDiasHabilesIngreso1 = new javax.swing.JTextField();
        cmbStatusProdIngreso1 = new javax.swing.JComboBox();
        jLabel148 = new javax.swing.JLabel();
        btnConfirmarInfoProd1 = new javax.swing.JButton();
        cmbTransporte1 = new javax.swing.JComboBox<>();
        cmbBodega2 = new javax.swing.JComboBox<>();
        jLabel146 = new javax.swing.JLabel();
        jLabel149 = new javax.swing.JLabel();
        jLabel150 = new javax.swing.JLabel();
        cmbSeccionBodega1 = new javax.swing.JComboBox();
        cmbDistribuidorStock0 = new javax.swing.JComboBox();
        cmbConvenioMarco = new javax.swing.JComboBox();
        panelConsultaMPFrame = new javax.swing.JLayeredPane();
        jPanel3 = new javax.swing.JPanel();
        panelConsultaMP = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtOC = new javax.swing.JTextField();
        btnConsultaOC = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        btnGuardarOrden = new javax.swing.JButton();
        jLabel33 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblMP = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        txtImpuestoEspecifico = new javax.swing.JTextField();
        txtIva = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();
        txtSubTotal = new javax.swing.JTextField();
        txtCargos = new javax.swing.JTextField();
        txtDcto = new javax.swing.JTextField();
        txtNeto = new javax.swing.JTextField();
        btnCalculoTotales = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtDireccionDemandante = new javax.swing.JTextField();
        txtTelefonoDemandante = new javax.swing.JTextField();
        txtRutComprador = new javax.swing.JTextField();
        txtUnidadCompra = new javax.swing.JTextField();
        txtDemandante = new javax.swing.JTextField();
        txtFechaEnvioOC = new javax.swing.JTextField();
        txtDireccionProveedor = new javax.swing.JTextField();
        txtProveedor = new javax.swing.JTextField();
        txtRutProveedor = new javax.swing.JTextField();
        txtNombreProveedor = new javax.swing.JTextField();
        txtEmailContacto = new javax.swing.JTextField();
        txtFonoProveedor = new javax.swing.JTextField();
        txtNombreOC = new javax.swing.JTextField();
        txtFechaAceptacion = new javax.swing.JTextField();
        txtDireccionDespacho = new javax.swing.JTextField();
        txtDireccionEnvioFactura = new javax.swing.JTextField();
        txtMetodoDespacho = new javax.swing.JTextField();
        txtContactoPago = new javax.swing.JTextField();
        txtFormaPago = new javax.swing.JTextField();
        txtContactoOC = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        btnBorrarProducto = new javax.swing.JButton();
        btnAddProductoOT = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        btnNVParcializada = new javax.swing.JButton();
        jLabel41 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblResumenParcializada = new javax.swing.JTable();
        jLabel42 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        txtObservacionDespacho = new javax.swing.JTextField();
        txtObservacion = new javax.swing.JTextField();
        btnVolver7 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        lblEstadoOrdenCompra = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        b_Titulo = new javax.swing.JLabel();
        lblCodigo = new javax.swing.JLabel();
        lblFondoConsultaMP = new javax.swing.JLabel();

        AgregarProductoOT.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        AgregarProductoOT.setMinimumSize(new java.awt.Dimension(1280, 740));
        AgregarProductoOT.setResizable(false);
        AgregarProductoOT.setSize(new java.awt.Dimension(1280, 740));

        jLayeredPane13.setPreferredSize(new java.awt.Dimension(1280, 740));

        jTabbedPane16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTabbedPane16.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane16.setAutoscrolls(true);
        jTabbedPane16.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N

        lblNombreProducto.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lblNombreProducto.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblNombreProducto.setText("Buscando:");

        txtNombreProducto.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtNombreProducto.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtNombreProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreProductoActionPerformed(evt);
            }
        });
        txtNombreProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreProductoKeyPressed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jButton2.setText("Buscar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel40Layout = new javax.swing.GroupLayout(jPanel40);
        jPanel40.setLayout(jPanel40Layout);
        jPanel40Layout.setHorizontalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel40Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lblNombreProducto)
                .addGap(30, 30, 30)
                .addComponent(txtNombreProducto, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap())
        );
        jPanel40Layout.setVerticalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel40Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombreProducto)
                    .addComponent(txtNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(43, 43, 43))
        );

        jTabbedPane16.addTab("Buscar Por Nombre", jPanel40);

        jLabel80.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel80.setText("Buscando:");

        txtIDProducto.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtIDProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIDProductoKeyPressed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jButton3.setText("Buscar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel41Layout = new javax.swing.GroupLayout(jPanel41);
        jPanel41.setLayout(jPanel41Layout);
        jPanel41Layout.setHorizontalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel41Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel80)
                .addGap(30, 30, 30)
                .addComponent(txtIDProducto, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap())
        );
        jPanel41Layout.setVerticalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel41Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel80, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIDProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(44, 44, 44))
        );

        jTabbedPane16.addTab("Buscar Por ID", jPanel41);

        jLabel85.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel85.setText("Buscando:");

        txtSKU.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtSKU.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSKUKeyPressed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jButton4.setText("Buscar");
        jButton4.setToolTipText("");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel42Layout = new javax.swing.GroupLayout(jPanel42);
        jPanel42.setLayout(jPanel42Layout);
        jPanel42Layout.setHorizontalGroup(
            jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel42Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel85)
                .addGap(30, 30, 30)
                .addComponent(txtSKU, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addContainerGap())
        );
        jPanel42Layout.setVerticalGroup(
            jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel42Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSKU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel85, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addGap(44, 44, 44))
        );

        jTabbedPane16.addTab("Buscar Por SKU", jPanel42);

        jTabbedPane14.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jTabbedPane14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane14MouseClicked(evt);
            }
        });

        tblAgregarProdOT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblAgregarProdOT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAgregarProdOTMouseClicked(evt);
            }
        });
        jScrollPane20.setViewportView(tblAgregarProdOT);

        jTabbedPane14.addTab("Seleccione Productos", jScrollPane20);

        tblProdadd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID de Producto", "Producto", "Categoría", "Cantidad", "Especificación de Compador", "Especificación de Proveedor", "Moneda", "Precio Unitario", "Cargos", "Descuento", "Total"
            }
        ));
        tblProdadd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProdaddMouseClicked(evt);
            }
        });
        tblProdadd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblProdaddKeyPressed(evt);
            }
        });
        jScrollPane21.setViewportView(tblProdadd);

        jTabbedPane14.addTab("Productos que se añadirán", jScrollPane21);

        jTabbedPane17.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N

        jPanel4.setBackground(new java.awt.Color(0, 0, 0));
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("Especificación de Comprador:");

        txtEspecificacionComprador.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtEspecificacionComprador.setToolTipText("");

        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setText("Especificación de Proveedor:");

        jLabel39.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setText("Moneda:");

        jLabel66.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel66.setForeground(new java.awt.Color(255, 255, 255));
        jLabel66.setText("Cargos:");
        jLabel66.setToolTipText("");

        jLabel71.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel71.setForeground(new java.awt.Color(255, 255, 255));
        jLabel71.setText("Descuento:");

        txtEspecificacionProveedor.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtEspecificacionProveedor.setToolTipText("");

        txtCantidad.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtCantidad.setToolTipText("");

        txtCargos1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtCargos1.setToolTipText("");

        txtDescuento.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtDescuento.setToolTipText("");

        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(255, 255, 255));
        jLabel40.setText("Cantidad:");

        cmbMoneda.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        cmbMoneda.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar Moneda", "CLP", "USD" }));
        cmbMoneda.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMonedaItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel71)
                    .addComponent(jLabel66)
                    .addComponent(jLabel39)
                    .addComponent(jLabel37)
                    .addComponent(jLabel38)
                    .addComponent(jLabel40))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtCargos1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbMoneda, javax.swing.GroupLayout.Alignment.LEADING, 0, 533, Short.MAX_VALUE)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEspecificacionProveedor, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEspecificacionComprador, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDescuento))
                .addGap(14, 14, 14))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(txtEspecificacionComprador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(txtEspecificacionProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel40))
                .addGap(6, 6, 6)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel66)
                    .addComponent(txtCargos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel71)
                    .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane17.addTab("Cálculo de Valores", jPanel4);

        btnConfirmarVolver.setBackground(new java.awt.Color(0, 153, 0));
        btnConfirmarVolver.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnConfirmarVolver.setText("3.-Confirmar y Volver a N.V");
        btnConfirmarVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarVolverActionPerformed(evt);
            }
        });

        btnCalcularValores.setEnabled(false);
        btnCalcularValores.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnCalcularValores.setText("2.-Calcular Valores");
        btnCalcularValores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularValoresActionPerformed(evt);
            }
        });

        btnBorrarProducto1.setBackground(new java.awt.Color(204, 0, 0));
        btnBorrarProducto1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnBorrarProducto1.setText("Borrar Producto de la lista");
        btnBorrarProducto1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarProducto1ActionPerformed(evt);
            }
        });

        btnAgregarProdOT.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnAgregarProdOT.setText("1.-Agregar Producto");
        btnAgregarProdOT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarProdOTActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(204, 0, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jButton1.setText("Volver y cancelar toda la operación");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnReiniciarFiltros.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnReiniciarFiltros.setText("Reiniciar Filtros");
        btnReiniciarFiltros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReiniciarFiltrosActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(0, 153, 153));
        jButton8.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jButton8.setText("Ingreso producto Stock 0");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLayeredPane13.setLayer(jTabbedPane16, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane13.setLayer(jTabbedPane14, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane13.setLayer(jTabbedPane17, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane13.setLayer(btnConfirmarVolver, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane13.setLayer(btnCalcularValores, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane13.setLayer(btnBorrarProducto1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane13.setLayer(btnAgregarProdOT, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane13.setLayer(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane13.setLayer(btnReiniciarFiltros, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane13.setLayer(jButton8, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane13Layout = new javax.swing.GroupLayout(jLayeredPane13);
        jLayeredPane13.setLayout(jLayeredPane13Layout);
        jLayeredPane13Layout.setHorizontalGroup(
            jLayeredPane13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane13Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(jLayeredPane13Layout.createSequentialGroup()
                        .addGroup(jLayeredPane13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPane13Layout.createSequentialGroup()
                                .addComponent(jTabbedPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 865, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jLayeredPane13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnConfirmarVolver, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnCalcularValores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnAgregarProdOT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnBorrarProducto1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jLayeredPane13Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jTabbedPane16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnReiniciarFiltros)
                                .addGap(395, 395, 395))
                            .addComponent(jTabbedPane14, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(4, 4, 4)))
                .addContainerGap())
        );
        jLayeredPane13Layout.setVerticalGroup(
            jLayeredPane13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jLayeredPane13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane13Layout.createSequentialGroup()
                        .addComponent(btnReiniciarFiltros)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jTabbedPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jLayeredPane13Layout.createSequentialGroup()
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBorrarProducto1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAgregarProdOT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCalcularValores)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnConfirmarVolver)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(jTabbedPane17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(438, 438, 438))
        );

        javax.swing.GroupLayout AgregarProductoOTLayout = new javax.swing.GroupLayout(AgregarProductoOT.getContentPane());
        AgregarProductoOT.getContentPane().setLayout(AgregarProductoOTLayout);
        AgregarProductoOTLayout.setHorizontalGroup(
            AgregarProductoOTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AgregarProductoOTLayout.createSequentialGroup()
                .addComponent(jLayeredPane13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        AgregarProductoOTLayout.setVerticalGroup(
            AgregarProductoOTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        bultos.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        bultos.setMinimumSize(new java.awt.Dimension(1280, 740));
        bultos.setResizable(false);

        jInternalFrame1.setVisible(true);
        jInternalFrame1.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jPanel20.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jScrollPane6.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane6.setToolTipText("");

        jLabel83.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel83.setText("Número de Nota de Venta:");

        txtNumeroNotaVenta.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtNumeroNotaVenta.setEnabled(false);

        tblProductosPendientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código / ID licitación", "Producto", "Cantidad", "Especificación de comprador", "Especificación de Proveedor", "Moneda", "Precio Unitario", "Descuento", "Cargos", "Valor Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane26.setViewportView(tblProductosPendientes);

        jPanel8.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel84.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel84.setText("Cantidad de Producto en nota de venta:");

        txtQty.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtQty.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtQtyInputMethodTextChanged(evt);
            }
        });
        txtQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQtyActionPerformed(evt);
            }
        });
        txtQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtQtyKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtQtyKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel84)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(620, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel84)
                    .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        btnAgregarNV.setBackground(new java.awt.Color(0, 160, 39));
        btnAgregarNV.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAgregarNV.setText("1.-Agregar a nota de venta");
        btnAgregarNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarNVActionPerformed(evt);
            }
        });

        tblPaso.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N° de NV", "Código de OC", "Código / ID licitación", "Producto", "Cantidad", "Especificación de Comprador", "Especificación de Proveedor", "Moneda", "Precio Unitario", "Descuento", "Cargos", "Valor Total"
            }
        ));
        jScrollPane2.setViewportView(tblPaso);

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel43.setText("Productos en la nota de venta actual:");

        jLabel157.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel157.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel157.setText("Resumen:");

        tblProdsAgregadosNV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N° de NV", "Código de OC", "Código / ID licitación", "Producto", "Cantidad", "Especificación de Comprador", "Especificación de Proveedor", "Moneda", "Precio Unitario", "Descuento", "Cargos", "Valor Total"
            }
        ));
        jScrollPane28.setViewportView(tblProdsAgregadosNV);

        jButton13.setBackground(new java.awt.Color(0, 160, 39));
        jButton13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton13.setText("3.-Confirmar y volver");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(0, 160, 39));
        jButton6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton6.setText("2.-Confirmar Productos en una Nota de Venta");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        btnBorrarNV.setBackground(new java.awt.Color(204, 51, 0));
        btnBorrarNV.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnBorrarNV.setText("Borrar Selección ");
        btnBorrarNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarNVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane28, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 1177, Short.MAX_VALUE)
                            .addComponent(jScrollPane26, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel157, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 29, Short.MAX_VALUE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel11Layout.createSequentialGroup()
                                    .addComponent(jLabel83)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtNumeroNotaVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnAgregarNV, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel43, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 1177, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                                .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBorrarNV, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel83)
                    .addComponent(txtNumeroNotaVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane26, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAgregarNV)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel43)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(btnBorrarNV))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel157)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane28, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton13)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        jScrollPane6.setViewportView(jPanel11);

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 1221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(516, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(223, 223, 223))
        );

        jScrollPane1.setViewportView(jPanel20);

        jInternalFrame1.getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 1250, 630));

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jButton7.setText("Cerrar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jInternalFrame1.getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1011, 10, 250, -1));

        jLabel53.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlataformaVentas/Imagenes/BackgroundNew.png"))); // NOI18N
        jInternalFrame1.getContentPane().add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1270, 710));

        javax.swing.GroupLayout bultosLayout = new javax.swing.GroupLayout(bultos.getContentPane());
        bultos.getContentPane().setLayout(bultosLayout);
        bultosLayout.setHorizontalGroup(
            bultosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1)
        );
        bultosLayout.setVerticalGroup(
            bultosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)
        );

        InventarioPorBodega.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        InventarioPorBodega.setMinimumSize(new java.awt.Dimension(1280, 740));
        InventarioPorBodega.setResizable(false);

        jScrollPane7.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane7.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        panelIngresoProducto1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelIngresoProducto1.setEnabled(true);
        panelIngresoProducto1.setMaximumSize(new java.awt.Dimension(1280, 740));
        panelIngresoProducto1.setMinimumSize(new java.awt.Dimension(1280, 740));
        panelIngresoProducto1.setPreferredSize(new java.awt.Dimension(1280, 740));

        jLabel95.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel95.setText("ID de Producto:");

        txtIDproductoIngreso1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N

        jLabel123.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel123.setText("Stock a Ingresar:");

        txtStockIngresado1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtStockIngresado1.setText("0");

        jLabel124.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel124.setText("SKU:");

        txtSKUIngreso1.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N

        jLabel126.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel126.setText("Nombre de Producto:");

        jLabel127.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel127.setText("Categoría:");

        jLabel128.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel128.setText("Precio de Venta(Unitario):");

        jLabel129.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel129.setText("Precio Costo:");

        jLabel132.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel132.setText("Descripción:");

        jLabel133.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel133.setText("Distribuidor:");

        jLabel134.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel134.setText("Regiones:");

        jLabel135.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel135.setText("Condición de Despacho:");

        jLabel136.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel136.setText("Días Hábiles:");

        jLabel141.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel141.setText("Status del Producto:");

        txtNombreProductoIngreso1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N

        txtPrecioVentaIngreso1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtPrecioVentaIngreso1.setText("0");

        txtPrecioCostoIngreso1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtPrecioCostoIngreso1.setText("0");

        txtDescripcionIngreso1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N

        txtRegionesIngreso1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N

        txtCondicionDespachoIngreso1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N

        txtDiasHabilesIngreso1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N

        cmbStatusProdIngreso1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        cmbStatusProdIngreso1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sin Stock", "Habilitado" }));

        jLabel148.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel148.setText("Información del Producto:");

        btnConfirmarInfoProd1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnConfirmarInfoProd1.setText("Confirmar Información de Producto");
        btnConfirmarInfoProd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarInfoProd1ActionPerformed(evt);
            }
        });

        cmbTransporte1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        cmbTransporte1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Transporte", "Acima", "Transporte Externo" }));

        cmbBodega2.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N

        jLabel146.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel146.setText("Bodega:");

        jLabel149.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel149.setText("Transporte:");

        jLabel150.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel150.setText("Sección de Bodega:");

        cmbSeccionBodega1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N

        cmbDistribuidorStock0.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N

        cmbConvenioMarco.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        cmbConvenioMarco.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar Convenio Marco" }));

        javax.swing.GroupLayout panelIngresoProducto1Layout = new javax.swing.GroupLayout(panelIngresoProducto1);
        panelIngresoProducto1.setLayout(panelIngresoProducto1Layout);
        panelIngresoProducto1Layout.setHorizontalGroup(
            panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelIngresoProducto1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelIngresoProducto1Layout.createSequentialGroup()
                        .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel95)
                            .addComponent(jLabel124)
                            .addComponent(jLabel126)
                            .addComponent(jLabel127)
                            .addComponent(jLabel128)
                            .addComponent(jLabel129)
                            .addComponent(jLabel133)
                            .addComponent(jLabel132)
                            .addComponent(jLabel134)
                            .addComponent(jLabel135)
                            .addComponent(jLabel136)
                            .addComponent(jLabel141)
                            .addComponent(jLabel123)
                            .addComponent(jLabel146)
                            .addComponent(jLabel149))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSKUIngreso1)
                            .addComponent(txtNombreProductoIngreso1)
                            .addComponent(txtPrecioVentaIngreso1)
                            .addComponent(txtPrecioCostoIngreso1)
                            .addComponent(txtDescripcionIngreso1)
                            .addComponent(txtRegionesIngreso1)
                            .addComponent(txtCondicionDespachoIngreso1)
                            .addComponent(txtDiasHabilesIngreso1)
                            .addComponent(cmbStatusProdIngreso1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtStockIngresado1)
                            .addComponent(cmbDistribuidorStock0, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbConvenioMarco, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(panelIngresoProducto1Layout.createSequentialGroup()
                                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(panelIngresoProducto1Layout.createSequentialGroup()
                                        .addComponent(cmbBodega2, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel150)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cmbSeccionBodega1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtIDproductoIngreso1)
                                    .addComponent(cmbTransporte1, 0, 911, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(panelIngresoProducto1Layout.createSequentialGroup()
                        .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel148)
                            .addComponent(btnConfirmarInfoProd1))
                        .addGap(0, 0, 0)))
                .addGap(349, 349, 349))
        );
        panelIngresoProducto1Layout.setVerticalGroup(
            panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelIngresoProducto1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel148)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbTransporte1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel149))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbBodega2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel150)
                    .addComponent(cmbSeccionBodega1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel146))
                .addGap(18, 18, 18)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIDproductoIngreso1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel95))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel124)
                    .addComponent(txtSKUIngreso1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel126)
                    .addComponent(txtNombreProductoIngreso1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel127)
                    .addComponent(cmbConvenioMarco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel128)
                    .addComponent(txtPrecioVentaIngreso1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel129)
                    .addComponent(txtPrecioCostoIngreso1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel133)
                    .addComponent(cmbDistribuidorStock0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel132)
                    .addComponent(txtDescripcionIngreso1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel134)
                    .addComponent(txtRegionesIngreso1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCondicionDespachoIngreso1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel135))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDiasHabilesIngreso1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel136))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel141)
                    .addComponent(cmbStatusProdIngreso1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel123)
                    .addComponent(txtStockIngresado1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConfirmarInfoProd1)
                .addContainerGap())
        );

        jScrollPane7.setViewportView(panelIngresoProducto1);

        javax.swing.GroupLayout InventarioPorBodegaLayout = new javax.swing.GroupLayout(InventarioPorBodega.getContentPane());
        InventarioPorBodega.getContentPane().setLayout(InventarioPorBodegaLayout);
        InventarioPorBodegaLayout.setHorizontalGroup(
            InventarioPorBodegaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
            .addGroup(InventarioPorBodegaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1280, Short.MAX_VALUE))
        );
        InventarioPorBodegaLayout.setVerticalGroup(
            InventarioPorBodegaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 740, Short.MAX_VALUE)
            .addGroup(InventarioPorBodegaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setResizable(false);

        panelConsultaMPFrame.setMinimumSize(new java.awt.Dimension(1280, 720));

        panelConsultaMP.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Código de Orden de Compra:");

        btnConsultaOC.setText("Consultar");
        btnConsultaOC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultaOCActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setText("Proveedor:");

        jLabel3.setText("Dirección:");

        jLabel4.setText("Rut:");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel8.setText("Información de la empresa:");

        jLabel9.setText("Nombre de Contacto:");

        jLabel10.setText("Fono:");

        jLabel11.setText("Rut de Comprador:");

        jLabel12.setText("Dirección Demandante:");

        jLabel13.setText("Demandante:");

        jLabel14.setText("Fecha de Creación de OC:");

        jLabel16.setText("Teléfono:");

        jLabel17.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel17.setText("Información de Demandante:");

        jLabel18.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel18.setText("Información de Orden:");

        jLabel19.setText("Nombre de Orden de Compra:");

        jLabel20.setText("Fecha de Aceptación OC:");

        jLabel21.setText("Direcciones de Despacho:");

        jLabel22.setText("Dirección de Envío de factura:");

        jLabel23.setText("Metodo de Despacho:");

        jLabel24.setText("Contacto de Pago:");

        jLabel25.setText("Forma de Pago:");

        jLabel26.setText("Contacto OC:");

        jLabel27.setText("Email de contacto:");

        btnGuardarOrden.setBackground(new java.awt.Color(0, 204, 0));
        btnGuardarOrden.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnGuardarOrden.setText("2-Generar Nota de Venta");
        btnGuardarOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarOrdenActionPerformed(evt);
            }
        });

        jLabel33.setText("Unidad de Compra:");

        jTabbedPane1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tblMP = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int celIndex){
                return false;
            }
        };
        tblMP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código / ID Licitación CM", "Producto", "Cantidad", "Especificación de Comprador", "Especificación de Proveedor", "Moneda", "Precio Unitario", "Descuento", "Cargos", "Valor Total"
            }
        ));
        jScrollPane4.setViewportView(tblMP);

        jTabbedPane1.addTab("Información de Productos", jScrollPane4);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel28.setText("Neto:");

        jLabel29.setText("*Dcto:");

        jLabel30.setText("*Cargos:");

        jLabel31.setText("Subtotal:");

        jLabel34.setText("19% IVA:");

        jLabel35.setText("*Impuesto Especifico:");

        jLabel36.setText("Total:");

        btnCalculoTotales.setText("Calcular valores");
        btnCalculoTotales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculoTotalesActionPerformed(evt);
            }
        });

        jLabel6.setText("*Valores obligatorios, en caso de ser no saber el valor dejar como 0.00 si es USD o 0 si es CLP");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(1, 1, 1))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(21, 21, 21))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(16, 16, 16))
                            .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtCargos, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                            .addComponent(txtDcto, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNeto, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSubTotal, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel35)
                            .addComponent(jLabel36)
                            .addComponent(jLabel34))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTotal)
                            .addComponent(txtImpuestoEspecifico)
                            .addComponent(txtIva)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnCalculoTotales)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(617, 617, 617))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(txtNeto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtImpuestoEspecifico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDcto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29)
                    .addComponent(jLabel35))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtTotal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel30)
                        .addComponent(txtCargos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel36)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCalculoTotales)
                .addGap(60, 60, 60))
        );

        jTabbedPane1.addTab("Totales", jPanel2);

        txtDireccionDemandante.setText("-");

        txtTelefonoDemandante.setText("-");

        txtRutComprador.setText("-");

        txtUnidadCompra.setText("-");

        txtDemandante.setText("-");

        txtFechaEnvioOC.setText("-");

        txtDireccionProveedor.setText("-");

        txtProveedor.setText("-");

        txtRutProveedor.setText("-");

        txtNombreProveedor.setText("-");

        txtEmailContacto.setText("-");

        txtFonoProveedor.setText("-");

        txtNombreOC.setText("-");

        txtFechaAceptacion.setText("-");

        txtDireccionDespacho.setText("-");

        txtDireccionEnvioFactura.setText("-");

        txtMetodoDespacho.setText("-");

        txtContactoPago.setText("-");

        txtFormaPago.setText("-");

        txtContactoOC.setText("-");

        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnBorrarProducto.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnBorrarProducto.setText("Borrar Producto");
        btnBorrarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarProductoActionPerformed(evt);
            }
        });

        //btnAddProductoOT.setVisible(false);
        //btnAddProductoOT.setEnabled(false);
        btnAddProductoOT.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnAddProductoOT.setText("Añadir Producto a Lista");
        btnAddProductoOT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProductoOTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAddProductoOT, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBorrarProducto, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBorrarProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddProductoOT))
                .addContainerGap())
        );

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Gestionar Productos");

        jPanel6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnNVParcializada.setBackground(new java.awt.Color(0, 204, 0));
        btnNVParcializada.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnNVParcializada.setText("1-Definir Entrega Parcializada y Guías de Despacho");
        btnNVParcializada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNVParcializadaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNVParcializada, javax.swing.GroupLayout.DEFAULT_SIZE, 1136, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNVParcializada)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel41.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel41.setText("Resumen de Orden Parcializada");

        jPanel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tblResumenParcializada.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N° de NV", "Codigo Orden Compra", "Código / ID licitación", "Producto", "Cantidad", "Especificación de Comprador", "Especificación de Proveedor", "Moneda", "Precio Unitario", "Descuento", "Cargos", "Valor Total"
            }
        ));
        jScrollPane5.setViewportView(tblResumenParcializada);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1136, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel42.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel42.setText("Entrega Parcializada");

        jLabel32.setText("Observación de Orden:");

        jLabel62.setText("Observación de Despacho:");

        txtObservacion.setText("-");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel62)
                    .addComponent(jLabel32))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtObservacion, javax.swing.GroupLayout.DEFAULT_SIZE, 965, Short.MAX_VALUE)
                    .addComponent(txtObservacionDespacho))
                .addGap(53, 53, 53))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(txtObservacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtObservacionDespacho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel62))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, 1157, Short.MAX_VALUE)
                        .addGap(6, 6, 6))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel17)
                                .addComponent(jLabel18)
                                .addComponent(jLabel8)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel16)
                                        .addComponent(jLabel12)
                                        .addComponent(jLabel11)
                                        .addComponent(jLabel27))
                                    .addGap(4, 4, 4)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtTelefonoDemandante, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
                                        .addComponent(txtRutComprador)
                                        .addComponent(txtEmailContacto)
                                        .addComponent(txtDireccionDemandante))
                                    .addGap(13, 13, 13)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel24)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel13)
                                                .addComponent(jLabel33))
                                            .addGap(10, 10, 10)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtUnidadCompra)
                                                .addComponent(txtDemandante)
                                                .addComponent(txtContactoPago, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(jLabel4))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtDireccionProveedor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
                                            .addComponent(txtProveedor, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtRutProveedor))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel10)
                                                .addGap(101, 101, 101))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel9)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtFonoProveedor, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                                            .addComponent(txtNombreProveedor)))
                                    .addComponent(txtMetodoDespacho, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFechaAceptacion, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtContactoOC, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel22)
                                .addComponent(jLabel21)
                                .addComponent(jLabel19)
                                .addComponent(jLabel14))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtFechaEnvioOC, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtDireccionEnvioFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtDireccionDespacho, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtNombreOC, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addComponent(jLabel20))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(612, 612, 612)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel23)
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel26)))
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 1166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel41, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 19, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnGuardarOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 1157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtRutComprador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(txtDemandante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtDireccionDemandante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33)
                    .addComponent(txtUnidadCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtTelefonoDemandante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(txtContactoPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(txtEmailContacto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtNombreProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDireccionProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtFonoProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRutProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txtNombreOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(txtFechaAceptacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(txtDireccionDespacho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(txtDireccionEnvioFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(txtFechaEnvioOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(txtMetodoDespacho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(txtFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(txtContactoOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(17, 17, 17)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel42)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addComponent(jLabel41)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnGuardarOrden)
                .addContainerGap())
        );

        jScrollPane3.setViewportView(jPanel1);

        btnVolver7.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnVolver7.setText("Volver");
        btnVolver7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolver7ActionPerformed(evt);
            }
        });

        jLabel15.setText("Estado de cotización:");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblEstadoOrdenCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblEstadoOrdenCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelConsultaMPLayout = new javax.swing.GroupLayout(panelConsultaMP);
        panelConsultaMP.setLayout(panelConsultaMPLayout);
        panelConsultaMPLayout.setHorizontalGroup(
            panelConsultaMPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConsultaMPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelConsultaMPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelConsultaMPLayout.createSequentialGroup()
                        .addGroup(panelConsultaMPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelConsultaMPLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtOC, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnConsultaOC, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnVolver7))
                    .addGroup(panelConsultaMPLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelConsultaMPLayout.setVerticalGroup(
            panelConsultaMPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelConsultaMPLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(panelConsultaMPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelConsultaMPLayout.createSequentialGroup()
                        .addGroup(panelConsultaMPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnConsultaOC))
                    .addComponent(btnVolver7)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlataformaVentas/Imagenes/acima-logo-200p.png"))); // NOI18N

        b_Titulo.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        b_Titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        b_Titulo.setText("Consultar Ordenes de Compra");
        b_Titulo.setToolTipText("");

        lblCodigo.setVisible(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b_Titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 1023, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblCodigo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(panelConsultaMP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(lblCodigo))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(b_Titulo)))
                .addGap(10, 10, 10))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addContainerGap(130, Short.MAX_VALUE)
                    .addComponent(panelConsultaMP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        lblFondoConsultaMP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFondoConsultaMP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlataformaVentas/Imagenes/BackgroundNew.png"))); // NOI18N
        lblFondoConsultaMP.setMaximumSize(new java.awt.Dimension(1280, 685));
        lblFondoConsultaMP.setMinimumSize(new java.awt.Dimension(1280, 685));
        lblFondoConsultaMP.setPreferredSize(new java.awt.Dimension(1280, 685));

        panelConsultaMPFrame.setLayer(jPanel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelConsultaMPFrame.setLayer(lblFondoConsultaMP, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout panelConsultaMPFrameLayout = new javax.swing.GroupLayout(panelConsultaMPFrame);
        panelConsultaMPFrame.setLayout(panelConsultaMPFrameLayout);
        panelConsultaMPFrameLayout.setHorizontalGroup(
            panelConsultaMPFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConsultaMPFrameLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 1260, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(lblFondoConsultaMP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        panelConsultaMPFrameLayout.setVerticalGroup(
            panelConsultaMPFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConsultaMPFrameLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(lblFondoConsultaMP, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelConsultaMPFrame, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelConsultaMPFrame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConsultaOCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultaOCActionPerformed

        try {
            String query = "select codigoOrdenCompra from ordenTrabajo where codigoOrdenCompra = ?";
            String param = txtOC.getText();
            PreparedStatement pst = cn.prepareStatement(query);
            pst.setString(1, param);
            ResultSet rs = pst.executeQuery();
            String oc = "";
            while (rs.next()) {
                oc = rs.getString(1);
            }
            if (txtOC.getText().equalsIgnoreCase(oc)) {
                int resp = JOptionPane.showConfirmDialog(null, "Esta orden de compra ya se encuentra registrada ¿Esta seguro(a) de ingresarla nuevamente?", "Alerta!", JOptionPane.YES_NO_OPTION);
                if (resp == 0) {
                    try {
                        //Consulta de BD
                        //En esta sección se ingresa el Request para que la "API", digamosle así xd y posteriormente entrega el resultado del mismo.
                        String format = "xml";
                        String url = "http://api.mercadopublico.cl/servicios/v1/publico/ordenesdecompra.xml?codigo=" + txtOC.getText().toUpperCase() + "&ticket=210555F9-8B7E-48ED-93ED-2504CAD3B155";
                        System.out.println(url);
                        //Se crea un obj de tipo url con el cual se realizará el request
                        URL obj = new URL(url);
                        HttpURLConnection con;

                        con = (HttpURLConnection) obj.openConnection();

                        int responseCode;

                        responseCode = con.getResponseCode();

                        //Por motivos de Debug, se necesita el codigo de respuesta
                        System.out.println("Código de Respuesta : " + responseCode);
                        StringBuffer response;
                        try (BufferedReader in = new BufferedReader(
                                new InputStreamReader(con.getInputStream(), StandardCharsets.UTF_8))) {
                            String inputLine;
                            response = new StringBuffer();
                            while ((inputLine = in.readLine()) != null) {
                                response.append(inputLine);
                            }
                        }
                        //print in String
                        // System.out.println(response.toString());
                        org.w3c.dom.Document doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new InputSource(new StringReader(response.toString())));
                        //Aqui segun el TAG del XML va a poder obtener los elementos...
                        //Obedeciendo el orden del documento, los tags son los siguientes...

                        NodeList ordenes = doc.getElementsByTagName("Ordenes");
                        if (ordenes.getLength() > 0) {
                            Element err = (Element) ordenes.item(0);
                            txtFechaEnvioOC.setText((err.getElementsByTagName("FechaCreacion").item(0).getTextContent()));
                            lblEstadoOrdenCompra.setText(err.getElementsByTagName("Estado").item(0).getTextContent());
                            txtUnidadCompra.setText(err.getElementsByTagName("NombreUnidad").item(0).getTextContent());

                        } else {
                            // success
                        }

                        NodeList comprador = doc.getElementsByTagName("Comprador");
                        if (comprador.getLength() > 0) {
                            Element err = (Element) comprador.item(0);
                            txtRutComprador.setText(err.getElementsByTagName("RutUnidad").item(0).getTextContent());
                            txtDireccionDemandante.setText(err.getElementsByTagName("DireccionUnidad").item(0).getTextContent());
                            txtDemandante.setText(err.getElementsByTagName("NombreOrganismo").item(0).getTextContent());
                            txtTelefonoDemandante.setText(err.getElementsByTagName("FonoContacto").item(0).getTextContent());
                            txtEmailContacto.setText(err.getElementsByTagName("MailContacto").item(0).getTextContent());
                        } else {
                            // success
                        }

                        NodeList proveedor = doc.getElementsByTagName("Proveedor");
                        if (proveedor.getLength() > 0) {
                            Element err = (Element) proveedor.item(0);
                            txtProveedor.setText(err.getElementsByTagName("Nombre").item(0).getTextContent());
                            txtDireccionProveedor.setText(err.getElementsByTagName("Direccion").item(0).getTextContent());
                            txtRutProveedor.setText(err.getElementsByTagName("RutSucursal").item(0).getTextContent());
                            txtNombreProveedor.setText(err.getElementsByTagName("NombreContacto").item(0).getTextContent());
                            txtFonoProveedor.setText(err.getElementsByTagName("FonoContacto").item(0).getTextContent());
                        } else {
                            // success
                        }

                        NodeList fechas = doc.getElementsByTagName("Fechas");
                        if (fechas.getLength() > 0) {
                            Element err = (Element) fechas.item(0);
                            txtFechaEnvioOC.setText(err.getElementsByTagName("FechaCreacion").item(0).getTextContent());
                            txtFechaAceptacion.setText(err.getElementsByTagName("FechaAceptacion").item(0).getTextContent());
                        } else {
                            // success
                        }

                        NodeList detalleOrden = doc.getElementsByTagName("OrdenCompra");
                        if (detalleOrden.getLength() > 0) {
                            Element err = (Element) detalleOrden.item(0);
                            txtNombreOC.setText(err.getElementsByTagName("Nombre").item(0).getTextContent());
                            txtDireccionDespacho.setText(err.getElementsByTagName("DireccionUnidad").item(0).getTextContent() + " "
                                    + err.getElementsByTagName("ComunaUnidad").item(0).getTextContent() + " " + err.getElementsByTagName("RegionUnidad").item(0).getTextContent());
                            txtDireccionEnvioFactura.setText(err.getElementsByTagName("DireccionUnidad").item(0).getTextContent() + " "
                                    + err.getElementsByTagName("ComunaUnidad").item(0).getTextContent() + " "
                                    + err.getElementsByTagName("RegionUnidad").item(0).getTextContent());
                            txtMetodoDespacho.setText(err.getElementsByTagName("TipoDespacho").item(0).getTextContent());
                            txtContactoPago.setText(err.getElementsByTagName("NombreContacto").item(0).getTextContent() + " "
                                    + err.getElementsByTagName("FonoContacto").item(0).getTextContent() + " "
                                    + err.getElementsByTagName("MailContacto").item(0).getTextContent());
                            txtFormaPago.setText(err.getElementsByTagName("FormaPago").item(0).getTextContent());
                            txtContactoOC.setText(err.getElementsByTagName("NombreContacto").item(0).getTextContent());
                        } else {
                            // success
                        }

                        NodeList flowList0 = doc.getElementsByTagName("Listado");
                        Element err1 = (Element) flowList0.item(0);
                        int num = Integer.parseInt(err1.getElementsByTagName("Cantidad").item(0).getTextContent());
                        System.out.println(num + "");
                        NodeList flowList1 = doc.getElementsByTagName("Listado");
                        DefaultTableModel modelo = (DefaultTableModel) tblMP.getModel();

                        for (int m = 0; m < tblMP.getRowCount(); m++) {
                            modelo.removeRow(m);
                        }
                        modelo.setRowCount(num);
                        for (int x = 0; x < num; x++) {
                            System.out.println("Listado " + flowList1.getLength());

                            NodeList flowList = doc.getElementsByTagName("Item");
                            for (int i = 0; i < flowList.getLength(); i++) {
                                Element err = (Element) flowList.item(x);

                                String str = err.getElementsByTagName("EspecificacionComprador").item(0).getTextContent();
                                if (str.contains("(") && str.contains(")")) {
                                    //Contiene o no
                                    String answer = str.substring(str.indexOf("(") + 1, str.indexOf(")"));
                                    modelo.setValueAt(answer, x, 0);
                                } else {
                                    modelo.setValueAt("-", x, 0);
                                }

                                modelo.setValueAt(err.getElementsByTagName("EspecificacionComprador").item(0).getTextContent(), x, 1);
                                modelo.setValueAt(err.getElementsByTagName("Cantidad").item(0).getTextContent(), x, 2);
                                modelo.setValueAt(err.getElementsByTagName("EspecificacionComprador").item(0).getTextContent(), x, 3);
                                modelo.setValueAt(err.getElementsByTagName("EspecificacionProveedor").item(0).getTextContent(), x, 4);
                                modelo.setValueAt(err.getElementsByTagName("Moneda").item(0).getTextContent(), x, 5);
                                modelo.setValueAt(err.getElementsByTagName("PrecioNeto").item(0).getTextContent(), x, 6);
                                modelo.setValueAt(err.getElementsByTagName("TotalDescuentos").item(0).getTextContent(), x, 7);
                                modelo.setValueAt(err.getElementsByTagName("TotalCargos").item(0).getTextContent(), x, 8);
                                modelo.setValueAt(err.getElementsByTagName("Total").item(0).getTextContent(), x, 9);
                            }
                        }

                        NodeList detalleMontos = doc.getElementsByTagName("OrdenCompra");

                        if (detalleMontos.getLength()
                                > 0) {
                            Element err = (Element) detalleMontos.item(0);
                            txtNeto.setText("$" + err.getElementsByTagName("TotalNeto").item(0).getTextContent());
                            txtDcto.setText("$" + err.getElementsByTagName("Descuentos").item(0).getTextContent());
                            txtCargos.setText("$" + err.getElementsByTagName("Cargos").item(0).getTextContent());
                            txtSubTotal.setText(Integer.toString(Integer.parseInt(txtNeto.getText().substring(1)) - Integer.parseInt(txtDcto.getText().substring(1))));
                            txtIva.setText("$" + err.getElementsByTagName("Impuestos").item(0).getTextContent());
                            txtImpuestoEspecifico.setText("$" + err.getElementsByTagName("TotalImpuestos").item(0).getTextContent());
                            txtTotal.setText("$" + err.getElementsByTagName("Total").item(0).getTextContent());

                        } else {
                            // success
                        }
                        NodeList descripcion = doc.getElementsByTagName("OrdenCompra");

                        if (descripcion.getLength()
                                > 0) {
                            Element err = (Element) descripcion.item(0);
                            txtObservacion.setText(err.getElementsByTagName("Descripcion").item(0).getTextContent());
                        } else {
                            // success
                        }
                        System.out.println(
                                "La consulta fue realizada con éxito");

                    } catch (MalformedURLException ex) {
                        Logger.getLogger(ConsultaMP.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(ConsultaMP.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ParserConfigurationException ex) {
                        Logger.getLogger(ConsultaMP.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SAXException ex) {
                        Logger.getLogger(ConsultaMP.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Ingrese una orden de compra diferente");
                }

            } else {
                try {
                    //Consulta de BD
                    //En esta sección se ingresa el Request para que la "API", digamosle así xd y posteriormente entrega el resultado del mismo.
                    String format = "xml";
                    String url = "http://api.mercadopublico.cl/servicios/v1/publico/ordenesdecompra.xml?codigo=" + txtOC.getText().toUpperCase() + "&ticket=210555F9-8B7E-48ED-93ED-2504CAD3B155";
                    System.out.println(url);
                    //Se crea un obj de tipo url con el cual se realizará el request
                    URL obj = new URL(url);
                    HttpURLConnection con;

                    con = (HttpURLConnection) obj.openConnection();

                    int responseCode;

                    responseCode = con.getResponseCode();

                    //Por motivos de Debug, se necesita el codigo de respuesta
                    System.out.println("Código de Respuesta : " + responseCode);
                    StringBuffer response;
                    try (BufferedReader in = new BufferedReader(
                            new InputStreamReader(con.getInputStream(), StandardCharsets.UTF_8))) {
                        String inputLine;
                        response = new StringBuffer();
                        while ((inputLine = in.readLine()) != null) {
                            response.append(inputLine);
                        }
                    }
                    //print in String
                    // System.out.println(response.toString());
                    org.w3c.dom.Document doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new InputSource(new StringReader(response.toString())));
                    //Aqui segun el TAG del XML va a poder obtener los elementos...
                    //Obedeciendo el orden del documento, los tags son los siguientes...

                    NodeList ordenes = doc.getElementsByTagName("Ordenes");
                    if (ordenes.getLength() > 0) {
                        Element err = (Element) ordenes.item(0);
                        txtFechaEnvioOC.setText((err.getElementsByTagName("FechaCreacion").item(0).getTextContent()));
                        lblEstadoOrdenCompra.setText(err.getElementsByTagName("Estado").item(0).getTextContent());
                        txtUnidadCompra.setText(err.getElementsByTagName("NombreUnidad").item(0).getTextContent());

                    } else {
                        // success
                    }

                    NodeList comprador = doc.getElementsByTagName("Comprador");
                    if (comprador.getLength() > 0) {
                        Element err = (Element) comprador.item(0);
                        txtRutComprador.setText(err.getElementsByTagName("RutUnidad").item(0).getTextContent());
                        txtDireccionDemandante.setText(err.getElementsByTagName("DireccionUnidad").item(0).getTextContent());
                        txtDemandante.setText(err.getElementsByTagName("NombreOrganismo").item(0).getTextContent());
                        txtTelefonoDemandante.setText(err.getElementsByTagName("FonoContacto").item(0).getTextContent());
                        txtEmailContacto.setText(err.getElementsByTagName("MailContacto").item(0).getTextContent());
                    } else {
                        // success
                    }

                    NodeList proveedor = doc.getElementsByTagName("Proveedor");
                    if (proveedor.getLength() > 0) {
                        Element err = (Element) proveedor.item(0);
                        txtProveedor.setText(err.getElementsByTagName("Nombre").item(0).getTextContent());
                        txtDireccionProveedor.setText(err.getElementsByTagName("Direccion").item(0).getTextContent());
                        txtRutProveedor.setText(err.getElementsByTagName("RutSucursal").item(0).getTextContent());
                        txtNombreProveedor.setText(err.getElementsByTagName("NombreContacto").item(0).getTextContent());
                        txtFonoProveedor.setText(err.getElementsByTagName("FonoContacto").item(0).getTextContent());
                    } else {
                        // success
                    }

                    NodeList fechas = doc.getElementsByTagName("Fechas");
                    if (fechas.getLength() > 0) {
                        Element err = (Element) fechas.item(0);
                        txtFechaEnvioOC.setText(err.getElementsByTagName("FechaCreacion").item(0).getTextContent());
                        txtFechaAceptacion.setText(err.getElementsByTagName("FechaAceptacion").item(0).getTextContent());
                    } else {
                        // success
                    }

                    NodeList detalleOrden = doc.getElementsByTagName("OrdenCompra");
                    if (detalleOrden.getLength() > 0) {
                        Element err = (Element) detalleOrden.item(0);
                        txtNombreOC.setText(err.getElementsByTagName("Nombre").item(0).getTextContent());
                        txtDireccionDespacho.setText(err.getElementsByTagName("DireccionUnidad").item(0).getTextContent() + " "
                                + err.getElementsByTagName("ComunaUnidad").item(0).getTextContent() + " " + err.getElementsByTagName("RegionUnidad").item(0).getTextContent());
                        txtDireccionEnvioFactura.setText(err.getElementsByTagName("DireccionUnidad").item(0).getTextContent() + " "
                                + err.getElementsByTagName("ComunaUnidad").item(0).getTextContent() + " "
                                + err.getElementsByTagName("RegionUnidad").item(0).getTextContent());
                        txtMetodoDespacho.setText(err.getElementsByTagName("TipoDespacho").item(0).getTextContent());
                        txtContactoPago.setText(err.getElementsByTagName("NombreContacto").item(0).getTextContent() + " "
                                + err.getElementsByTagName("FonoContacto").item(0).getTextContent() + " "
                                + err.getElementsByTagName("MailContacto").item(0).getTextContent());
                        txtFormaPago.setText(err.getElementsByTagName("FormaPago").item(0).getTextContent());
                        txtContactoOC.setText(err.getElementsByTagName("NombreContacto").item(0).getTextContent());
                    } else {
                        // success
                    }

                    NodeList flowList0 = doc.getElementsByTagName("Listado");
                    Element err1 = (Element) flowList0.item(0);
                    int num = Integer.parseInt(err1.getElementsByTagName("Cantidad").item(0).getTextContent());
                    System.out.println(num + "");
                    NodeList flowList1 = doc.getElementsByTagName("Listado");
                    DefaultTableModel modelo = (DefaultTableModel) tblMP.getModel();

                    for (int m = 0; m < tblMP.getRowCount(); m++) {
                        modelo.removeRow(m);
                    }
                    modelo.setRowCount(num);
                    for (int x = 0; x < num; x++) {
                        System.out.println("Listado " + flowList1.getLength());

                        NodeList flowList = doc.getElementsByTagName("Item");
                        for (int i = 0; i < flowList.getLength(); i++) {
                            Element err = (Element) flowList.item(x);

                            String str = err.getElementsByTagName("EspecificacionComprador").item(0).getTextContent();
                            if (str.contains("(") && str.contains(")")) {
                                //Contiene o no
                                String answer = str.substring(str.indexOf("(") + 1, str.indexOf(")"));
                                modelo.setValueAt(answer, x, 0);
                            } else {
                                modelo.setValueAt("-", x, 0);
                            }

                            modelo.setValueAt(err.getElementsByTagName("EspecificacionComprador").item(0).getTextContent(), x, 1);
                            modelo.setValueAt(err.getElementsByTagName("Cantidad").item(0).getTextContent(), x, 2);
                            modelo.setValueAt(err.getElementsByTagName("EspecificacionComprador").item(0).getTextContent(), x, 3);
                            modelo.setValueAt(err.getElementsByTagName("EspecificacionProveedor").item(0).getTextContent(), x, 4);
                            modelo.setValueAt(err.getElementsByTagName("Moneda").item(0).getTextContent(), x, 5);
                            modelo.setValueAt(err.getElementsByTagName("PrecioNeto").item(0).getTextContent(), x, 6);
                            modelo.setValueAt(err.getElementsByTagName("TotalDescuentos").item(0).getTextContent(), x, 7);
                            modelo.setValueAt(err.getElementsByTagName("TotalCargos").item(0).getTextContent(), x, 8);
                            modelo.setValueAt(err.getElementsByTagName("Total").item(0).getTextContent(), x, 9);
                        }
                    }

                    NodeList detalleMontos = doc.getElementsByTagName("OrdenCompra");

                    if (detalleMontos.getLength()
                            > 0) {
                        Element err = (Element) detalleMontos.item(0);
                        txtNeto.setText("$" + err.getElementsByTagName("TotalNeto").item(0).getTextContent());
                        txtDcto.setText("$" + err.getElementsByTagName("Descuentos").item(0).getTextContent());
                        txtCargos.setText("$" + err.getElementsByTagName("Cargos").item(0).getTextContent());
                        txtSubTotal.setText(Integer.toString(Integer.parseInt(txtNeto.getText().substring(1)) - Integer.parseInt(txtDcto.getText().substring(1))));
                        txtIva.setText("$" + err.getElementsByTagName("Impuestos").item(0).getTextContent());
                        txtImpuestoEspecifico.setText("$" + err.getElementsByTagName("TotalImpuestos").item(0).getTextContent());
                        txtTotal.setText("$" + err.getElementsByTagName("Total").item(0).getTextContent());

                    } else {
                        // success
                    }
                    NodeList descripcion = doc.getElementsByTagName("OrdenCompra");

                    if (descripcion.getLength()
                            > 0) {
                        Element err = (Element) descripcion.item(0);
                        txtObservacion.setText(err.getElementsByTagName("Descripcion").item(0).getTextContent());
                    } else {
                        // success
                    }
                    System.out.println(
                            "La consulta fue realizada con éxito");

                } catch (MalformedURLException ex) {
                    Logger.getLogger(ConsultaMP.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(ConsultaMP.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ParserConfigurationException ex) {
                    Logger.getLogger(ConsultaMP.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SAXException ex) {
                    Logger.getLogger(ConsultaMP.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex);
        }


    }//GEN-LAST:event_btnConsultaOCActionPerformed

    private void btnVolver7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolver7ActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnVolver7ActionPerformed

    public class RotateEvent extends PdfPageEventHelper {

        public void onStartPage(PdfWriter writer, Document document) {
            writer.addPageDictEntry(PdfName.ROTATE, PdfPage.SEASCAPE);
        }
    }

    private void btnGuardarOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarOrdenActionPerformed
        try {
            if (txtObservacionDespacho.getText().equals(null) || txtObservacionDespacho.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Observación de despacho se encuentra vacía.");
            } else {
                String msgConfirmacion = JOptionPane.showInputDialog("Ingrese Código de Autorización");
                String validar = msgConfirmacion;
                if (validar.equals(lblCodigo.getText())) {
                    int selectedRows = tblResumenParcializada.getRowCount();

                    int selectedRows2 = tblResumenParcializada.getRowCount();
                    for (int i = 0; i < selectedRows; i++) {
                        String queryDetalle = "INSERT INTO `acimabasededatos`.`detalleordentrabajo` (idOrden,codigoOrdenCompra,`codigoProducto`, `nombreProducto`, `cantidad`,`moneda`,"
                                + " `precioUnitario`, `descuento`, `cargos`, `valorTotal`) "
                                + " VALUES(?,?,?,?,?,?,?,?,?,?);";
                        PreparedStatement pstDetalle = cn.prepareStatement(queryDetalle);
                        pstDetalle.setString(1, tblResumenParcializada.getValueAt(i, 0).toString());
                        pstDetalle.setString(2, txtOC.getText());
                        pstDetalle.setString(3, tblResumenParcializada.getValueAt(i, 2).toString());
                        pstDetalle.setString(4, (tblResumenParcializada.getValueAt(i, 3).toString()));
                        pstDetalle.setString(5, (tblResumenParcializada.getValueAt(i, 4).toString()));
                        pstDetalle.setString(6, (tblResumenParcializada.getValueAt(i, 7).toString()));
                        pstDetalle.setString(7, (tblResumenParcializada.getValueAt(i, 8).toString()));
                        pstDetalle.setString(8, tblResumenParcializada.getValueAt(i, 9).toString());
                        pstDetalle.setString(9, tblResumenParcializada.getValueAt(i, 10).toString());
                        pstDetalle.setString(10, tblResumenParcializada.getValueAt(i, 11).toString());

                        int x2 = pstDetalle.executeUpdate();

                    }
                    JOptionPane.showMessageDialog(null, "Se ha ingresado la nota de venta para la Orden de Compra");
                    JOptionPane.showMessageDialog(null, "Nota de Venta almacenada");

                    String ruta = "";

                    JFileChooser dlg = new JFileChooser();
                    dlg.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

                    int option = dlg.showOpenDialog(this);

                    if (option == JFileChooser.APPROVE_OPTION) {
                        File f = dlg.getSelectedFile();
                        ruta = f.toString();
                    }

                    //Fecha
                    Date sistFecha = new Date();
                    SimpleDateFormat formato = new SimpleDateFormat("dd-MMM-YYYY");
                    //Crear PDF
                    try {
                        Document doc = new Document(PageSize.A4);

                        Date sistHora = new Date();
                        String pmAm = "hh:mm a";
                        SimpleDateFormat format = new SimpleDateFormat(pmAm);
                        Calendar hoy = Calendar.getInstance();
                        String hora = (String.format(format.format(sistHora), hoy));
                        hora = hora.replace(":", "-");
                        PdfWriter writer = PdfWriter.getInstance(doc, new FileOutputStream(ruta + "\\" + txtOC.getText() + "_Fecha_" + formato.format(sistFecha) + "_hora_" + hora + "_Nota_de_Venta_" + ".pdf"));

                        //Separador
                        PdfPTable myTable = new PdfPTable(1);
                        myTable.setWidthPercentage(100.0f);
                        PdfPCell myCell = new PdfPCell(new Paragraph(""));
                        myCell.setBorder(Rectangle.BOTTOM);
                        myTable.addCell(myCell);
                        myTable.setSpacingAfter(10f);
                        myTable.setSpacingBefore(10f);

                        doc.open();

                        //Añadir la imagen
                        try {
                            Image logoAcima = Image.getInstance("src\\PlataformaVentas\\Imagenes\\acima-logo-200p.png");
                            logoAcima.scaleAbsolute(126, 67);
                            logoAcima.setAlignment(Paragraph.ALIGN_RIGHT);
                            doc.add(logoAcima);

                            doc.add(myTable);

                        } catch (BadElementException ex) {
                            Logger.getLogger(OrdenTrabajo.class
                                    .getName()).log(Level.SEVERE, null, ex);

                        } catch (IOException ex) {
                            Logger.getLogger(OrdenTrabajo.class
                                    .getName()).log(Level.SEVERE, null, ex);
                        }

                        Paragraph titulo = new Paragraph("Información del demandante", FontFactory.getFont(FontFactory.TIMES, 12, Font.BOLD, null));
                        doc.add(titulo);

                        PdfPTable tableDatos = new PdfPTable(2);
                        tableDatos.setWidthPercentage(100);
                        tableDatos.addCell(new Phrase("Rut del Demandante: " + txtRutComprador.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos.addCell(new Phrase("Demandante: " + txtDemandante.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos.addCell(new Phrase("Dirección del Demandante: " + txtDireccionDemandante.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos.addCell(new Phrase("Unidad de Compra: " + txtUnidadCompra.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos.addCell(new Phrase("Teléfono del Demandante: " + txtTelefonoDemandante.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos.addCell(new Phrase("Fecha de Envío de Nota de OC: " + txtFechaEnvioOC.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos.setSpacingBefore(15f);
                        tableDatos.setWidthPercentage(100);
                        Paragraph alineaDatos = new Paragraph();
                        alineaDatos.add(tableDatos);
                        doc.add(alineaDatos);

                        doc.add(myTable);

                        Paragraph titulo2 = new Paragraph("Información de la empresa", FontFactory.getFont(FontFactory.TIMES, 12, Font.BOLD, null));
                        doc.add(titulo2);

                        Paragraph proveedor = new Paragraph("Proveedor: " + txtProveedor.getText(), FontFactory.getFont(FontFactory.TIMES, 12, Font.NORMAL, null));
                        proveedor.setAlignment(Paragraph.ALIGN_LEFT);
                        doc.add(proveedor);

                        doc.add(myTable);

                        Paragraph titulo3 = new Paragraph("Información de orden", FontFactory.getFont(FontFactory.TIMES, 12, Font.NORMAL, null));
                        doc.add(titulo);

                        PdfPTable tableDatos2 = new PdfPTable(2);
                        tableDatos2.setWidthPercentage(100);
                        tableDatos2.addCell(new Phrase("Nombre de la Orden de Compra: " + txtNombreOC.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos2.addCell(new Phrase("Metodo de Despacho: " + txtMetodoDespacho.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos2.addCell(new Phrase("Fecha de aceptación: " + txtFechaAceptacion.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos2.addCell(new Phrase("Forma de Pago: " + txtFormaPago.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos2.addCell(new Phrase("Direcciones de despacho: " + txtDireccionDespacho.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos2.addCell(new Phrase("Contacto de pago: " + txtContactoPago.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos2.addCell(new Phrase("Direcciones de envio de factura: " + txtDireccionEnvioFactura.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos2.addCell(new Phrase("Contacto de OC: " + txtContactoOC.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos2.addCell(new Phrase("Mail de Envío de Factura: " + txtEmailContacto.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos2.addCell(new Phrase("Código de Orden de Compra: " + txtOC.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos2.setSpacingBefore(15f);
                        tableDatos2.setWidthPercentage(100);
                        Paragraph alineaDatos2 = new Paragraph();
                        alineaDatos2.add(tableDatos2);
                        doc.add(alineaDatos2);

                        // doc.setPageSize(PageSize.A4.rotate());
                        doc.newPage();

                        Paragraph tablas = new Paragraph("Información de productos en la orden ", FontFactory.getFont(FontFactory.TIMES, 12, Font.BOLD, null));
                        doc.add(tablas);
                        PdfPTable pdfTable = new PdfPTable(tblMP.getColumnCount());
                        pdfTable.setSpacingBefore(15f);
                        pdfTable.setWidthPercentage(100);
                        for (int i = 0; i < tblMP.getColumnCount(); i++) {
                            pdfTable.addCell(new Phrase(tblMP.getColumnName(i), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                        }
                        for (int rows = 0; rows < tblMP.getRowCount(); rows++) {
                            pdfTable.addCell(new Phrase(tblMP.getModel().getValueAt(rows, 0).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable.addCell(new Phrase(tblMP.getModel().getValueAt(rows, 1).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable.addCell(new Phrase(tblMP.getModel().getValueAt(rows, 2).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable.addCell(new Phrase(tblMP.getModel().getValueAt(rows, 3).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable.addCell(new Phrase(tblMP.getModel().getValueAt(rows, 4).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable.addCell(new Phrase(tblMP.getModel().getValueAt(rows, 5).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable.addCell(new Phrase(tblMP.getModel().getValueAt(rows, 6).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable.addCell(new Phrase(tblMP.getModel().getValueAt(rows, 7).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable.addCell(new Phrase(tblMP.getModel().getValueAt(rows, 8).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable.addCell(new Phrase(tblMP.getModel().getValueAt(rows, 9).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                        }

                        doc.add(pdfTable);

                        Paragraph neto = new Paragraph("Neto: " + txtNeto.getText(), FontFactory.getFont(FontFactory.TIMES, 12, Font.NORMAL, null));
                        neto.setAlignment(Paragraph.ALIGN_RIGHT);
                        Paragraph iva = new Paragraph("IVA: " + txtIva.getText(), FontFactory.getFont(FontFactory.TIMES, 12, Font.NORMAL, null));
                        iva.setAlignment(Paragraph.ALIGN_RIGHT);
                        Paragraph total = new Paragraph("Total: " + txtTotal.getText(), FontFactory.getFont(FontFactory.TIMES, 12, Font.NORMAL, null));
                        total.setAlignment(Paragraph.ALIGN_RIGHT);
                        doc.add(neto);
                        doc.add(iva);
                        doc.add(total);

                        doc.add(myTable);

                        doc.newPage();

                        //Para las notas de venta
                        Paragraph tablas2 = new Paragraph("Información de productos en notas de venta ", FontFactory.getFont(FontFactory.TIMES, 12, Font.BOLD, null));
                        doc.add(tablas2);
                        PdfPTable pdfTable2 = new PdfPTable(tblResumenParcializada.getColumnCount());
                        pdfTable2.setSpacingBefore(15f);
                        pdfTable2.setWidthPercentage(100);
                        for (int i = 0; i < tblResumenParcializada.getColumnCount(); i++) {
                            pdfTable2.addCell(new Phrase(tblResumenParcializada.getColumnName(i), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                        }
                        for (int rows = 0; rows < tblResumenParcializada.getRowCount(); rows++) {
                            pdfTable2.addCell(new Phrase(tblResumenParcializada.getModel().getValueAt(rows, 0).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable2.addCell(new Phrase(tblResumenParcializada.getModel().getValueAt(rows, 1).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable2.addCell(new Phrase(tblResumenParcializada.getModel().getValueAt(rows, 2).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable2.addCell(new Phrase(tblResumenParcializada.getModel().getValueAt(rows, 3).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable2.addCell(new Phrase(tblResumenParcializada.getModel().getValueAt(rows, 4).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable2.addCell(new Phrase(tblResumenParcializada.getModel().getValueAt(rows, 5).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable2.addCell(new Phrase(tblResumenParcializada.getModel().getValueAt(rows, 6).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable2.addCell(new Phrase(tblResumenParcializada.getModel().getValueAt(rows, 7).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable2.addCell(new Phrase(tblResumenParcializada.getModel().getValueAt(rows, 8).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable2.addCell(new Phrase(tblResumenParcializada.getModel().getValueAt(rows, 9).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable2.addCell(new Phrase(tblResumenParcializada.getModel().getValueAt(rows, 10).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable2.addCell(new Phrase(tblResumenParcializada.getModel().getValueAt(rows, 11).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                        }
                        doc.add(pdfTable2);

                        doc.add(myTable);
                        //Iconos
                        try {
                            PdfPTable table = new PdfPTable(2);
                            table.setWidths(new int[]{1, 12});
                            table.getDefaultCell().setBorder(Rectangle.NO_BORDER);
                            //D:\Plataforma Operaciones\src\imagenes\465892689e(1).png
                            Image img1 = Image.getInstance("src\\PlataformaVentas\\Imagenes\\phone-icon-11-64.png");
                            Image img2 = Image.getInstance("src\\PlataformaVentas\\Imagenes\\mail-64.png");

                            PdfPCell imagen1 = new PdfPCell(img1, false);
                            imagen1.setBorder(Rectangle.NO_BORDER);
                            imagen1.setBackgroundColor(BaseColor.WHITE);
                            imagen1.setHorizontalAlignment(com.itextpdf.text.Element.ALIGN_RIGHT);

                            PdfPCell imagen2 = new PdfPCell(img2, false);
                            imagen2.setBorder(Rectangle.NO_BORDER);
                            imagen2.setBackgroundColor(BaseColor.WHITE);
                            imagen2.setHorizontalAlignment(com.itextpdf.text.Element.ALIGN_RIGHT);

                            table.addCell(imagen1);
                            table.addCell(new Phrase("Central telefónica: +56-232 107 900", FontFactory.getFont(FontFactory.TIMES, 12)));
                            table.addCell(imagen2);
                            table.addCell(new Phrase("ventas@acima.cl - comercial@acima.cl - gerencia@acima.cl", FontFactory.getFont(FontFactory.TIMES, 12)));
                            Paragraph tableFooter = new Paragraph();
                            tableFooter.add(table);
                            tableFooter.setSpacingBefore(15f);
                            tableFooter.setSpacingBefore(15f);
                            tableFooter.setAlignment(Paragraph.ALIGN_RIGHT);
                            doc.add(tableFooter);

                            doc.close();
                            JOptionPane.showMessageDialog(null, "PDF Generado Correctamente");

                        } catch (BadElementException | IOException ex) {
                            Logger.getLogger(OrdenTrabajo.class
                                    .getName()).log(Level.SEVERE, null, ex);

                        }
                    } catch (DocumentException ex) {
                        JOptionPane.showMessageDialog(null, "Ha ocurrido un error: sss" + ex.getMessage());
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(OrdenTrabajo.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "Ingrese el código de autorización correcto");
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha Ocurrido un error: " + ex);
        }
    }//GEN-LAST:event_btnGuardarOrdenActionPerformed

    private void txtNombreProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreProductoActionPerformed

    }//GEN-LAST:event_txtNombreProductoActionPerformed

    private void txtNombreProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreProductoKeyPressed

    }//GEN-LAST:event_txtNombreProductoKeyPressed

    private void txtIDProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDProductoKeyPressed

    }//GEN-LAST:event_txtIDProductoKeyPressed

    private void txtSKUKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSKUKeyPressed

    }//GEN-LAST:event_txtSKUKeyPressed

    private void tblAgregarProdOTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAgregarProdOTMouseClicked
        btnCalcularValores.setEnabled(false);
    }//GEN-LAST:event_tblAgregarProdOTMouseClicked

    private void tblProdaddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProdaddMouseClicked
        btnCalcularValores.setEnabled(true);
    }//GEN-LAST:event_tblProdaddMouseClicked

    private void tblProdaddKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblProdaddKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tblProdaddKeyPressed

    private void jTabbedPane14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane14MouseClicked
        if (jTabbedPane14.getSelectedIndex() == 0) {
            btnBorrarProducto1.setEnabled(false);
            btnAgregarProdOT.setEnabled(true);
        } else {
            btnAgregarProdOT.setEnabled(false);
            btnBorrarProducto1.setEnabled(true);
        }
    }//GEN-LAST:event_jTabbedPane14MouseClicked

    private void cmbMonedaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMonedaItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbMonedaItemStateChanged

    private void btnConfirmarVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarVolverActionPerformed

        DefaultTableModel cotizacion = (DefaultTableModel) tblProdadd.getModel();
        int indexs = tblProdadd.getRowCount();

        Object[] row = new Object[15];

        DefaultTableModel modeloNuevo = (DefaultTableModel) tblMP.getModel();

        for (int i = 0; i < indexs; i++) {
            row[0] = cotizacion.getValueAt(i, 0);
            row[1] = cotizacion.getValueAt(i, 1);
            row[2] = cotizacion.getValueAt(i, 3);
            row[3] = cotizacion.getValueAt(i, 4);
            row[4] = cotizacion.getValueAt(i, 5);
            row[5] = cotizacion.getValueAt(i, 6);
            row[6] = cotizacion.getValueAt(i, 7);
            row[7] = cotizacion.getValueAt(i, 8);
            row[8] = cotizacion.getValueAt(i, 9);
            row[9] = cotizacion.getValueAt(i, 10);
            modeloNuevo.addRow(row);

        }

        cotizacion.setRowCount(0);
        AgregarProductoOT.dispose();
        cmbMoneda.setSelectedIndex(0);
        this.setVisible(true);
        btnCalculoTotales.doClick();

    }//GEN-LAST:event_btnConfirmarVolverActionPerformed

    private void btnCalcularValoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularValoresActionPerformed
        try {

            DefaultTableModel modelo = (DefaultTableModel) tblProdadd.getModel();
            int selectedRows = tblProdadd.getSelectedRow();
            String idProducto = "";
            String nombreProducto = "";
            String especComprador = txtEspecificacionComprador.getText();
            String especProveedor = txtEspecificacionProveedor.getText();
            String cantidad = txtCantidad.getText();
            String moneda = cmbMoneda.getSelectedItem().toString();

            //El calculo de dólares será solo para HW y SW
            if (moneda.equals("CLP")) {

                System.out.println(moneda);
                String descuento = txtDescuento.getText();
                String cargos = txtCargos1.getText();
                int descuentoTabla = Integer.parseInt(descuento);
                int cantidadProd = Integer.parseInt(cantidad);
                int precioUnitarioProd = 0;
                int precioUnitCalculo = 0;
                int cantidadCalculo = 0;
                int descuentoCalculo = 0;
                int cargosSinCalculo = 0;
                int cargosCalculo = 0;
                int totalCalculo = 0;
                int sumNeto = 0;
                int sumDescuento = 0;
                int sumCargoTotal = 0;
                int sumValorTotal = 0;
                int selectedRow[] = tblProdadd.getSelectedRows();
                for (int i : selectedRow) {

                    idProducto = tblProdadd.getValueAt(i, 0).toString();
                    nombreProducto = tblProdadd.getValueAt(i, 1).toString();
                    cantidadProd = Integer.parseInt(cantidad);
                    //Sacar el valor del precio unitario
                    precioUnitarioProd = Integer.parseInt(tblProdadd.getValueAt(i, 7).toString());
                    precioUnitarioProd = precioUnitarioProd * cantidadProd;

                    cargosSinCalculo = Integer.parseInt(cargos);
                    cargosCalculo = Integer.parseInt(cargos);
                    cargosCalculo = precioUnitarioProd + cargosCalculo;
                    totalCalculo = cargosCalculo - Integer.parseInt(descuento);

                    tblProdadd.setValueAt(idProducto, i, 0);
                    tblProdadd.setValueAt(nombreProducto, i, 1);
                    tblProdadd.setValueAt(cantidad, i, 3);
                    tblProdadd.setValueAt(especComprador, i, 4);
                    tblProdadd.setValueAt(especProveedor, i, 5);
                    tblProdadd.setValueAt(moneda, i, 6);

                    String cargosSinCalculo_string = java.text.NumberFormat.getCurrencyInstance().format(cargosSinCalculo);
                    String descuentoTabla_string = java.text.NumberFormat.getCurrencyInstance().format(descuentoTabla);
                    String totalCalculo_string = java.text.NumberFormat.getCurrencyInstance().format(totalCalculo);
                    tblProdadd.setValueAt(cargosSinCalculo, i, 8);
                    tblProdadd.setValueAt(descuentoTabla, i, 9);
                    tblProdadd.setValueAt(totalCalculo, i, 10);
                }
            } else if (moneda.equals("USD")) {

                NumberFormat nF = NumberFormat.getCurrencyInstance(Locale.US);

                System.out.println(moneda);
                String descuento = txtDescuento.getText();
                String cargos = txtCargos1.getText();
                double descuentoTabla = Double.parseDouble(descuento);
                double cantidadProd = Double.parseDouble(cantidad);
                double precioUnitarioProd = 0;
                double precioUnitCalculo = 0;
                double cantidadCalculo = 0;
                double descuentoCalculo = 0;
                double cargosSinCalculo = 0;
                double cargosCalculo = 0;
                double totalCalculo = 0;
                double sumNeto = 0;
                double sumDescuento = 0;
                double sumCargoTotal = 0;
                double sumValorTotal = 0;
                int selectedRow[] = tblProdadd.getSelectedRows();
                for (int i : selectedRow) {

                    idProducto = tblProdadd.getValueAt(i, 0).toString();
                    nombreProducto = tblProdadd.getValueAt(i, 1).toString();
                    cantidadProd = Double.parseDouble(cantidad);
                    //Sacar el valor del precio unitario
                    precioUnitarioProd = Double.parseDouble(tblProdadd.getValueAt(i, 7).toString());
                    precioUnitarioProd = precioUnitarioProd * cantidadProd;

                    cargosSinCalculo = Double.parseDouble(cargos);
                    cargosCalculo = Double.parseDouble(cargos);
                    cargosCalculo = precioUnitarioProd + cargosCalculo;
                    totalCalculo = cargosCalculo - Double.parseDouble(descuento);

                    tblProdadd.setValueAt(idProducto, i, 0);
                    tblProdadd.setValueAt(nombreProducto, i, 1);
                    tblProdadd.setValueAt(cantidad, i, 3);
                    tblProdadd.setValueAt(especComprador, i, 4);
                    tblProdadd.setValueAt(especProveedor, i, 5);
                    tblProdadd.setValueAt(moneda, i, 6);
                    tblProdadd.setValueAt(new DecimalFormat("#,##0.00").format(cargosSinCalculo), i, 8);
                    tblProdadd.setValueAt(new DecimalFormat("#,##0.00").format(descuentoTabla), i, 9);
                    tblProdadd.setValueAt(new DecimalFormat("#,##0.00").format(totalCalculo), i, 10);

                }
            }

            txtEspecificacionComprador.setText("");
            txtEspecificacionProveedor.setText("");
            txtCantidad.setText("");
            txtCargos1.setText("");
            txtDescuento.setText("");

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage() + " debe ingresar la información requerida de los productos");
        }
    }//GEN-LAST:event_btnCalcularValoresActionPerformed

    private void btnBorrarProducto1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarProducto1ActionPerformed
        DefaultTableModel modeloTabla = (DefaultTableModel) tblProdadd.getModel();
        // Se obtiene el numero de columna seleccionado
        try {
            int seleccion = tblProdadd.getSelectedRow();
            //Se borra
            modeloTabla.removeRow(seleccion);
            if (tblProdadd.getRowCount() == 0) {
                btnBorrarProducto1.setEnabled(false);
            }
            JOptionPane.showMessageDialog(null, "Producto borrado de Selección");
            btnBorrarProducto1.setEnabled(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnBorrarProducto1ActionPerformed

    private void btnAgregarProdOTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarProdOTActionPerformed
        try {
            TableModel cotizacion = tblAgregarProdOT.getModel();
            int indexs[] = tblAgregarProdOT.getSelectedRows();
            Object[] row = new Object[14];
            DefaultTableModel modeloNuevo = (DefaultTableModel) tblProdadd.getModel();
            TableModel modelo = tblAgregarProdOT.getModel();
            int selectedRows[] = tblAgregarProdOT.getSelectedRows();
            for (int i = 0; i < indexs.length; i++) {
                row[0] = cotizacion.getValueAt(indexs[i], 0);
                row[1] = cotizacion.getValueAt(indexs[i], 3);
                row[2] = cotizacion.getValueAt(indexs[i], 2);
                row[7] = cotizacion.getValueAt(indexs[i], 5);
                modeloNuevo.addRow(row);
            }
            JOptionPane.showMessageDialog(null, "Productos Agregados a OT");
            btnBorrarProducto.setEnabled(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnAgregarProdOTActionPerformed

    private void btnAddProductoOTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProductoOTActionPerformed
        try {
            AgregarProductoOT.setVisible(true);
            this.setVisible(false);
            String queryProducto = "Select inv.idProducto as 'ID producto', inv.SKU, inv.categoria as 'Categoría', inv.nombreProducto as 'Producto',\n"
                    + "inv.descripcion as 'Descripción' ,inv.precioVenta as 'Precio Venta',inv.StatusProducto as 'Estado', inv.stock as 'Stock en la bodega'\n"
                    + "FROM inventario inv;";
            PreparedStatement pstProducto = cn.prepareStatement(queryProducto);
            ResultSet rsProducto = pstProducto.executeQuery();
            tblAgregarProdOT.setModel(DbUtils.resultSetToTableModel(rsProducto));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
        }

    }//GEN-LAST:event_btnAddProductoOTActionPerformed

    private void btnBorrarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarProductoActionPerformed
        DefaultTableModel modeloTabla = (DefaultTableModel) tblMP.getModel();
        // Se obtiene el numero de columna seleccionado
        try {
            int seleccion = tblMP.getSelectedRow();
            //Se borra
            modeloTabla.removeRow(seleccion);
            if (tblMP.getRowCount() == 0) {
                btnBorrarProducto.setEnabled(false);
            }
            JOptionPane.showMessageDialog(null, "Producto borrado de Orden de Compra");
            btnBorrarProducto.setEnabled(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: No hay un producto seleccionado" + ex.getMessage());
        }
    }//GEN-LAST:event_btnBorrarProductoActionPerformed

    private void btnCalculoTotalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculoTotalesActionPerformed

        int netoTabla = 0;
        if (tblMP.getValueAt(0, 5).toString().equals("CLP")) {
            for (int i = 0; i < tblMP.getRowCount(); i++) {

                int descuento = Integer.parseInt(txtDcto.getText().replace("$", "").replace(".", ""));
                int cargo = Integer.parseInt(txtCargos.getText().replace("$", "").replace(".", ""));

                netoTabla = netoTabla + Integer.parseInt(tblMP.getValueAt(i, 9).toString().replace("$", "").replace(".", ""));

                int subtotal = netoTabla;
                double iva = netoTabla * 0.19;
                int impuesto_especifico = Integer.parseInt(txtImpuestoEspecifico.getText().replace("$", "").replace(".", ""));
                int total = (int) (iva + impuesto_especifico + subtotal - descuento);
                //Formateo

                txtNeto.setText(java.text.NumberFormat.getCurrencyInstance().format(netoTabla));
                txtDcto.setText(java.text.NumberFormat.getCurrencyInstance().format(descuento));
                txtCargos.setText(java.text.NumberFormat.getCurrencyInstance().format(cargo));
                txtSubTotal.setText(java.text.NumberFormat.getCurrencyInstance().format(subtotal));
                txtIva.setText(java.text.NumberFormat.getCurrencyInstance().format(iva));
                txtImpuestoEspecifico.setText(java.text.NumberFormat.getCurrencyInstance().format(impuesto_especifico));
                txtTotal.setText(java.text.NumberFormat.getCurrencyInstance().format(total));

                txtNeto.setText(txtNeto.getText().substring(2));
                txtDcto.setText(txtDcto.getText().substring(2));
                txtCargos.setText(txtCargos.getText().substring(2));
                txtSubTotal.setText(txtSubTotal.getText().substring(2));
                txtIva.setText(txtIva.getText().substring(2));
                txtImpuestoEspecifico.setText(txtImpuestoEspecifico.getText().substring(2));
                txtTotal.setText(txtTotal.getText().substring(2));
            }

        } else {

            for (int i = 0; i < tblMP.getRowCount(); i++) {

                int descuento = Integer.parseInt(txtDcto.getText().replace("$", "").replace(".", ""));
                int cargo = Integer.parseInt(txtCargos.getText().replace("$", "").replace(".", ""));

                netoTabla = netoTabla + Integer.parseInt(tblMP.getValueAt(i, 9).toString().replace("$", "").replace(".", ""));

                int subtotal = netoTabla;
                double iva = netoTabla * 0.19;
                int impuesto_especifico = Integer.parseInt(txtImpuestoEspecifico.getText().replace("$", "").replace(".", ""));
                int total = (int) (iva + impuesto_especifico + subtotal - descuento);

                //Formateo
                txtNeto.setText(new DecimalFormat("$#,##0.00").format(netoTabla));
                txtDcto.setText(new DecimalFormat("$#,##0.00").format(descuento));
                txtCargos.setText(new DecimalFormat("$#,##0.00").format(cargo));
                txtSubTotal.setText(new DecimalFormat("$#,##0.00").format(subtotal));
                txtIva.setText(new DecimalFormat("$#,##0.00").format(iva));
                txtImpuestoEspecifico.setText(new DecimalFormat("$#,##0.00").format(impuesto_especifico));
                txtTotal.setText(new DecimalFormat("$#,##0.00").format(total));
            }

        }

    }//GEN-LAST:event_btnCalculoTotalesActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        AgregarProductoOT.dispose();
        this.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            String queryProducto = "Select inv.idProducto as 'ID producto', inv.SKU, inv.categoria as 'Categoría', inv.nombreProducto as 'Producto',\n"
                    + "inv.descripcion as 'Descripción' ,inv.precioVenta as 'Precio Venta',inv.StatusProducto as 'Estado', inv.stock as 'Stock en la bodega'\n"
                    + "FROM inventario inv where inv.nombreProducto RLIKE ?;";
            String param = txtNombreProducto.getText();
            PreparedStatement pstProducto = cn.prepareStatement(queryProducto);
            pstProducto.setString(1, param);
            ResultSet rsProducto = pstProducto.executeQuery();
            tblAgregarProdOT.setModel(DbUtils.resultSetToTableModel(rsProducto));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            String queryProducto = "Select inv.idProducto as 'ID producto', inv.SKU, inv.categoria as 'Categoría', inv.nombreProducto as 'Producto',\n"
                    + "inv.descripcion as 'Descripción' ,inv.precioVenta as 'Precio Venta',inv.StatusProducto as 'Estado', inv.stock as 'Stock en la bodega'\n"
                    + "FROM inventario inv WHERE inv.idProducto RLIKE ?;";
            String param = txtIDProducto.getText();
            PreparedStatement pstProducto = cn.prepareStatement(queryProducto);
            pstProducto.setInt(1, Integer.parseInt(param));
            ResultSet rsProducto = pstProducto.executeQuery();
            tblAgregarProdOT.setModel(DbUtils.resultSetToTableModel(rsProducto));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            String queryProducto = "Select inv.idProducto as 'ID producto', inv.SKU, inv.categoria as 'Categoría', inv.nombreProducto as 'Producto',\n"
                    + "inv.descripcion as 'Descripción' ,inv.precioVenta as 'Precio Venta',inv.StatusProducto as 'Estado', inv.stock as 'Stock en la bodega'\n"
                    + "FROM inventario inv WHERE inv.SKU RLIKE ?;";
            String param = txtSKU.getText();
            PreparedStatement pstProducto = cn.prepareStatement(queryProducto);
            pstProducto.setString(1, param);
            ResultSet rsProducto = pstProducto.executeQuery();
            tblAgregarProdOT.setModel(DbUtils.resultSetToTableModel(rsProducto));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnReiniciarFiltrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReiniciarFiltrosActionPerformed
        try {

            String queryProducto = "Select inv.idProducto as 'ID producto', inv.SKU, inv.categoria as 'Categoría', inv.nombreProducto as 'Producto',\n"
                    + "inv.descripcion as 'Descripción' ,inv.precioVenta as 'Precio Venta',inv.StatusProducto as 'Estado', inv.stock as 'Stock en la bodega'\n"
                    + "FROM inventario inv;";
            PreparedStatement pstProducto = cn.prepareStatement(queryProducto);
            ResultSet rsProducto = pstProducto.executeQuery();
            tblAgregarProdOT.setModel(DbUtils.resultSetToTableModel(rsProducto));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnReiniciarFiltrosActionPerformed

    private void btnNVParcializadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNVParcializadaActionPerformed
        /*
         try {
         int index = tblMP.getSelectedRow();
         String test1 = JOptionPane.showInputDialog("Ingrese código / número de guía de despacho");
         if (test1 == null || test1.equals(null)) {
         JOptionPane.showMessageDialog(null, "Debe ingresar un valor válido");
         } else {
         tblMP.setValueAt(test1, index, 10);
         }
         } catch (Exception ex) {
         JOptionPane.showMessageDialog(null, "Ha ocurrido un error: Debe seleccionar un producto o ingresar la información solicitada" + ex.getMessage());
         }
         */
        bultos.setVisible(true);
        int index = tblMP.getRowCount();

        DefaultTableModel modeloPendientes = (DefaultTableModel) tblProductosPendientes.getModel();
        Object[] row = new Object[14];

        for (int i = 0; i < index; i++) {
            row[0] = tblMP.getValueAt(i, 0).toString();
            row[1] = tblMP.getValueAt(i, 1).toString();
            row[2] = tblMP.getValueAt(i, 2).toString();
            row[3] = tblMP.getValueAt(i, 3).toString();
            row[4] = tblMP.getValueAt(i, 4).toString();
            row[5] = tblMP.getValueAt(i, 5).toString();
            row[6] = tblMP.getValueAt(i, 6).toString();
            row[7] = tblMP.getValueAt(i, 7).toString();
            row[8] = tblMP.getValueAt(i, 8).toString();
            row[9] = tblMP.getValueAt(i, 9).toString();
            modeloPendientes.addRow(row);
        }


    }//GEN-LAST:event_btnNVParcializadaActionPerformed

    private void btnAgregarNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarNVActionPerformed
        try {
            //Se clona el modelo de productos pendientes
            TableModel productosSinNV = tblProductosPendientes.getModel();
            //Se saca la fila seleccionada
            int indexs[] = tblProductosPendientes.getSelectedRows();
            //Se determina la variable de fila
            Object[] row = new Object[14];
            //Este es el modelo al que se le pasarán datos
            DefaultTableModel modeloNuevo = (DefaultTableModel) tblPaso.getModel();
            //Se resta la cantidad de productos cuando se asignan
            TableModel modelo = tblProductosPendientes.getModel();

            int indice = 0;
            indice = tblProductosPendientes.getSelectedRow();

            //Variable que resta
            int cantidadInicial = 0;
            cantidadInicial = Integer.parseInt(tblProductosPendientes.getValueAt(indice, 2).toString());
            System.out.println(cantidadInicial);

            if (Integer.parseInt(txtQty.getText()) < 0) {
                JOptionPane.showMessageDialog(null, "No debe ser número negativo");
            } else {
                if (Integer.parseInt(txtQty.getText()) <= cantidadInicial && Integer.parseInt(txtQty.getText()) != 0) {
                    //Ciclo que recorre las filas seleccionadas
                    for (int i = 0; i < indexs.length; i++) {

                        int cantidad = Integer.parseInt(txtQty.getText());

                        if (cantidad <= cantidadInicial) {
                            row[0] = "No se ha asignado una nota de venta";
                            row[1] = txtOC.getText();
                            row[2] = productosSinNV.getValueAt(indexs[i], 0);
                            row[3] = productosSinNV.getValueAt(indexs[i], 1);
                            row[4] = cantidad;
                            row[5] = productosSinNV.getValueAt(indexs[i], 3);
                            row[6] = productosSinNV.getValueAt(indexs[i], 4);
                            row[7] = productosSinNV.getValueAt(indexs[i], 5);
                            row[8] = productosSinNV.getValueAt(indexs[i], 6);
                            row[9] = productosSinNV.getValueAt(indexs[i], 7);
                            row[10] = productosSinNV.getValueAt(indexs[i], 8);
                            row[11] = productosSinNV.getValueAt(indexs[i], 9);

                            modeloNuevo.addRow(row);

                            modelo.setValueAt((cantidadInicial - cantidad), indexs[i], 2);
                        }
                    }
                    txtQty.setText("");
                    tblProductosPendientes.clearSelection();
                    tblPaso.clearSelection();

                    int sumCantidad = 0;
                    for (int i = 0; i < tblProductosPendientes.getRowCount(); i++) {
                        sumCantidad = sumCantidad + Integer.parseInt(tblProductosPendientes.getValueAt(i, 2).toString());
                    }

                    for (int x = 0; x < tblPaso.getRowCount(); x++) {
                        int cantidad = Integer.parseInt(tblPaso.getValueAt(x, 4).toString());
                        int precioUnitario = Integer.parseInt(tblPaso.getValueAt(x, 8).toString());
                        int descuento = Integer.parseInt(tblPaso.getValueAt(x, 9).toString());
                        int cargos = Integer.parseInt(tblPaso.getValueAt(x, 10).toString());

                        int calculo = (precioUnitario * cantidad) + descuento + cargos;
                        tblPaso.setValueAt(calculo, x, 11);
                    }

                    if (sumCantidad == 0) {
                        JOptionPane.showMessageDialog(null, "Ya se llegó al límite de la cantidad seleccionada de productos");
                    }

                } else if (Integer.parseInt(txtQty.getText()) < 0) {
                    JOptionPane.showMessageDialog(null, "Debe introducir una cantidad menor o igual a la mostrada en la tabla");
                } else {
                    JOptionPane.showMessageDialog(null, "Debe introducir una cantidad menor o igual a la mostrada en la tabla");
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: Debe seleccionar un producto..." + ex);
        }
    }//GEN-LAST:event_btnAgregarNVActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        int cantidadFilas = tblPaso.getRowCount();
        if (cantidadFilas == 0) {

            int index = tblProductosPendientes.getRowCount();
            int index2 = tblProdsAgregadosNV.getRowCount();

            boolean check = false;
            int cuenta = 0;

            for (int i = 0; i < index; i++) {
                if (tblProductosPendientes.getValueAt(i, 2).toString().equals("0")) {
                    cuenta = cuenta + 1;
                }
            }

            if (cuenta == index) {
                System.out.println("Todo Verdadero");
                // DefaultTableModel modelo = (DefaultTableModel) tblProdsAgregadosNV.getModel();
                //tblResumenParcializada.setModel(modelo);
                bultos.dispose();

                /*
                 DefaultTableModel modelo_paso = (DefaultTableModel) tblProductosPendientes.getModel();
                 for (int i = index - 1; i >= 0; i--) {
                 modelo_paso.removeRow(i);
                 }          
                 */
                DefaultTableModel modeloResumen = (DefaultTableModel) tblResumenParcializada.getModel();
                //Se determina la variable de fila
                Object[] row2 = new Object[14];
                //cantidad de filas en tabla paso
                int filas = tblProdsAgregadosNV.getRowCount();
                //Ciclo que recorre las filas de la tabla paso
                for (int p = 0; p < filas; p++) {
                    row2[0] = tblProdsAgregadosNV.getValueAt(p, 0).toString();
                    row2[1] = tblProdsAgregadosNV.getValueAt(p, 1).toString();
                    row2[2] = tblProdsAgregadosNV.getValueAt(p, 2).toString();
                    row2[3] = tblProdsAgregadosNV.getValueAt(p, 3).toString();
                    row2[4] = tblProdsAgregadosNV.getValueAt(p, 4).toString();
                    row2[5] = tblProdsAgregadosNV.getValueAt(p, 5).toString();
                    row2[6] = tblProdsAgregadosNV.getValueAt(p, 6).toString();
                    row2[7] = tblProdsAgregadosNV.getValueAt(p, 7).toString();
                    row2[8] = tblProdsAgregadosNV.getValueAt(p, 8).toString();
                    row2[9] = tblProdsAgregadosNV.getValueAt(p, 9).toString();
                    row2[10] = tblProdsAgregadosNV.getValueAt(p, 10).toString();
                    row2[11] = tblProdsAgregadosNV.getValueAt(p, 11).toString();

                    modeloResumen.addRow(row2);
                }

                DefaultTableModel modelo_Agregados = (DefaultTableModel) tblProdsAgregadosNV.getModel();
                for (int i = index2 - 1; i >= 0; i--) {
                    modelo_Agregados.removeRow(i);
                }
                int index_borrar = tblPaso.getRowCount();
                DefaultTableModel modelo_paso = (DefaultTableModel) tblPaso.getModel();
                for (int i = index_borrar - 1; i >= 0; i--) {
                    modelo_paso.removeRow(i);
                }

                int index_productosPendientes = tblProductosPendientes.getRowCount();
                DefaultTableModel modelo_pendientes = (DefaultTableModel) tblProductosPendientes.getModel();
                for (int i = index_productosPendientes - 1; i >= 0; i--) {
                    modelo_pendientes.removeRow(i);
                }

                modelo_Agregados.setRowCount(0);

            } else {
                JOptionPane.showMessageDialog(null, "Aún quedan productos pendientes");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Aún quedan productos pendientes");
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void txtQtyInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtQtyInputMethodTextChanged

    }//GEN-LAST:event_txtQtyInputMethodTextChanged

    private void txtQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQtyActionPerformed

    private void txtQtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQtyKeyPressed

    }//GEN-LAST:event_txtQtyKeyPressed

    private void txtQtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQtyKeyReleased

    }//GEN-LAST:event_txtQtyKeyReleased

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "¿Confirma los productos para la nota de venta actual?", "Alerta", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION) {
                //Ingresar la orden como nota de venta genérica

                Object[] options = {"Aceptar"};
                JPanel panelAlto = new JPanel();
                JLabel lblAlto = new JLabel("Confirme dirección de despacho: ");
                JTextField txtAlto = new JTextField(10);
                txtAlto.setText(txtDireccionDespacho.getText());
                panelAlto.add(lblAlto);
                panelAlto.add(txtAlto);
                int selectedOptionAlto = JOptionPane.showOptionDialog(null, panelAlto, "Direcciones de despacho", JOptionPane.NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                String text = "";
                if (selectedOptionAlto == 0) {
                    text = txtAlto.getText();
                }

                String query2 = "INSERT INTO `acimabasededatos`.`ordentrabajo` ("
                        + "`codigoOrdenCompra`,"
                        + "`nombre_proveedor` ,"
                        + "`rutCliente`,"
                        + " `DireccionDemandante`,"
                        + " `Telefono`, "
                        + "`Demandante`,"
                        + " `UnidadCompra`, "
                        + "`fechaEnvioOC`,"
                        + " `codigoEstado`, "
                        + "`nombreOrdenCompra`,"
                        + " `fechaAceptacion`,"
                        + " `direccionesDespacho`,"
                        + " `direccionEnvioFactura`, "
                        + "`tipoDespacho`,"
                        + " `contactoPago`, "
                        + "`formaPago`, "
                        + "`contactoOC`, "
                        + "`emailEnvioFactura`,"
                        + "`neto`,"
                        + " `dcto`,"
                        + " `subtotal`, "
                        + "`iva`,"
                        + " `impuestoEspecifico`,"
                        + " `total`,observacion,observacion_despacho,"
                        + "`codigo_autorizacion`)"
                        + "VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                PreparedStatement pst2;

                pst2 = cn.prepareStatement(query2);

                pst2.setString(1, txtOC.getText().toUpperCase());
                pst2.setString(2, txtProveedor.getText());
                pst2.setString(3, txtRutComprador.getText());
                pst2.setString(4, txtDireccionDemandante.getText());
                pst2.setString(5, txtTelefonoDemandante.getText());
                pst2.setString(6, txtDemandante.getText());
                pst2.setString(7, txtUnidadCompra.getText());
                pst2.setString(8, txtFechaEnvioOC.getText());
                pst2.setString(9, lblEstadoOrdenCompra.getText());
                pst2.setString(10, txtNombreOC.getText());
                pst2.setString(11, txtFechaAceptacion.getText());
                pst2.setString(12, txtDireccionDespacho.getText());
                pst2.setString(13, txtDireccionEnvioFactura.getText());
                pst2.setString(14, txtMetodoDespacho.getText());
                pst2.setString(15, txtContactoPago.getText());
                pst2.setString(16, txtFormaPago.getText());
                pst2.setString(17, txtContactoOC.getText());
                pst2.setString(18, txtEmailContacto.getText());
                pst2.setString(19, txtNeto.getText());
                pst2.setString(20, txtDcto.getText());
                pst2.setString(21, txtSubTotal.getText());
                pst2.setString(22, txtIva.getText());
                pst2.setString(23, txtImpuestoEspecifico.getText());
                pst2.setString(24, txtTotal.getText());
                pst2.setString(25, txtObservacion.getText());
                pst2.setString(26, text);
                pst2.setInt(27, Integer.parseInt(lblCodigo.getText()));
                int x1 = pst2.executeUpdate();

                //Actualizar el idOrden
                String queryUpNV = "update ordentrabajo set idOrden = idOrdenTrabajo;";
                PreparedStatement pstUp1 = cn.prepareStatement(queryUpNV);
                int x3 = pstUp1.executeUpdate();

                //Sacar el maximo numero de orden
                int max = 0;

                String queryMaxNV = "Select MAX(idOrden) from ordentrabajo;";
                PreparedStatement pstNV = cn.prepareStatement(queryMaxNV);
                ResultSet rsNV = pstNV.executeQuery();
                while (rsNV.next()) {
                    max = rsNV.getInt(1);
                }

                int filas = tblPaso.getRowCount();
                for (int x = 0; x < filas; x++) {
                    tblPaso.setValueAt(max, x, 0);
                }

                //Se determina la variable de fila
                Object[] row2 = new Object[14];
                //Nuevamente el modelo de paso
                DefaultTableModel modeloPaso = (DefaultTableModel) tblPaso.getModel();
                DefaultTableModel modeloProds = (DefaultTableModel) tblProdsAgregadosNV.getModel();

                //cantidad de filas en tabla paso
                int filasPaso = tblPaso.getRowCount();
                //Ciclo que recorre las filas de la tabla paso
                for (int p = 0; p < filasPaso; p++) {
                    row2[0] = modeloPaso.getValueAt(p, 0);
                    row2[1] = modeloPaso.getValueAt(p, 1);
                    row2[2] = modeloPaso.getValueAt(p, 2);
                    row2[3] = modeloPaso.getValueAt(p, 3);
                    row2[4] = modeloPaso.getValueAt(p, 4);
                    row2[5] = modeloPaso.getValueAt(p, 5);
                    row2[6] = modeloPaso.getValueAt(p, 6);
                    row2[7] = modeloPaso.getValueAt(p, 7);
                    row2[8] = modeloPaso.getValueAt(p, 8);
                    row2[9] = modeloPaso.getValueAt(p, 9);
                    row2[10] = modeloPaso.getValueAt(p, 10);
                    row2[11] = modeloPaso.getValueAt(p, 11);
                    modeloProds.addRow(row2);
                }

                int index_borrar = tblPaso.getRowCount();
                DefaultTableModel modelo_paso = (DefaultTableModel) tblPaso.getModel();
                for (int i = index_borrar - 1; i >= 0; i--) {
                    modelo_paso.removeRow(i);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Operación cancelada");
            }
        } catch (SQLException ex) {
            Logger.getLogger(ConsultaMP.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        int index2 = tblProdsAgregadosNV.getRowCount();
        DefaultTableModel modelo_Agregados = (DefaultTableModel) tblProdsAgregadosNV.getModel();
        for (int i = index2 - 1; i >= 0; i--) {
            modelo_Agregados.removeRow(i);
        }
        int index_borrar = tblPaso.getRowCount();
        DefaultTableModel modelo_paso = (DefaultTableModel) tblPaso.getModel();
        for (int i = index_borrar - 1; i >= 0; i--) {
            modelo_paso.removeRow(i);
        }

        int index_productosPendientes = tblProductosPendientes.getRowCount();
        DefaultTableModel modelo_pendientes = (DefaultTableModel) tblProductosPendientes.getModel();
        for (int i = index_productosPendientes - 1; i >= 0; i--) {
            modelo_pendientes.removeRow(i);
        }
        bultos.dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void btnConfirmarInfoProd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarInfoProd1ActionPerformed
        try {
            int idBodega = 0;
            String cm = "";

            String query = "select * from bodega where nombreBodega = ?";
            PreparedStatement pst3 = cn.prepareStatement(query);
            pst3.setString(1, cmbBodega2.getSelectedItem().toString());
            ResultSet rs3 = pst3.executeQuery();
            while (rs3.next()) {
                idBodega = rs3.getInt("idBodega");
            }

            String queryCM = "select * from convenioMarco where nombreConvenio = ?";
            PreparedStatement pst4 = cn.prepareStatement(queryCM);
            pst4.setString(1, cmbConvenioMarco.getSelectedItem().toString());
            ResultSet rs4 = pst4.executeQuery();
            while (rs4.next()) {
                cm = rs4.getString("codigoConvenio");
            }

            System.out.println(cmbDistribuidorStock0.getSelectedItem().toString());

            try {
                String queryINV = "INSERT INTO inventario(`idBodega`,`idProducto`,`sku`,`nombreProducto`,codigoConvenio,`categoria`,"
                        + "`precioventa`,`precioCosto`,`iddistribuidor`,`descripcion`,`regiones`,`condiciondespacho`,`diashabiles`,"
                        + "`statusproducto`,`stock`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);";
                PreparedStatement pstINV = cn.prepareStatement(queryINV);
                pstINV.setInt(1, cmbBodega2.getSelectedIndex());
                pstINV.setString(2, txtIDproductoIngreso1.getText());
                pstINV.setString(3, txtSKUIngreso1.getText());
                pstINV.setString(4, txtNombreProductoIngreso1.getText());
                pstINV.setString(5, cm);
                pstINV.setString(6, cmbConvenioMarco.getSelectedItem().toString());
                pstINV.setInt(7, Integer.parseInt(txtPrecioVentaIngreso1.getText()));
                pstINV.setInt(8, Integer.parseInt(txtPrecioCostoIngreso1.getText()));
                pstINV.setInt(9, cmbConvenioMarco.getSelectedIndex() + 1);
                pstINV.setString(10, txtDescripcionIngreso1.getText());
                pstINV.setString(11, txtRegionesIngreso1.getText());
                pstINV.setString(12, txtCondicionDespachoIngreso1.getText());
                pstINV.setString(13, txtDiasHabilesIngreso1.getText());
                pstINV.setString(14, cmbStatusProdIngreso1.getSelectedItem().toString());
                pstINV.setInt(15, Integer.parseInt(txtStockIngresado1.getText()));

                int upINV = pstINV.executeUpdate();

                JOptionPane.showMessageDialog(null, "Producto Ingresado");
                txtIDproductoIngreso1.setText("");
                txtSKUIngreso1.setText("");
            } catch (SQLException | NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
            cmbBodega2.setSelectedIndex(0);
            txtIDproductoIngreso1.setText("");
            txtSKUIngreso1.setText("");
            txtNombreProductoIngreso1.setText("");
            cmbConvenioMarco.setSelectedIndex(0);
            txtPrecioVentaIngreso1.setText("");
            txtPrecioCostoIngreso1.setText("");

            txtDescripcionIngreso1.setText("");
            txtRegionesIngreso1.setText("");
            txtCondicionDespachoIngreso1.setText("");
            txtDiasHabilesIngreso1.setText("");
            cmbStatusProdIngreso1.setSelectedItem(0);
            txtStockIngresado1.setText("");

            InventarioPorBodega.dispose();
            btnReiniciarFiltros.doClick();

        } catch (SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnConfirmarInfoProd1ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        try {

            InventarioPorBodega.setVisible(true);
            cmbBodega2.removeAllItems();
            cmbSeccionBodega1.removeAllItems();
            String query2 = "select nombreBodega,seccion from bodega";
            PreparedStatement pst2 = cn.prepareStatement(query2);
            ResultSet rs2 = pst2.executeQuery();
            while (rs2.next()) {
                cmbBodega2.addItem(rs2.getString(1));
                cmbSeccionBodega1.addItem(rs2.getString(2));
            }
            cmbConvenioMarco.removeAllItems();
            String query3 = "select nombreConvenio FROM acimabasededatos.conveniomarco order by codigoConvenio desc;";
            PreparedStatement pst3 = cn.prepareStatement(query3);
            ResultSet rs3 = pst3.executeQuery();
            while (rs3.next()) {
                cmbConvenioMarco.addItem(rs3.getString(1));
            }

            cmbDistribuidorStock0.removeAllItems();
            String query4 = "select nombreDistribuidor from distribuidor order by idDistribuidor;";
            PreparedStatement pst4 = cn.prepareStatement(query4);
            ResultSet rs4 = pst4.executeQuery();
            while (rs4.next()) {
                cmbDistribuidorStock0.addItem(rs4.getString(1));
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void btnBorrarNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarNVActionPerformed
        try {
            DefaultTableModel model = (DefaultTableModel) tblPaso.getModel();
            int indexNV = tblPaso.getSelectedRow();
            int cantidad = Integer.parseInt(tblPaso.getValueAt(indexNV, 4).toString());
            int indexOC = tblProductosPendientes.getSelectedRow();
            int cantidadOC = Integer.parseInt(tblProductosPendientes.getValueAt(indexOC, 2).toString());
            cantidadOC = cantidadOC + cantidad;
            model.removeRow(indexNV);
            tblProductosPendientes.setValueAt(cantidadOC, indexOC, 2);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnBorrarNVActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultaMP.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultaMP.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultaMP.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultaMP.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultaMP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame AgregarProductoOT;
    public javax.swing.JFrame InventarioPorBodega;
    private javax.swing.JLabel b_Titulo;
    private javax.swing.JButton btnAddProductoOT;
    private javax.swing.JButton btnAgregarNV;
    private javax.swing.JButton btnAgregarProdOT;
    private javax.swing.JButton btnBorrarNV;
    private javax.swing.JButton btnBorrarProducto;
    private javax.swing.JButton btnBorrarProducto1;
    private javax.swing.JButton btnCalcularValores;
    private javax.swing.JButton btnCalculoTotales;
    private javax.swing.JButton btnConfirmarInfoProd1;
    private javax.swing.JButton btnConfirmarVolver;
    private javax.swing.JButton btnConsultaOC;
    private javax.swing.JButton btnGuardarOrden;
    private javax.swing.JButton btnNVParcializada;
    private javax.swing.JButton btnReiniciarFiltros;
    private javax.swing.JButton btnVolver7;
    private javax.swing.JFrame bultos;
    public javax.swing.JComboBox<String> cmbBodega2;
    public javax.swing.JComboBox cmbConvenioMarco;
    public javax.swing.JComboBox cmbDistribuidorStock0;
    private javax.swing.JComboBox cmbMoneda;
    public javax.swing.JComboBox cmbSeccionBodega1;
    public javax.swing.JComboBox cmbStatusProdIngreso1;
    private javax.swing.JComboBox<String> cmbTransporte1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel123;
    private javax.swing.JLabel jLabel124;
    private javax.swing.JLabel jLabel126;
    private javax.swing.JLabel jLabel127;
    private javax.swing.JLabel jLabel128;
    private javax.swing.JLabel jLabel129;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel132;
    private javax.swing.JLabel jLabel133;
    private javax.swing.JLabel jLabel134;
    private javax.swing.JLabel jLabel135;
    private javax.swing.JLabel jLabel136;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel141;
    private javax.swing.JLabel jLabel146;
    private javax.swing.JLabel jLabel148;
    private javax.swing.JLabel jLabel149;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel150;
    private javax.swing.JLabel jLabel157;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLayeredPane jLayeredPane13;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane26;
    private javax.swing.JScrollPane jScrollPane28;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane14;
    private javax.swing.JTabbedPane jTabbedPane16;
    private javax.swing.JTabbedPane jTabbedPane17;
    public javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblEstadoOrdenCompra;
    private javax.swing.JLabel lblFondoConsultaMP;
    private javax.swing.JLabel lblNombreProducto;
    private javax.swing.JPanel panelConsultaMP;
    private javax.swing.JLayeredPane panelConsultaMPFrame;
    private javax.swing.JPanel panelIngresoProducto1;
    private javax.swing.JTable tblAgregarProdOT;
    private javax.swing.JTable tblMP;
    private javax.swing.JTable tblPaso;
    private javax.swing.JTable tblProdadd;
    private javax.swing.JTable tblProdsAgregadosNV;
    private javax.swing.JTable tblProductosPendientes;
    private javax.swing.JTable tblResumenParcializada;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtCargos;
    private javax.swing.JTextField txtCargos1;
    private javax.swing.JTextField txtCondicionDespachoIngreso1;
    private javax.swing.JTextField txtContactoOC;
    private javax.swing.JTextField txtContactoPago;
    private javax.swing.JTextField txtDcto;
    private javax.swing.JTextField txtDemandante;
    private javax.swing.JTextField txtDescripcionIngreso1;
    private javax.swing.JTextField txtDescuento;
    private javax.swing.JTextField txtDiasHabilesIngreso1;
    private javax.swing.JTextField txtDireccionDemandante;
    private javax.swing.JTextField txtDireccionDespacho;
    private javax.swing.JTextField txtDireccionEnvioFactura;
    private javax.swing.JTextField txtDireccionProveedor;
    private javax.swing.JTextField txtEmailContacto;
    private javax.swing.JTextField txtEspecificacionComprador;
    private javax.swing.JTextField txtEspecificacionProveedor;
    private javax.swing.JTextField txtFechaAceptacion;
    private javax.swing.JTextField txtFechaEnvioOC;
    private javax.swing.JTextField txtFonoProveedor;
    private javax.swing.JTextField txtFormaPago;
    private javax.swing.JTextField txtIDProducto;
    private javax.swing.JTextField txtIDproductoIngreso1;
    private javax.swing.JTextField txtImpuestoEspecifico;
    private javax.swing.JTextField txtIva;
    private javax.swing.JTextField txtMetodoDespacho;
    private javax.swing.JTextField txtNeto;
    private javax.swing.JTextField txtNombreOC;
    private javax.swing.JTextField txtNombreProducto;
    private javax.swing.JTextField txtNombreProductoIngreso1;
    private javax.swing.JTextField txtNombreProveedor;
    private javax.swing.JTextField txtNumeroNotaVenta;
    public javax.swing.JTextField txtOC;
    private javax.swing.JTextField txtObservacion;
    private javax.swing.JTextField txtObservacionDespacho;
    private javax.swing.JTextField txtPrecioCostoIngreso1;
    private javax.swing.JTextField txtPrecioVentaIngreso1;
    private javax.swing.JTextField txtProveedor;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtRegionesIngreso1;
    private javax.swing.JTextField txtRutComprador;
    private javax.swing.JTextField txtRutProveedor;
    private javax.swing.JTextField txtSKU;
    private javax.swing.JTextField txtSKUIngreso1;
    private javax.swing.JTextField txtStockIngresado1;
    private javax.swing.JTextField txtSubTotal;
    private javax.swing.JTextField txtTelefonoDemandante;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtUnidadCompra;
    // End of variables declaration//GEN-END:variables
}
