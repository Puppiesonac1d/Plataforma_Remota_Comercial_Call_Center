package PlataformaVentas;

import clases.Conexion;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Color;
import java.awt.HeadlessException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author The_S
 */
public class NotaVentapriv extends javax.swing.JFrame {

    Conexion con = new Conexion();
    Connection cn = con.conecta();
    public static String empresas;
    private Connection Connection;

    public NotaVentapriv() {
        initComponents();
        mostrarempresas();
    }

    public void mostrarempresas() {
        Connection = con.conecta();
        empresas = "SELECT nombreDistribuidor FROM distribuidor";

        try {
            Statement st = Connection.createStatement();
            ResultSet rs = st.executeQuery(empresas);
            comboempresa.addItem("Seleccione una opci√≥n");

            while (rs.next()) {
                comboempresa.addItem(rs.getString("nombreDistribuidor"));
            }

        } catch (SQLException e) {

            JOptionPane.showMessageDialog(null, e);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        bultos = new javax.swing.JFrame();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel20 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jPanel11 = new javax.swing.JPanel();
        jLabel83 = new javax.swing.JLabel();
        txtNumeroNotaVenta = new javax.swing.JTextField();
        jScrollPane26 = new javax.swing.JScrollPane();
        tblProductosPendientes = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jLabel84 = new javax.swing.JLabel();
        txtQty = new javax.swing.JTextField();
        btnAgregarNV = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPaso = new javax.swing.JTable();
        jLabel44 = new javax.swing.JLabel();
        jLabel157 = new javax.swing.JLabel();
        jScrollPane28 = new javax.swing.JScrollPane();
        tblProdsAgregadosNV = new javax.swing.JTable();
        jButton13 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        btnBorrarNV = new javax.swing.JButton();
        btnCalcularVal = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel53 = new javax.swing.JLabel();
        AgregarProductoOT = new javax.swing.JFrame();
        jLayeredPane13 = new javax.swing.JLayeredPane();
        jTabbedPane16 = new javax.swing.JTabbedPane();
        jPanel40 = new javax.swing.JPanel();
        lblNombreProducto = new javax.swing.JLabel();
        txtNombreProducto = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel41 = new javax.swing.JPanel();
        jLabel80 = new javax.swing.JLabel();
        txtIDProducto = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jPanel42 = new javax.swing.JPanel();
        jLabel85 = new javax.swing.JLabel();
        txtSKU = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jTabbedPane14 = new javax.swing.JTabbedPane();
        jScrollPane20 = new javax.swing.JScrollPane();
        tblAgregarProdOT = new javax.swing.JTable();
        jScrollPane21 = new javax.swing.JScrollPane();
        tblProdadd = new javax.swing.JTable();
        jTabbedPane17 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        txtEspecificacionComprador = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        txtEspecificacionProveedor = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        txtCargos1 = new javax.swing.JTextField();
        txtDescuento = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        cmbMoneda = new javax.swing.JComboBox();
        btnConfirmarVolver = new javax.swing.JButton();
        btnCalcularValores = new javax.swing.JButton();
        btnBorrarProducto1 = new javax.swing.JButton();
        btnAgregarProdOT = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnReiniciarFiltros = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        InventarioPorBodega = new javax.swing.JFrame();
        jScrollPane9 = new javax.swing.JScrollPane();
        panelIngresoProducto1 = new javax.swing.JPanel();
        jLabel95 = new javax.swing.JLabel();
        txtIDproductoIngreso1 = new javax.swing.JTextField();
        jLabel123 = new javax.swing.JLabel();
        txtStockIngresado1 = new javax.swing.JTextField();
        jLabel124 = new javax.swing.JLabel();
        jLabel126 = new javax.swing.JLabel();
        jLabel127 = new javax.swing.JLabel();
        jLabel128 = new javax.swing.JLabel();
        jLabel129 = new javax.swing.JLabel();
        jLabel132 = new javax.swing.JLabel();
        jLabel133 = new javax.swing.JLabel();
        jLabel134 = new javax.swing.JLabel();
        jLabel135 = new javax.swing.JLabel();
        jLabel136 = new javax.swing.JLabel();
        jLabel141 = new javax.swing.JLabel();
        txtNombreProductoIngreso1 = new javax.swing.JTextField();
        txtPrecioVentaIngreso1 = new javax.swing.JTextField();
        txtPrecioCostoIngreso1 = new javax.swing.JTextField();
        txtDescripcionIngreso1 = new javax.swing.JTextField();
        txtRegionesIngreso1 = new javax.swing.JTextField();
        txtCondicionDespachoIngreso1 = new javax.swing.JTextField();
        txtDiasHabilesIngreso1 = new javax.swing.JTextField();
        cmbStatusProdIngreso1 = new javax.swing.JComboBox();
        jLabel148 = new javax.swing.JLabel();
        btnConfirmarInfoProd1 = new javax.swing.JButton();
        cmbTransporte1 = new javax.swing.JComboBox<>();
        cmbBodega2 = new javax.swing.JComboBox<>();
        jLabel146 = new javax.swing.JLabel();
        jLabel149 = new javax.swing.JLabel();
        jLabel150 = new javax.swing.JLabel();
        cmbSeccionBodega1 = new javax.swing.JComboBox();
        cmbDistribuidorStock0 = new javax.swing.JComboBox();
        cmbConvenioMarco = new javax.swing.JComboBox();
        cmbCM = new javax.swing.JComboBox<>();
        cmbMaterial = new javax.swing.JComboBox<>();
        cmbTalla = new javax.swing.JComboBox<>();
        txtID = new javax.swing.JTextField();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        jPanel33 = new javax.swing.JPanel();
        btnVolver4 = new javax.swing.JButton();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        jPanel12 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jLabel93 = new javax.swing.JLabel();
        jTabbedPane9 = new javax.swing.JTabbedPane();
        jScrollPane13 = new javax.swing.JScrollPane();
        tblProductosOrdenCompra = new javax.swing.JTable();
        btnAddProductoOT = new javax.swing.JButton();
        jLabel77 = new javax.swing.JLabel();
        btnBorrarProducto = new javax.swing.JButton();
        jPanel34 = new javax.swing.JPanel();
        txtEmail = new javax.swing.JTextField();
        jLabel100 = new javax.swing.JLabel();
        jLabel101 = new javax.swing.JLabel();
        jLabel97 = new javax.swing.JLabel();
        jLabel96 = new javax.swing.JLabel();
        txtRutCompradorOC = new javax.swing.JTextField();
        txtDireccionDemandanteOC = new javax.swing.JTextField();
        txtTelefonoComprador = new javax.swing.JTextField();
        jLabel98 = new javax.swing.JLabel();
        txtNombreDemandanteOC = new javax.swing.JTextField();
        txtUnidadCompraCliente = new javax.swing.JTextField();
        jLabel114 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtrazonsocial = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtorganizacion = new javax.swing.JTextField();
        jLabel102 = new javax.swing.JLabel();
        jPanel36 = new javax.swing.JPanel();
        jLabel90 = new javax.swing.JLabel();
        txtProveedorOC = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtdireccion = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtrut = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtcorreo = new javax.swing.JTextField();
        txtfono = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        comboempresa = new javax.swing.JComboBox<>();
        jPanel37 = new javax.swing.JPanel();
        txtNombreOrdenCompra = new javax.swing.JTextField();
        jLabel106 = new javax.swing.JLabel();
        txtDireccionesDespachoOC = new javax.swing.JTextField();
        txtDireccionEnvioFacturaOC = new javax.swing.JTextField();
        jLabel107 = new javax.swing.JLabel();
        jLabel112 = new javax.swing.JLabel();
        txtMailEnvioFactura = new javax.swing.JTextField();
        jLabel108 = new javax.swing.JLabel();
        jLabel110 = new javax.swing.JLabel();
        jLabel109 = new javax.swing.JLabel();
        jLabel111 = new javax.swing.JLabel();
        txtContactoOC = new javax.swing.JTextField();
        txtContactoPagoOC = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        txtCodigoOCOT = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtFechaEntregaProductoOC = new javax.swing.JTextField();
        cmbMetodoDespacho = new javax.swing.JComboBox<>();
        cmbFormaPago = new javax.swing.JComboBox<>();
        jPanel22 = new javax.swing.JPanel();
        jLabel115 = new javax.swing.JLabel();
        jLabel116 = new javax.swing.JLabel();
        jLabel117 = new javax.swing.JLabel();
        jLabel118 = new javax.swing.JLabel();
        jLabel119 = new javax.swing.JLabel();
        jLabel120 = new javax.swing.JLabel();
        jLabel121 = new javax.swing.JLabel();
        txtImpuestoEspecifico = new javax.swing.JTextField();
        txtIVAOC = new javax.swing.JTextField();
        txtSubtotalOC = new javax.swing.JTextField();
        txtCargosOC = new javax.swing.JTextField();
        txtDCTOOC = new javax.swing.JTextField();
        txtNetoOC = new javax.swing.JTextField();
        txtTotalOC = new javax.swing.JTextField();
        jLabel78 = new javax.swing.JLabel();
        btnCalculoTotales = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        btnNVParcializada = new javax.swing.JButton();
        jLabel41 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblResumenParcializada = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        txtObservacionDespacho = new javax.swing.JTextField();
        txtObservacion1 = new javax.swing.JTextField();
        btnGuardarOrden = new javax.swing.JButton();
        jPanel38 = new javax.swing.JPanel();
        lblCodigoOCTitulo = new javax.swing.JLabel();
        txtConsultarOC = new javax.swing.JTextField();
        lblCodigo = new javax.swing.JLabel();

        bultos.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        bultos.setMinimumSize(new java.awt.Dimension(1280, 740));
        bultos.setResizable(false);

        jInternalFrame1.setVisible(true);
        jInternalFrame1.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jPanel20.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jScrollPane6.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane6.setToolTipText("");

        jLabel83.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel83.setText("N√∫mero de Nota de Venta:");

        txtNumeroNotaVenta.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtNumeroNotaVenta.setEnabled(false);

        tblProductosPendientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "C√≥digo / ID licitaci√≥n", "Producto", "Cantidad", "Moneda", "Precio Unitario", "Descuento", "Cargos", "Valor Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProductosPendientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblProductosPendientesKeyPressed(evt);
            }
        });
        jScrollPane26.setViewportView(tblProductosPendientes);

        jPanel8.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel84.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel84.setText("Cantidad de Producto en nota de venta:");

        txtQty.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtQty.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtQtyInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        txtQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQtyActionPerformed(evt);
            }
        });
        txtQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtQtyKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtQtyKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel84)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(620, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel84)
                    .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        btnAgregarNV.setBackground(new java.awt.Color(0, 160, 39));
        btnAgregarNV.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAgregarNV.setText("1.-Agregar a nota de venta");
        btnAgregarNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarNVActionPerformed(evt);
            }
        });

        tblPaso.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N¬∞ de NV", "C√≥digo de OC", "C√≥digo / ID licitaci√≥n", "Producto", "Cantidad", "Moneda", "Precio Unitario", "Descuento", "Cargos", "Valor Total"
            }
        ));
        jScrollPane2.setViewportView(tblPaso);

        jLabel44.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel44.setText("Productos en la nota de venta actual:");

        jLabel157.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel157.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel157.setText("Resumen:");

        tblProdsAgregadosNV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N¬∞ de NV", "C√≥digo de OC", "C√≥digo / ID licitaci√≥n", "Producto", "Cantidad", "Moneda", "Precio Unitario", "Descuento", "Cargos", "Valor Total"
            }
        ));
        jScrollPane28.setViewportView(tblProdsAgregadosNV);

        jButton13.setBackground(new java.awt.Color(0, 160, 39));
        jButton13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton13.setText("3.-Confirmar y volver");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(0, 160, 39));
        jButton6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton6.setText("2.-Confirmar Productos en una Nota de Venta");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        btnBorrarNV.setBackground(new java.awt.Color(204, 51, 0));
        btnBorrarNV.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnBorrarNV.setText("Borrar Selecci√≥n ");
        btnBorrarNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarNVActionPerformed(evt);
            }
        });

        btnCalcularVal.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnCalcularVal.setText("Calcular valores");
        btnCalcularVal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularValActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel11Layout.createSequentialGroup()
                                    .addComponent(jLabel83)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtNumeroNotaVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnAgregarNV, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel44, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 1177, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                                .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 571, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBorrarNV, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnCalcularVal)
                            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButton13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane28, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 1177, Short.MAX_VALUE)
                                .addComponent(jScrollPane26, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel157, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(10, 29, Short.MAX_VALUE))))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel83)
                    .addComponent(txtNumeroNotaVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane26, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCalcularVal)
                .addGap(13, 13, 13)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAgregarNV)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel44)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(btnBorrarNV))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel157)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane28, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton13)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jScrollPane6.setViewportView(jPanel11);

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 1221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(516, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(223, 223, 223))
        );

        jScrollPane1.setViewportView(jPanel20);

        jInternalFrame1.getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 1250, 630));

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jButton7.setText("Cerrar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jInternalFrame1.getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1011, 10, 250, -1));

        jLabel53.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlataformaVentas/Imagenes/BackgroundNew.png"))); // NOI18N
        jInternalFrame1.getContentPane().add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1270, 710));

        javax.swing.GroupLayout bultosLayout = new javax.swing.GroupLayout(bultos.getContentPane());
        bultos.getContentPane().setLayout(bultosLayout);
        bultosLayout.setHorizontalGroup(
            bultosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1)
        );
        bultosLayout.setVerticalGroup(
            bultosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)
        );

        AgregarProductoOT.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        AgregarProductoOT.setMinimumSize(new java.awt.Dimension(1280, 740));
        AgregarProductoOT.setResizable(false);
        AgregarProductoOT.setSize(new java.awt.Dimension(1280, 740));

        jLayeredPane13.setPreferredSize(new java.awt.Dimension(1280, 740));

        jTabbedPane16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTabbedPane16.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane16.setAutoscrolls(true);
        jTabbedPane16.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N

        lblNombreProducto.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lblNombreProducto.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblNombreProducto.setText("Buscando:");

        txtNombreProducto.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtNombreProducto.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtNombreProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreProductoActionPerformed(evt);
            }
        });
        txtNombreProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreProductoKeyPressed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jButton2.setText("Buscar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel40Layout = new javax.swing.GroupLayout(jPanel40);
        jPanel40.setLayout(jPanel40Layout);
        jPanel40Layout.setHorizontalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel40Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lblNombreProducto)
                .addGap(30, 30, 30)
                .addComponent(txtNombreProducto, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap())
        );
        jPanel40Layout.setVerticalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel40Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombreProducto)
                    .addComponent(txtNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(43, 43, 43))
        );

        jTabbedPane16.addTab("Buscar Por Nombre", jPanel40);

        jLabel80.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel80.setText("Buscando:");

        txtIDProducto.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtIDProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIDProductoKeyPressed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jButton3.setText("Buscar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel41Layout = new javax.swing.GroupLayout(jPanel41);
        jPanel41.setLayout(jPanel41Layout);
        jPanel41Layout.setHorizontalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel41Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel80)
                .addGap(30, 30, 30)
                .addComponent(txtIDProducto, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap())
        );
        jPanel41Layout.setVerticalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel41Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel80, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIDProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(44, 44, 44))
        );

        jTabbedPane16.addTab("Buscar Por ID", jPanel41);

        jLabel85.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel85.setText("Buscando:");

        txtSKU.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtSKU.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSKUKeyPressed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jButton4.setText("Buscar");
        jButton4.setToolTipText("");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel42Layout = new javax.swing.GroupLayout(jPanel42);
        jPanel42.setLayout(jPanel42Layout);
        jPanel42Layout.setHorizontalGroup(
            jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel42Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel85)
                .addGap(30, 30, 30)
                .addComponent(txtSKU, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addContainerGap())
        );
        jPanel42Layout.setVerticalGroup(
            jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel42Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSKU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel85, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addGap(44, 44, 44))
        );

        jTabbedPane16.addTab("Buscar Por SKU", jPanel42);

        jTabbedPane14.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jTabbedPane14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane14MouseClicked(evt);
            }
        });

        tblAgregarProdOT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblAgregarProdOT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAgregarProdOTMouseClicked(evt);
            }
        });
        jScrollPane20.setViewportView(tblAgregarProdOT);

        jTabbedPane14.addTab("Seleccione Productos", jScrollPane20);

        tblProdadd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID de Producto", "Producto", "Categor√≠a", "Cantidad", "Especificaci√≥n de Compador", "Especificaci√≥n de Proveedor", "Moneda", "Precio Unitario", "Cargos", "Descuento", "Total"
            }
        ));
        tblProdadd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProdaddMouseClicked(evt);
            }
        });
        tblProdadd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblProdaddKeyPressed(evt);
            }
        });
        jScrollPane21.setViewportView(tblProdadd);

        jTabbedPane14.addTab("Productos que se a√±adir√°n", jScrollPane21);

        jTabbedPane17.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N

        jPanel4.setBackground(new java.awt.Color(0, 0, 0));
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("Especificaci√≥n de Comprador:");

        txtEspecificacionComprador.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtEspecificacionComprador.setToolTipText("");

        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setText("Especificaci√≥n de Proveedor:");

        jLabel39.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setText("Moneda:");

        jLabel66.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel66.setForeground(new java.awt.Color(255, 255, 255));
        jLabel66.setText("Cargos:");
        jLabel66.setToolTipText("");

        jLabel71.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel71.setForeground(new java.awt.Color(255, 255, 255));
        jLabel71.setText("Descuento:");

        txtEspecificacionProveedor.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtEspecificacionProveedor.setToolTipText("");

        txtCantidad.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtCantidad.setToolTipText("");

        txtCargos1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtCargos1.setToolTipText("");

        txtDescuento.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtDescuento.setToolTipText("");

        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(255, 255, 255));
        jLabel40.setText("Cantidad:");

        cmbMoneda.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        cmbMoneda.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar Moneda", "CLP", "USD" }));
        cmbMoneda.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMonedaItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel71)
                    .addComponent(jLabel66)
                    .addComponent(jLabel39)
                    .addComponent(jLabel37)
                    .addComponent(jLabel38)
                    .addComponent(jLabel40))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtCargos1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbMoneda, javax.swing.GroupLayout.Alignment.LEADING, 0, 533, Short.MAX_VALUE)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEspecificacionProveedor, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEspecificacionComprador, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDescuento))
                .addGap(14, 14, 14))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(txtEspecificacionComprador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(txtEspecificacionProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel40))
                .addGap(6, 6, 6)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel66)
                    .addComponent(txtCargos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel71)
                    .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane17.addTab("C√°lculo de Valores", jPanel4);

        btnConfirmarVolver.setBackground(new java.awt.Color(0, 153, 0));
        btnConfirmarVolver.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnConfirmarVolver.setText("3.-Confirmar y Volver a N.V");
        btnConfirmarVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarVolverActionPerformed(evt);
            }
        });

        btnCalcularValores.setEnabled(false);
        btnCalcularValores.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnCalcularValores.setText("2.-Calcular Valores");
        btnCalcularValores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularValoresActionPerformed(evt);
            }
        });

        btnBorrarProducto1.setBackground(new java.awt.Color(204, 0, 0));
        btnBorrarProducto1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnBorrarProducto1.setText("Borrar Producto de la lista");
        btnBorrarProducto1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarProducto1ActionPerformed(evt);
            }
        });

        btnAgregarProdOT.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnAgregarProdOT.setText("1.-Agregar Producto");
        btnAgregarProdOT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarProdOTActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(204, 0, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jButton1.setText("Volver y cancelar toda la operaci√≥n");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnReiniciarFiltros.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnReiniciarFiltros.setText("Reiniciar Filtros");
        btnReiniciarFiltros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReiniciarFiltrosActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(0, 153, 153));
        jButton8.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jButton8.setText("Ingreso producto Stock 0");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLayeredPane13.setLayer(jTabbedPane16, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane13.setLayer(jTabbedPane14, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane13.setLayer(jTabbedPane17, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane13.setLayer(btnConfirmarVolver, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane13.setLayer(btnCalcularValores, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane13.setLayer(btnBorrarProducto1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane13.setLayer(btnAgregarProdOT, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane13.setLayer(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane13.setLayer(btnReiniciarFiltros, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane13.setLayer(jButton8, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane13Layout = new javax.swing.GroupLayout(jLayeredPane13);
        jLayeredPane13.setLayout(jLayeredPane13Layout);
        jLayeredPane13Layout.setHorizontalGroup(
            jLayeredPane13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane13Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(jLayeredPane13Layout.createSequentialGroup()
                        .addGroup(jLayeredPane13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPane13Layout.createSequentialGroup()
                                .addComponent(jTabbedPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 865, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jLayeredPane13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnConfirmarVolver, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnCalcularValores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnAgregarProdOT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnBorrarProducto1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jLayeredPane13Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jTabbedPane16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnReiniciarFiltros)
                                .addGap(395, 395, 395))
                            .addComponent(jTabbedPane14, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(4, 4, 4)))
                .addContainerGap())
        );
        jLayeredPane13Layout.setVerticalGroup(
            jLayeredPane13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jLayeredPane13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane13Layout.createSequentialGroup()
                        .addComponent(btnReiniciarFiltros)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jTabbedPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jLayeredPane13Layout.createSequentialGroup()
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBorrarProducto1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAgregarProdOT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCalcularValores)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnConfirmarVolver)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(jTabbedPane17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(438, 438, 438))
        );

        javax.swing.GroupLayout AgregarProductoOTLayout = new javax.swing.GroupLayout(AgregarProductoOT.getContentPane());
        AgregarProductoOT.getContentPane().setLayout(AgregarProductoOTLayout);
        AgregarProductoOTLayout.setHorizontalGroup(
            AgregarProductoOTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AgregarProductoOTLayout.createSequentialGroup()
                .addComponent(jLayeredPane13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        AgregarProductoOTLayout.setVerticalGroup(
            AgregarProductoOTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        InventarioPorBodega.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        InventarioPorBodega.setMinimumSize(new java.awt.Dimension(1280, 740));
        InventarioPorBodega.setResizable(false);

        jScrollPane9.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane9.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        panelIngresoProducto1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelIngresoProducto1.setEnabled(true);
        panelIngresoProducto1.setMaximumSize(new java.awt.Dimension(1280, 740));
        panelIngresoProducto1.setMinimumSize(new java.awt.Dimension(1280, 740));

        jLabel95.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel95.setText("ID de Producto:");

        txtIDproductoIngreso1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtIDproductoIngreso1.setText("-");

        jLabel123.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel123.setText("Stock a Ingresar:");

        txtStockIngresado1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtStockIngresado1.setText("0");
        txtStockIngresado1.setEnabled(false);

        jLabel124.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel124.setText("SKU:");

        jLabel126.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel126.setText("Nombre de Producto:");

        jLabel127.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel127.setText("Categor√≠a:");

        jLabel128.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel128.setText("Precio de Venta(Unitario):");

        jLabel129.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel129.setText("Precio Costo:");

        jLabel132.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel132.setText("Descripci√≥n:");

        jLabel133.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel133.setText("Distribuidor:");

        jLabel134.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel134.setText("Regiones:");

        jLabel135.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel135.setText("Condici√≥n de Despacho:");

        jLabel136.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel136.setText("D√≠as H√°biles:");

        jLabel141.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel141.setText("Status del Producto:");

        txtNombreProductoIngreso1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtNombreProductoIngreso1.setText("-");

        txtPrecioVentaIngreso1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtPrecioVentaIngreso1.setText("0");

        txtPrecioCostoIngreso1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtPrecioCostoIngreso1.setText("0");

        txtDescripcionIngreso1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtDescripcionIngreso1.setText("-");
        txtDescripcionIngreso1.setEnabled(false);

        txtRegionesIngreso1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtRegionesIngreso1.setText("-");
        txtRegionesIngreso1.setEnabled(false);

        txtCondicionDespachoIngreso1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtCondicionDespachoIngreso1.setText("-");
        txtCondicionDespachoIngreso1.setEnabled(false);

        txtDiasHabilesIngreso1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtDiasHabilesIngreso1.setText("-");
        txtDiasHabilesIngreso1.setEnabled(false);

        cmbStatusProdIngreso1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        cmbStatusProdIngreso1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sin Stock", "Habilitado" }));
        cmbStatusProdIngreso1.setEnabled(false);

        jLabel148.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel148.setText("Informaci√≥n del Producto:");

        btnConfirmarInfoProd1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnConfirmarInfoProd1.setText("Confirmar Informaci√≥n de Producto");
        btnConfirmarInfoProd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarInfoProd1ActionPerformed(evt);
            }
        });

        cmbTransporte1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        cmbTransporte1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Transporte", "Acima", "Transporte Externo" }));

        cmbBodega2.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N

        jLabel146.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel146.setText("Bodega:");

        jLabel149.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel149.setText("Transporte:");

        jLabel150.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel150.setText("Secci√≥n de Bodega:");

        cmbSeccionBodega1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N

        cmbDistribuidorStock0.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N

        cmbConvenioMarco.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        cmbConvenioMarco.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar Convenio Marco" }));

        cmbCM.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        cmbCM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Convenio Marco" }));

        cmbMaterial.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        cmbMaterial.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Material" }));

        cmbTalla.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        cmbTalla.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Talla" }));

        txtID.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtID.setText("0");

        javax.swing.GroupLayout panelIngresoProducto1Layout = new javax.swing.GroupLayout(panelIngresoProducto1);
        panelIngresoProducto1.setLayout(panelIngresoProducto1Layout);
        panelIngresoProducto1Layout.setHorizontalGroup(
            panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelIngresoProducto1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelIngresoProducto1Layout.createSequentialGroup()
                        .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel95)
                            .addComponent(jLabel124)
                            .addComponent(jLabel126)
                            .addComponent(jLabel127)
                            .addComponent(jLabel128)
                            .addComponent(jLabel129)
                            .addComponent(jLabel133)
                            .addComponent(jLabel132)
                            .addComponent(jLabel134)
                            .addComponent(jLabel135)
                            .addComponent(jLabel136)
                            .addComponent(jLabel141)
                            .addComponent(jLabel123)
                            .addComponent(jLabel146)
                            .addComponent(jLabel149))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombreProductoIngreso1)
                            .addComponent(txtPrecioVentaIngreso1)
                            .addComponent(txtPrecioCostoIngreso1)
                            .addComponent(txtDescripcionIngreso1)
                            .addComponent(txtRegionesIngreso1)
                            .addComponent(txtCondicionDespachoIngreso1)
                            .addComponent(txtDiasHabilesIngreso1)
                            .addComponent(cmbStatusProdIngreso1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtStockIngresado1)
                            .addComponent(cmbDistribuidorStock0, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbConvenioMarco, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(panelIngresoProducto1Layout.createSequentialGroup()
                                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(panelIngresoProducto1Layout.createSequentialGroup()
                                            .addComponent(cmbBodega2, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel150)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(cmbSeccionBodega1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(txtIDproductoIngreso1)
                                        .addComponent(cmbTransporte1, 0, 911, Short.MAX_VALUE))
                                    .addGroup(panelIngresoProducto1Layout.createSequentialGroup()
                                        .addComponent(cmbCM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cmbMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cmbTalla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jLabel148)
                    .addComponent(btnConfirmarInfoProd1))
                .addGap(349, 349, 349))
        );
        panelIngresoProducto1Layout.setVerticalGroup(
            panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelIngresoProducto1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel148)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbTransporte1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel149))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbBodega2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel150)
                    .addComponent(cmbSeccionBodega1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel146))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIDproductoIngreso1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel95))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel124)
                    .addComponent(cmbCM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbTalla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel126)
                    .addComponent(txtNombreProductoIngreso1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel127)
                    .addComponent(cmbConvenioMarco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel128)
                    .addComponent(txtPrecioVentaIngreso1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel129)
                    .addComponent(txtPrecioCostoIngreso1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel133)
                    .addComponent(cmbDistribuidorStock0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel132)
                    .addComponent(txtDescripcionIngreso1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel134)
                    .addComponent(txtRegionesIngreso1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCondicionDespachoIngreso1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel135))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDiasHabilesIngreso1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel136))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel141)
                    .addComponent(cmbStatusProdIngreso1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(panelIngresoProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel123)
                    .addComponent(txtStockIngresado1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConfirmarInfoProd1)
                .addContainerGap())
        );

        jScrollPane9.setViewportView(panelIngresoProducto1);

        javax.swing.GroupLayout InventarioPorBodegaLayout = new javax.swing.GroupLayout(InventarioPorBodega.getContentPane());
        InventarioPorBodega.getContentPane().setLayout(InventarioPorBodegaLayout);
        InventarioPorBodegaLayout.setHorizontalGroup(
            InventarioPorBodegaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InventarioPorBodegaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 1260, Short.MAX_VALUE)
                .addContainerGap())
        );
        InventarioPorBodegaLayout.setVerticalGroup(
            InventarioPorBodegaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setResizable(false);

        jLayeredPane4.setMaximumSize(new java.awt.Dimension(1280, 740));
        jLayeredPane4.setMinimumSize(new java.awt.Dimension(1280, 740));

        jPanel33.setBackground(new Color(0, 0, 0, 0));
        jPanel33.setBackground(new java.awt.Color(0, 0, 0));

        btnVolver4.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnVolver4.setText("Volver");
        btnVolver4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolver4ActionPerformed(evt);
            }
        });

        jTabbedPane3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTabbedPane3.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N

        jScrollPane7.setToolTipText("");

        jPanel12.setBackground(new java.awt.Color(0, 0, 0));

        jPanel21.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel93.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel93.setText("Informaci√≥n de la empresa:");

        tblProductosOrdenCompra = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int celIndex){
                return false;
            }
        };
        tblProductosOrdenCompra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "C√≥digo de Producto", "Producto", "Cantidad", "Especificaci√≥n de Comprador", "Especificaci√≥n de Proveedor", "Moneda", "Precio Unitario", "Cargos", "Descuento", "Valor Total"
            }
        ));
        jScrollPane13.setViewportView(tblProductosOrdenCompra);

        jTabbedPane9.addTab("Informaci√≥n de Productos", jScrollPane13);

        //btnAddProductoOT.setVisible(false);
        //btnAddProductoOT.setEnabled(false);
        btnAddProductoOT.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnAddProductoOT.setText("A√±adir Producto a Lista");
        btnAddProductoOT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProductoOTActionPerformed(evt);
            }
        });

        jLabel77.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel77.setForeground(new java.awt.Color(255, 51, 51));
        jLabel77.setText("*Se a√±adir√° un campo en blanco para rellenar con la informaci√≥n de producto");

        btnBorrarProducto.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnBorrarProducto.setText("Borrar Producto");
        btnBorrarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarProductoActionPerformed(evt);
            }
        });

        jPanel34.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel100.setText("Email de Contacto:");

        jLabel101.setText("Tel√©fono:");

        jLabel97.setText("Direcci√≥n Demandante:");

        jLabel96.setText("Rut de Comprador:");

        txtRutCompradorOC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRutCompradorOCKeyPressed(evt);
            }
        });

        jLabel98.setText("Demandante:");

        jLabel114.setText("Unidad de Compra:");

        jLabel6.setText("Razon Social:");

        jLabel7.setText("Organizacion:");

        jLabel102.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel102.setText("Informaci√≥n del Demandante:");

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel34Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel100)
                    .addComponent(jLabel97)
                    .addComponent(jLabel101)
                    .addComponent(jLabel96))
                .addGap(10, 10, 10)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTelefonoComprador, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                    .addComponent(txtDireccionDemandanteOC)
                    .addComponent(txtRutCompradorOC)
                    .addComponent(txtEmail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel98)
                    .addComponent(jLabel114)
                    .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel7)
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtorganizacion)
                    .addComponent(txtrazonsocial)
                    .addComponent(txtUnidadCompraCliente)
                    .addComponent(txtNombreDemandanteOC))
                .addGap(10, 10, 10))
            .addGroup(jPanel34Layout.createSequentialGroup()
                .addComponent(jLabel102, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel34Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel102)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel98)
                    .addComponent(txtNombreDemandanteOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel96)
                    .addComponent(txtRutCompradorOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel114)
                    .addComponent(txtUnidadCompraCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel97)
                    .addComponent(txtDireccionDemandanteOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel101)
                    .addComponent(txtTelefonoComprador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtrazonsocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel100)
                    .addComponent(jLabel7)
                    .addComponent(txtorganizacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel36.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel90.setText("Proveedor:");

        jLabel2.setText("Direccion:");

        jLabel3.setText("Rut:");

        jLabel4.setText("Correo:");

        jLabel5.setText("Fono:");

        jLabel8.setText("Seleccione La Empresa:");

        comboempresa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));
        comboempresa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboempresaItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel36Layout = new javax.swing.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel36Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel90)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtProveedorOC)
                    .addComponent(txtrut)
                    .addComponent(comboempresa, 0, 319, Short.MAX_VALUE))
                .addGap(132, 132, 132)
                .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2))
                .addGap(4, 4, 4)
                .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtcorreo, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                    .addComponent(txtfono)
                    .addComponent(txtdireccion))
                .addGap(217, 217, 217))
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel36Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel36Layout.createSequentialGroup()
                        .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtcorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtfono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtdireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(jPanel36Layout.createSequentialGroup()
                        .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(comboempresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtProveedorOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel90))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtrut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel37.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtNombreOrdenCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreOrdenCompraActionPerformed(evt);
            }
        });

        jLabel106.setText("Direccion de Despacho:");

        txtDireccionesDespachoOC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionesDespachoOCActionPerformed(evt);
            }
        });

        txtDireccionEnvioFacturaOC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionEnvioFacturaOCActionPerformed(evt);
            }
        });

        jLabel107.setText("Direcci√≥n de Env√≠o de factura:");

        jLabel112.setText("Mail de env√≠o de factura:");

        jLabel108.setText("Metodo de Despacho:");

        jLabel110.setText("Forma de Pago:");

        jLabel109.setText("Contacto de Pago:");

        jLabel111.setText("Contacto OC:");

        jLabel42.setText("C√≥digo de Orden de Compra:");

        jLabel19.setText("Nombre de Orden de Compra:");

        jLabel9.setText("Fecha de entrega de productos:");

        cmbMetodoDespacho.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Metodo de Despacho", "7 -   Despachar a Direcci√≥n de Env√≠o", "9 -   Despachar seg√∫n programa adjuntado", "12 - Otra Forma de Despacho, Ver Instruc.", "14 - Retiramos de su Bodega", "20 - Despacho por courier o encomienda a√©rea", "21 - Despacho por courier o encomienda terrestre", "22 - A convenir" }));
        cmbMetodoDespacho.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMetodoDespachoItemStateChanged(evt);
            }
        });

        cmbFormaPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Forma de Pago", "1   - 15 d√≠as contra la recepci√≥n de la factura", "2   - 30 d√≠as contra la recepci√≥n de la factura", "39 - Otra forma de pago", "47 - 60 d√≠as contra la recepci√≥n de la factura", "49 - Mayor a 30 D√≠as" }));

        javax.swing.GroupLayout jPanel37Layout = new javax.swing.GroupLayout(jPanel37);
        jPanel37.setLayout(jPanel37Layout);
        jPanel37Layout.setHorizontalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel37Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel112)
                    .addComponent(jLabel107)
                    .addComponent(jLabel106)
                    .addComponent(jLabel19)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtDireccionEnvioFacturaOC, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDireccionesDespachoOC, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFechaEntregaProductoOC, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                    .addComponent(txtNombreOrdenCompra, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMailEnvioFactura))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel110)
                    .addComponent(jLabel109)
                    .addComponent(jLabel111, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel42)
                    .addComponent(jLabel108))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtContactoOC)
                    .addComponent(txtContactoPagoOC, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCodigoOCOT)
                    .addComponent(cmbMetodoDespacho, 0, 425, Short.MAX_VALUE)
                    .addComponent(cmbFormaPago, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel37Layout.setVerticalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel37Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel37Layout.createSequentialGroup()
                        .addComponent(txtContactoPagoOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtContactoOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodigoOCOT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel37Layout.createSequentialGroup()
                        .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombreOrdenCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel108)
                            .addComponent(jLabel19)
                            .addComponent(cmbMetodoDespacho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtFechaEntregaProductoOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel110)
                            .addComponent(cmbFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDireccionesDespachoOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel106)
                            .addComponent(jLabel109))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel107)
                            .addComponent(txtDireccionEnvioFacturaOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel111))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMailEnvioFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel112)
                            .addComponent(jLabel42))))
                .addContainerGap())
        );

        jPanel22.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel115.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel115.setText("Neto:");

        jLabel116.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel116.setText("*Dcto:");

        jLabel117.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel117.setText("*Cargos:");

        jLabel118.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel118.setText("Subtotal:");

        jLabel119.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel119.setText("19% IVA:");

        jLabel120.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel120.setText("*Impuesto Especifico:");

        jLabel121.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel121.setText("Total:");

        txtImpuestoEspecifico.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtImpuestoEspecifico.setText("$0");

        txtIVAOC.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtIVAOC.setText("$0");

        txtSubtotalOC.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtSubtotalOC.setText("$0");

        txtCargosOC.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtCargosOC.setText("$0");

        txtDCTOOC.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtDCTOOC.setText("$0");

        txtNetoOC.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtNetoOC.setText("$0");

        txtTotalOC.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtTotalOC.setText("$0");

        btnCalculoTotales.setText("Calcular valores");
        btnCalculoTotales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculoTotalesActionPerformed(evt);
            }
        });

        jLabel1.setText("*Valores obligatorios, en caso de ser no saber el valor dejar como 0.00 si es USD o 0 si es CLP");

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel118)
                    .addComponent(jLabel117)
                    .addComponent(jLabel116)
                    .addComponent(jLabel115))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCargosOC)
                    .addComponent(txtSubtotalOC)
                    .addComponent(txtDCTOOC)
                    .addComponent(txtNetoOC, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel121)
                            .addComponent(jLabel119)
                            .addComponent(jLabel120))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtImpuestoEspecifico, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                            .addComponent(txtTotalOC, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtIVAOC)))
                    .addComponent(btnCalculoTotales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel78, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel115)
                    .addComponent(txtNetoOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel78)
                    .addComponent(jLabel119)
                    .addComponent(txtIVAOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel116)
                    .addComponent(txtDCTOOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel120)
                    .addComponent(txtImpuestoEspecifico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel117)
                    .addComponent(txtCargosOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel121)
                    .addComponent(txtTotalOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel118)
                    .addComponent(txtSubtotalOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCalculoTotales))
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel43.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel43.setText("Entrega Parcializada");

        jPanel6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnNVParcializada.setBackground(new java.awt.Color(0, 204, 0));
        btnNVParcializada.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnNVParcializada.setText("1-Definir Entrega Parcializada y Gu√≠as de Despacho");
        btnNVParcializada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNVParcializadaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNVParcializada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNVParcializada)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel41.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel41.setText("Resumen de Orden Parcializada");

        jPanel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tblResumenParcializada.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N¬∞ de NV", "Codigo Orden Compra", "C√≥digo / ID licitaci√≥n", "Producto", "Cantidad", "Moneda", "Precio Unitario", "Descuento", "Cargos", "Valor Total"
            }
        ));
        jScrollPane5.setViewportView(tblResumenParcializada);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel10.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel32.setText("Observaci√≥n de Orden:");

        jLabel62.setText("Observaci√≥n de Despacho:");

        txtObservacion1.setText("-");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel62)
                    .addComponent(jLabel32))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtObservacion1, javax.swing.GroupLayout.DEFAULT_SIZE, 965, Short.MAX_VALUE)
                    .addComponent(txtObservacionDespacho))
                .addGap(53, 53, 53))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(txtObservacion1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtObservacionDespacho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel62))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        btnGuardarOrden.setBackground(new java.awt.Color(0, 204, 0));
        btnGuardarOrden.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnGuardarOrden.setText("2-Generar Nota de Venta");
        btnGuardarOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarOrdenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jPanel34, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel37, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel93, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel36, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel21Layout.createSequentialGroup()
                                .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 1162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 275, Short.MAX_VALUE))
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTabbedPane9)
                            .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGuardarOrden, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(btnAddProductoOT)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBorrarProducto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel77, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel93)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel37, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBorrarProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddProductoOT)
                    .addComponent(jLabel77))
                .addGap(3, 3, 3)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel43)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addComponent(jLabel41)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnGuardarOrden)
                .addContainerGap())
        );

        jPanel38.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblCodigoOCTitulo.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lblCodigoOCTitulo.setText("N√∫mero de Orden de Compra:");

        txtConsultarOC.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtConsultarOC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConsultarOCActionPerformed(evt);
            }
        });
        txtConsultarOC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtConsultarOCKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel38Layout = new javax.swing.GroupLayout(jPanel38);
        jPanel38.setLayout(jPanel38Layout);
        jPanel38Layout.setHorizontalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel38Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCodigoOCTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtConsultarOC, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(594, Short.MAX_VALUE))
        );
        jPanel38Layout.setVerticalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel38Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodigoOCTitulo)
                    .addComponent(txtConsultarOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane7.setViewportView(jPanel12);

        jTabbedPane3.addTab("Generar Nota de Venta", jScrollPane7);

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel33Layout.createSequentialGroup()
                .addContainerGap(1188, Short.MAX_VALUE)
                .addComponent(btnVolver4)
                .addContainerGap())
            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel33Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jTabbedPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1275, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnVolver4)
                .addContainerGap(624, Short.MAX_VALUE))
            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel33Layout.createSequentialGroup()
                    .addGap(46, 46, 46)
                    .addComponent(jTabbedPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 611, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        lblCodigo.setVisible(true);

        jLayeredPane4.setLayer(jPanel33, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(lblCodigo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane4Layout = new javax.swing.GroupLayout(jLayeredPane4);
        jLayeredPane4.setLayout(jLayeredPane4Layout);
        jLayeredPane4Layout.setHorizontalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jLayeredPane4Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(lblCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane4Layout.setVerticalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane4Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(lblCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolver4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolver4ActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnVolver4ActionPerformed

    private void btnAddProductoOTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProductoOTActionPerformed
        try {
            AgregarProductoOT.setVisible(true);
            this.setVisible(false);
            String queryProducto = "Select inv.idProducto as 'ID producto', inv.SKU, inv.categoria as 'Categor√≠a', inv.nombreProducto as 'Producto',\n"
                    + "inv.descripcion as 'Descripci√≥n' ,inv.precioVenta as 'Precio Venta',inv.StatusProducto as 'Estado', inv.stock as 'Stock en la bodega'\n"
                    + "FROM inventario inv;";
            PreparedStatement pstProducto = cn.prepareStatement(queryProducto);
            ResultSet rsProducto = pstProducto.executeQuery();
            tblAgregarProdOT.setModel(DbUtils.resultSetToTableModel(rsProducto));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
        }
        try {
            TableModel cotizacion = tblProductosOrdenCompra.getModel();
            int indexs[] = tblProductosOrdenCompra.getSelectedRows();
            Object[] row = new Object[14];
            DefaultTableModel modeloNuevo = (DefaultTableModel) tblProdadd.getModel();
            TableModel modelo = tblProductosOrdenCompra.getModel();
            int selectedRows[] = tblProductosOrdenCompra.getSelectedRows();
            for (int i = 0; i < indexs.length; i++) {
                row[0] = cotizacion.getValueAt(indexs[i], 0);
                row[1] = cotizacion.getValueAt(indexs[i], 1);
                row[2] = cotizacion.getValueAt(indexs[i], 2);
                row[3] = cotizacion.getValueAt(indexs[i], 3);
                row[4] = cotizacion.getValueAt(indexs[i], 4);
                row[5] = cotizacion.getValueAt(indexs[i], 5);
                row[6] = cotizacion.getValueAt(indexs[i], 6);
                row[7] = cotizacion.getValueAt(indexs[i], 7);
                row[8] = cotizacion.getValueAt(indexs[i], 8);
                row[9] = cotizacion.getValueAt(indexs[i], 9);
                modeloNuevo.addRow(row);
            }
            //JOptionPane.showMessageDialog(null, "Productos Agregados a OT");
            btnBorrarProducto.setEnabled(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnAddProductoOTActionPerformed

    private void btnBorrarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarProductoActionPerformed
        DefaultTableModel modeloTabla = (DefaultTableModel) tblProductosOrdenCompra.getModel();
        // Se obtiene el numero de columna seleccionado
        try {
            int seleccion = tblProductosOrdenCompra.getSelectedRow();
            //Se borra
            modeloTabla.removeRow(seleccion);
            if (tblProductosOrdenCompra.getRowCount() == 0) {
                btnBorrarProducto.setEnabled(false);
            }
            JOptionPane.showMessageDialog(null, "Producto borrado de Orden de Compra");
            btnBorrarProducto.setEnabled(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: No se ha seleccionado un producto" + ex.getMessage());
        }
    }//GEN-LAST:event_btnBorrarProductoActionPerformed

    private void txtNombreOrdenCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreOrdenCompraActionPerformed

    }//GEN-LAST:event_txtNombreOrdenCompraActionPerformed

    private void txtDireccionesDespachoOCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionesDespachoOCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionesDespachoOCActionPerformed

    private void txtDireccionEnvioFacturaOCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionEnvioFacturaOCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionEnvioFacturaOCActionPerformed

    private void txtConsultarOCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConsultarOCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConsultarOCActionPerformed

    private void btnCalculoTotalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculoTotalesActionPerformed
        try {
            int netoTabla = 0;
            if (tblProductosOrdenCompra.getValueAt(0, 5).toString().equals("CLP")) {
                for (int i = 0; i < tblProductosOrdenCompra.getRowCount(); i++) {

                    int descuento = Integer.parseInt(txtDCTOOC.getText().replace("$", "").replace(".", ""));
                    int cargo = Integer.parseInt(txtCargosOC.getText().replace("$", "").replace(".", ""));

                    netoTabla = netoTabla + Integer.parseInt(tblProductosOrdenCompra.getValueAt(i, 9).toString().replace("$", "").replace(".", ""));

                    int subtotal = netoTabla;
                    double iva = netoTabla * 0.19;
                    int impuesto_especifico = Integer.parseInt(txtImpuestoEspecifico.getText().replace("$", "").replace(".", ""));
                    int total = (int) (iva + impuesto_especifico + subtotal - descuento);
                    //Formateo

                    txtNetoOC.setText(java.text.NumberFormat.getCurrencyInstance().format(netoTabla));
                    txtDCTOOC.setText(java.text.NumberFormat.getCurrencyInstance().format(descuento));
                    txtCargosOC.setText(java.text.NumberFormat.getCurrencyInstance().format(cargo));
                    txtSubtotalOC.setText(java.text.NumberFormat.getCurrencyInstance().format(subtotal));
                    txtIVAOC.setText(java.text.NumberFormat.getCurrencyInstance().format(iva));
                    txtImpuestoEspecifico.setText(java.text.NumberFormat.getCurrencyInstance().format(impuesto_especifico));
                    txtTotalOC.setText(java.text.NumberFormat.getCurrencyInstance().format(total));

                    txtNetoOC.setText(txtNetoOC.getText().substring(2));
                    txtDCTOOC.setText(txtDCTOOC.getText().substring(2));
                    txtCargosOC.setText(txtCargosOC.getText().substring(2));
                    txtSubtotalOC.setText(txtSubtotalOC.getText().substring(2));
                    txtIVAOC.setText(txtIVAOC.getText().substring(2));
                    txtImpuestoEspecifico.setText(txtImpuestoEspecifico.getText().substring(2));
                    txtTotalOC.setText(txtTotalOC.getText().substring(2));
                }

            } else {

                for (int i = 0; i < tblProductosOrdenCompra.getRowCount(); i++) {

                    int descuento = Integer.parseInt(txtDCTOOC.getText().replace("$", "").replace(".", ""));
                    int cargo = Integer.parseInt(txtCargosOC.getText().replace("$", "").replace(".", ""));

                    netoTabla = netoTabla + Integer.parseInt(tblProductosOrdenCompra.getValueAt(i, 9).toString().replace("$", "").replace(".", ""));

                    int subtotal = netoTabla;
                    double iva = netoTabla * 0.19;
                    int impuesto_especifico = Integer.parseInt(txtImpuestoEspecifico.getText().replace("$", "").replace(".", ""));
                    int total = (int) (iva + impuesto_especifico + subtotal - descuento);

                    //Formateo
                    txtNetoOC.setText(new DecimalFormat("$#,##0.00").format(netoTabla));
                    txtDCTOOC.setText(new DecimalFormat("$#,##0.00").format(descuento));
                    txtCargosOC.setText(new DecimalFormat("$#,##0.00").format(cargo));
                    txtSubtotalOC.setText(new DecimalFormat("$#,##0.00").format(subtotal));
                    txtIVAOC.setText(new DecimalFormat("$#,##0.00").format(iva));
                    txtImpuestoEspecifico.setText(new DecimalFormat("$#,##0.00").format(impuesto_especifico));
                    txtTotalOC.setText(new DecimalFormat("$#,##0.00").format(total));
                }

            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: debe ingresar un valor correspondiente a la moneda" + ex.getMessage());
        }
    }//GEN-LAST:event_btnCalculoTotalesActionPerformed

    private void comboempresaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboempresaItemStateChanged
        int empresa = comboempresa.getSelectedIndex();

        try {
            String query = "SELECT nombreDistribuidor,rut,correo,fono,Direccion from distribuidor where idDistribuidor = ?;";
            PreparedStatement pst;
            pst = cn.prepareStatement(query);
            pst.setInt(1, empresa);
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                txtProveedorOC.setText(rs.getString("nombreDistribuidor"));
                txtrut.setText(rs.getString("rut"));
                txtcorreo.setText(rs.getString("correo"));
                txtfono.setText(rs.getString("fono"));
                txtdireccion.setText(rs.getString("Direccion"));

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }

    }//GEN-LAST:event_comboempresaItemStateChanged

    private void txtRutCompradorOCKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRutCompradorOCKeyPressed
        //Busqueda de datos de cliente cuando se escribe rut....
        try {
            if (txtRutCompradorOC.getText().equals("")) {
                //hacer nada   
            } else {
                String query = "SELECT \n"
                        + "    c.rut,\n"
                        + "    c.nombre,\n"
                        + "    o.nombreOrganizacion,\n"
                        + "    u.detalle,\n"
                        + "    c.Razon_social,\n"
                        + "    c.correo,\n"
                        + "    c.telefono,\n"
                        + "    c.direccion,\n"
                        + "    c.ciudad\n"
                        + "FROM\n"
                        + "    cliente c\n"
                        + "        LEFT JOIN\n"
                        + "    organizacion o ON c.idOrganizacion = o.idOrganizacion\n"
                        + "        left JOIN\n"
                        + "    unidadDeCompra u ON c.idUnidadCompra = u.idUnidadCompra\n"
                        + "    WHERE c.rut RLIKE ?;";
                PreparedStatement pst;
                pst = cn.prepareStatement(query);
                pst.setString(1, txtRutCompradorOC.getText());
                ResultSet rs = pst.executeQuery();
                while (rs.next()) {
                    txtDireccionDemandanteOC.setText(rs.getString("C.DIRECCION") + "," + rs.getString("C.CIUDAD"));
                    txtTelefonoComprador.setText(rs.getString("C.telefono"));
                    txtEmail.setText(rs.getString("C.CORREO"));
                    txtMailEnvioFactura.setText(rs.getString("C.CORREO"));
                    txtNombreDemandanteOC.setText(rs.getString("C.NOMBRE"));
                    txtUnidadCompraCliente.setText(rs.getString("U.DETALLE"));

                    txtorganizacion.setText(rs.getString("O.NOMBREORGANIZACION"));
                    txtFechaEntregaProductoOC.setText("-");
                    txtDireccionesDespachoOC.setText("-");
                    txtContactoPagoOC.setText(rs.getString("C.NOMBRE"));
                    txtContactoOC.setText(rs.getString("C.NOMBRE"));
                    txtDireccionEnvioFacturaOC.setText("-");
                }
            }
        } catch (Exception ex) {
            // JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_txtRutCompradorOCKeyPressed

    private void txtConsultarOCKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConsultarOCKeyPressed
        txtCodigoOCOT.setText(txtConsultarOC.getText());
    }//GEN-LAST:event_txtConsultarOCKeyPressed

    private void cmbMetodoDespachoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMetodoDespachoItemStateChanged
        System.out.println("" + cmbMetodoDespacho.getSelectedItem().toString().substring(0, 2));
    }//GEN-LAST:event_cmbMetodoDespachoItemStateChanged

    private void btnNVParcializadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNVParcializadaActionPerformed
        /*
        try {
            int index = tblMP.getSelectedRow();
            String test1 = JOptionPane.showInputDialog("Ingrese c√≥digo / n√∫mero de gu√≠a de despacho");
            if (test1 == null || test1.equals(null)) {
                JOptionPane.showMessageDialog(null, "Debe ingresar un valor v√°lido");
            } else {
                tblMP.setValueAt(test1, index, 10);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: Debe seleccionar un producto o ingresar la informaci√≥n solicitada" + ex.getMessage());
        }
         */
        bultos.setVisible(true);
        int index = tblProductosOrdenCompra.getRowCount();

        DefaultTableModel modeloPendientes = (DefaultTableModel) tblProductosPendientes.getModel();
        Object[] row = new Object[14];

        for (int i = 0; i < index; i++) {
            row[0] = tblProductosOrdenCompra.getValueAt(i, 0).toString();
            row[1] = tblProductosOrdenCompra.getValueAt(i, 1).toString();
            row[2] = tblProductosOrdenCompra.getValueAt(i, 2).toString();
            row[3] = tblProductosOrdenCompra.getValueAt(i, 5).toString();
            row[4] = "-";
            row[5] = tblProductosOrdenCompra.getValueAt(i, 7).toString();
            row[6] = tblProductosOrdenCompra.getValueAt(i, 8).toString();
            row[7] = tblProductosOrdenCompra.getValueAt(i, 9).toString();

            modeloPendientes.addRow(row);
        }

    }//GEN-LAST:event_btnNVParcializadaActionPerformed

    private void btnGuardarOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarOrdenActionPerformed
        try {
            if (txtObservacionDespacho.getText().equals(null) || txtObservacionDespacho.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Observaci√≥n de despacho se encuentra vac√≠a.");
            } else {
                String msgConfirmacion = JOptionPane.showInputDialog("Ingrese C√≥digo de Autorizaci√≥n");
                String validar = msgConfirmacion;
                if (validar.equals(lblCodigo.getText())) {
                    int selectedRows = tblResumenParcializada.getRowCount();

                    int selectedRows2 = tblResumenParcializada.getRowCount();
                    for (int i = 0; i < selectedRows; i++) {
                        String queryDetalle = "INSERT INTO `acimabasededatos`.`detalleordentrabajo` (idOrden,codigoOrdenCompra,`codigoProducto`, `nombreProducto`, `cantidad`,`moneda`,"
                                + " `precioUnitario`, `descuento`, `cargos`, `valorTotal`) "
                                + " VALUES(?,?,?,?,?,?,?,?,?,?);";
                        PreparedStatement pstDetalle = cn.prepareStatement(queryDetalle);
                        pstDetalle.setString(1, tblResumenParcializada.getValueAt(i, 0).toString());
                        pstDetalle.setString(2, txtCodigoOCOT.getText());
                        pstDetalle.setString(3, tblResumenParcializada.getValueAt(i, 2).toString());
                        pstDetalle.setString(4, (tblResumenParcializada.getValueAt(i, 3).toString()));
                        pstDetalle.setString(5, (tblResumenParcializada.getValueAt(i, 4).toString()));
                        pstDetalle.setString(6, (tblResumenParcializada.getValueAt(i, 5).toString()));
                        pstDetalle.setString(7, (tblResumenParcializada.getValueAt(i, 6).toString()));
                        pstDetalle.setString(8, tblResumenParcializada.getValueAt(i, 7).toString());
                        pstDetalle.setString(9, tblResumenParcializada.getValueAt(i, 8).toString());
                        pstDetalle.setString(10, tblResumenParcializada.getValueAt(i, 9).toString());

                        int x2 = pstDetalle.executeUpdate();

                    }
                    JOptionPane.showMessageDialog(null, "Se ha ingresado la nota de venta para la Orden de Compra");
                    JOptionPane.showMessageDialog(null, "Nota de Venta almacenada");

                    String ruta = "";

                    JFileChooser dlg = new JFileChooser();
                    dlg.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

                    int option = dlg.showOpenDialog(this);

                    if (option == JFileChooser.APPROVE_OPTION) {
                        File f = dlg.getSelectedFile();
                        ruta = f.toString();
                    }

                    //Fecha
                    Date sistFecha = new Date();
                    SimpleDateFormat formato = new SimpleDateFormat("dd-MMM-YYYY");
                    //Crear PDF
                    try {
                        Document doc = new Document(PageSize.A4);

                        Date sistHora = new Date();
                        String pmAm = "hh:mm a";
                        SimpleDateFormat format = new SimpleDateFormat(pmAm);
                        Calendar hoy = Calendar.getInstance();
                        String hora = (String.format(format.format(sistHora), hoy));
                        hora = hora.replace(":", "-");
                        PdfWriter writer = PdfWriter.getInstance(doc, new FileOutputStream(ruta + "\\" + txtCodigoOCOT.getText() + "_Fecha_" + formato.format(sistFecha) + "_hora_" + hora + "_Nota_de_Venta_" + ".pdf"));

                        //Separador
                        PdfPTable myTable = new PdfPTable(1);
                        myTable.setWidthPercentage(100.0f);
                        PdfPCell myCell = new PdfPCell(new Paragraph(""));
                        myCell.setBorder(Rectangle.BOTTOM);
                        myTable.addCell(myCell);
                        myTable.setSpacingAfter(10f);
                        myTable.setSpacingBefore(10f);

                        doc.open();

                        //A√±adir la imagen
                        try {
                            //Establecer imagen y escala
                            Image logoAcima = Image.getInstance("src\\PlataformaVentas\\Imagenes\\acima-logo-200p.png");
                            logoAcima.scaleAbsolute(126, 67);
                            logoAcima.setAlignment(Paragraph.ALIGN_RIGHT);
                            //Establecer p√°rrafo
                            Paragraph nro = new Paragraph(txtProveedorOC.getText() + "\n"
                                    + txtrut.getText() + "\n"
                                    + "AV. 5 de abril 4454, Oficina 31, Estaci√≥n Central - Santiago de Chile \n"
                                    + "Venta de articulos al por menor \n"
                                    + "Fono: 232107900 \n"
                                    + "www.acima.cl", FontFactory
                                            .getFont(FontFactory.HELVETICA, 9, Font.NORMAL, null)
                            );
                            nro.setAlignment(Paragraph.ALIGN_JUSTIFIED);

                            //Crear Tabla
                            PdfPTable tableHeader = new PdfPTable(2);
                            tableHeader.setWidthPercentage(100);

                            PdfPCell cell1 = new PdfPCell(logoAcima, false);
                            cell1.setBorder(Rectangle.NO_BORDER);
                            cell1.setBackgroundColor(BaseColor.WHITE);
                            cell1.setHorizontalAlignment(com.itextpdf.text.Element.ALIGN_RIGHT);

                            PdfPCell cell2 = new PdfPCell(nro);
                            cell2.setBorder(Rectangle.NO_BORDER);
                            cell2.setBackgroundColor(BaseColor.WHITE);
                            cell2.setHorizontalAlignment(com.itextpdf.text.Element.ALIGN_JUSTIFIED);

                            tableHeader.addCell(cell2);
                            tableHeader.addCell(cell1);
                            doc.add(tableHeader);

                            doc.add(myTable);

                        } catch (BadElementException ex) {
                            Logger.getLogger(OrdenTrabajo.class
                                    .getName()).log(Level.SEVERE, null, ex);

                        } catch (IOException ex) {
                            Logger.getLogger(OrdenTrabajo.class
                                    .getName()).log(Level.SEVERE, null, ex);
                        }

                        Paragraph ordenCompra = new Paragraph("C√≥digo de Orden de Compra: " + txtCodigoOCOT.getText(), FontFactory.getFont(FontFactory.TIMES, 12, Font.BOLD, null));
                        ordenCompra.setAlignment(Paragraph.ALIGN_CENTER);
                        doc.add(ordenCompra);

                        doc.add(myTable);

                        Paragraph titulo = new Paragraph("Informaci√≥n del demandante", FontFactory.getFont(FontFactory.TIMES, 12, Font.BOLD, null));
                        doc.add(titulo);

                        PdfPTable tableDatos = new PdfPTable(2);
                        tableDatos.setWidthPercentage(100);
                        tableDatos.addCell(new Phrase("Rut del Demandante: " + txtRutCompradorOC.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos.addCell(new Phrase("Demandante: " + txtNombreDemandanteOC.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos.addCell(new Phrase("Direcci√≥n del Demandante: " + txtDireccionDemandanteOC.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos.addCell(new Phrase("Unidad de Compra: " + txtUnidadCompraCliente.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos.addCell(new Phrase("Tel√©fono del Demandante: " + txtTelefonoComprador.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos.addCell(new Phrase("Fecha de Env√≠o de Nota de OC: " + txtFechaEntregaProductoOC.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos.setSpacingBefore(15f);
                        tableDatos.setWidthPercentage(100);
                        Paragraph alineaDatos = new Paragraph();
                        alineaDatos.add(tableDatos);
                        doc.add(alineaDatos);

                        doc.add(myTable);

                        Paragraph titulo2 = new Paragraph("Informaci√≥n de la empresa", FontFactory.getFont(FontFactory.TIMES, 12, Font.BOLD, null));
                        doc.add(titulo2);

                        Paragraph proveedor = new Paragraph("Proveedor: " + txtProveedorOC.getText(), FontFactory.getFont(FontFactory.TIMES, 12, Font.NORMAL, null));
                        proveedor.setAlignment(Paragraph.ALIGN_LEFT);
                        doc.add(proveedor);

                        doc.add(myTable);

                        Paragraph titulo3 = new Paragraph("Informaci√≥n de orden", FontFactory.getFont(FontFactory.TIMES, 12, Font.NORMAL, null));
                        doc.add(titulo);

                        PdfPTable tableDatos2 = new PdfPTable(2);
                        tableDatos2.setWidthPercentage(100);
                        tableDatos2.addCell(new Phrase("Nombre de la Orden de Compra: " + txtNombreOrdenCompra.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos2.addCell(new Phrase("Metodo de Despacho: " + cmbMetodoDespacho.getSelectedItem().toString(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos2.addCell(new Phrase("Fecha de aceptaci√≥n: " + txtFechaEntregaProductoOC.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos2.addCell(new Phrase("Forma de Pago: " + cmbFormaPago.getSelectedItem().toString(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos2.addCell(new Phrase("Direcciones de despacho: " + txtDireccionesDespachoOC.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos2.addCell(new Phrase("Contacto de pago: " + txtContactoPagoOC.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos2.addCell(new Phrase("Direcciones de envio de factura: " + txtDireccionEnvioFacturaOC.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos2.addCell(new Phrase("Contacto de OC: " + txtContactoOC.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos2.addCell(new Phrase("Mail de Env√≠o de Factura: " + txtEmail.getText(), FontFactory.getFont(FontFactory.TIMES, 12)));
                        tableDatos2.setSpacingBefore(15f);
                        tableDatos2.setWidthPercentage(100);
                        Paragraph alineaDatos2 = new Paragraph();
                        alineaDatos2.add(tableDatos2);
                        doc.add(alineaDatos2);

                        // doc.setPageSize(PageSize.A4.rotate());
                        //doc.newPage();
                        Paragraph tablas = new Paragraph("Informaci√≥n de productos en la orden ", FontFactory.getFont(FontFactory.TIMES, 12, Font.BOLD, null));
                        doc.add(tablas);
                        PdfPTable pdfTable = new PdfPTable(10);
                        pdfTable.setSpacingBefore(15f);
                        pdfTable.setWidthPercentage(100);

                        PdfPCell cellP0 = new PdfPCell(new Phrase(tblProductosOrdenCompra.getModel().getColumnName(0), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                        cellP0.setUseBorderPadding(true);
                        // Setting cell's background color
                        cellP0.setBackgroundColor(BaseColor.ORANGE);

                        PdfPCell cellP1 = new PdfPCell(new Phrase(tblProductosOrdenCompra.getModel().getColumnName(1), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                        cellP1.setUseBorderPadding(true);
                        // Setting cell's background color
                        cellP1.setBackgroundColor(BaseColor.ORANGE);

                        PdfPCell cellP2 = new PdfPCell(new Phrase(tblProductosOrdenCompra.getModel().getColumnName(2), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                        cellP2.setUseBorderPadding(true);
                        // Setting cell's background color
                        cellP2.setBackgroundColor(BaseColor.ORANGE);

                        PdfPCell cellP3 = new PdfPCell(new Phrase(tblProductosOrdenCompra.getModel().getColumnName(3), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                        cellP3.setUseBorderPadding(true);
                        // Setting cell's background color
                        cellP3.setBackgroundColor(BaseColor.ORANGE);

                        PdfPCell cellP4 = new PdfPCell(new Phrase(tblProductosOrdenCompra.getModel().getColumnName(4), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                        cellP4.setUseBorderPadding(true);
                        // Setting cell's background color
                        cellP4.setBackgroundColor(BaseColor.ORANGE);

                        PdfPCell cellP5 = new PdfPCell(new Phrase(tblProductosOrdenCompra.getModel().getColumnName(5), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                        cellP5.setUseBorderPadding(true);
                        // Setting cell's background color
                        cellP5.setBackgroundColor(BaseColor.ORANGE);

                        PdfPCell cellP6 = new PdfPCell(new Phrase(tblProductosOrdenCompra.getModel().getColumnName(6), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                        cellP6.setUseBorderPadding(true);
                        // Setting cell's background color
                        cellP6.setBackgroundColor(BaseColor.ORANGE);

                        PdfPCell cellP7 = new PdfPCell(new Phrase(tblProductosOrdenCompra.getModel().getColumnName(7), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                        cellP7.setUseBorderPadding(true);
                        // Setting cell's background color
                        cellP7.setBackgroundColor(BaseColor.ORANGE);

                        PdfPCell cellP8 = new PdfPCell(new Phrase(tblProductosOrdenCompra.getModel().getColumnName(8), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                        cellP8.setUseBorderPadding(true);
                        // Setting cell's background color
                        cellP8.setBackgroundColor(BaseColor.ORANGE);

                        PdfPCell cellP9 = new PdfPCell(new Phrase(tblProductosOrdenCompra.getModel().getColumnName(9), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                        cellP9.setUseBorderPadding(true);
                        // Setting cell's background color
                        cellP9.setBackgroundColor(BaseColor.ORANGE);

                        pdfTable.addCell(cellP0);
                        pdfTable.addCell(cellP1);
                        pdfTable.addCell(cellP2);
                        pdfTable.addCell(cellP3);
                        pdfTable.addCell(cellP4);
                        pdfTable.addCell(cellP5);
                        pdfTable.addCell(cellP6);
                        pdfTable.addCell(cellP7);
                        pdfTable.addCell(cellP8);
                        pdfTable.addCell(cellP9);

                        for (int rows = 0; rows < tblProductosOrdenCompra.getRowCount(); rows++) {
                            pdfTable.addCell(new Phrase(tblProductosOrdenCompra.getModel().getValueAt(rows, 0).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable.addCell(new Phrase(tblProductosOrdenCompra.getModel().getValueAt(rows, 1).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable.addCell(new Phrase(tblProductosOrdenCompra.getModel().getValueAt(rows, 2).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable.addCell(new Phrase(tblProductosOrdenCompra.getModel().getValueAt(rows, 3).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable.addCell(new Phrase(tblProductosOrdenCompra.getModel().getValueAt(rows, 4).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable.addCell(new Phrase(tblProductosOrdenCompra.getModel().getValueAt(rows, 5).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable.addCell(new Phrase(tblProductosOrdenCompra.getModel().getValueAt(rows, 6).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable.addCell(new Phrase(tblProductosOrdenCompra.getModel().getValueAt(rows, 7).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable.addCell(new Phrase(tblProductosOrdenCompra.getModel().getValueAt(rows, 8).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable.addCell(new Phrase(tblProductosOrdenCompra.getModel().getValueAt(rows, 9).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                        }
                        pdfTable.setWidths(new int[]{1, 2, 1, 1, 1, 1, 1, 1, 1, 1});

                        doc.add(pdfTable);
                        DecimalFormat formatea = new DecimalFormat("###,###.##");
                        double neto_format = Double.parseDouble(txtNetoOC.getText().replace("$", "").replace(".", "").replace(",", "."));
                        double iva_format = Double.parseDouble(txtIVAOC.getText().replace("$", "").replace(".", "").replace(",", "."));
                        double total_format = Double.parseDouble(txtTotalOC.getText().replace("$", "").replace(".", "").replace(",", "."));

                        Paragraph neto = new Paragraph("Neto: $" + formatea.format(neto_format), FontFactory.getFont(FontFactory.TIMES, 12, Font.NORMAL, null));
                        neto.setAlignment(Paragraph.ALIGN_RIGHT);
                        Paragraph iva = new Paragraph("IVA: $" + formatea.format(iva_format), FontFactory.getFont(FontFactory.TIMES, 12, Font.NORMAL, null));
                        iva.setAlignment(Paragraph.ALIGN_RIGHT);
                        Paragraph total = new Paragraph("Total: $" + formatea.format(total_format), FontFactory.getFont(FontFactory.TIMES, 12, Font.NORMAL, null));
                        total.setAlignment(Paragraph.ALIGN_RIGHT);
                        doc.add(neto);
                        doc.add(iva);
                        doc.add(total);

                        doc.add(myTable);

                        //doc.newPage();
                        //Para las notas de venta
                        Paragraph tablas2 = new Paragraph("Informaci√≥n de productos en notas de venta ", FontFactory.getFont(FontFactory.TIMES, 12, Font.BOLD, null));
                        doc.add(tablas2);
                        PdfPTable pdfTable2 = new PdfPTable(10);
                        pdfTable2.setSpacingBefore(15f);
                        pdfTable2.setWidthPercentage(100);

                        PdfPCell cell0 = new PdfPCell(new Phrase(tblResumenParcializada.getColumnName(0), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                        cell0.setUseBorderPadding(true);
                        // Setting cell's background color
                        cell0.setBackgroundColor(BaseColor.ORANGE);

                        PdfPCell cell1 = new PdfPCell(new Phrase(tblResumenParcializada.getColumnName(1), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                        cell1.setUseBorderPadding(true);
                        // Setting cell's background color
                        cell1.setBackgroundColor(BaseColor.ORANGE);

                        PdfPCell cell2 = new PdfPCell(new Phrase(tblResumenParcializada.getColumnName(2), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                        cell2.setUseBorderPadding(true);
                        // Setting cell's background color
                        cell2.setBackgroundColor(BaseColor.ORANGE);

                        PdfPCell cell3 = new PdfPCell(new Phrase(tblResumenParcializada.getColumnName(3), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                        cell3.setUseBorderPadding(true);
                        // Setting cell's background color
                        cell3.setBackgroundColor(BaseColor.ORANGE);

                        PdfPCell cell4 = new PdfPCell(new Phrase(tblResumenParcializada.getColumnName(4), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                        cell4.setUseBorderPadding(true);
                        // Setting cell's background color
                        cell4.setBackgroundColor(BaseColor.ORANGE);

                        PdfPCell cell5 = new PdfPCell(new Phrase(tblResumenParcializada.getColumnName(5), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                        cell5.setUseBorderPadding(true);
                        // Setting cell's background color
                        cell5.setBackgroundColor(BaseColor.ORANGE);

                        PdfPCell cell6 = new PdfPCell(new Phrase(tblResumenParcializada.getColumnName(6), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                        cell6.setUseBorderPadding(true);
                        // Setting cell's background color
                        cell6.setBackgroundColor(BaseColor.ORANGE);

                        PdfPCell cell7 = new PdfPCell(new Phrase(tblResumenParcializada.getColumnName(7), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                        cell7.setUseBorderPadding(true);
                        // Setting cell's background color
                        cell7.setBackgroundColor(BaseColor.ORANGE);

                        PdfPCell cell8 = new PdfPCell(new Phrase(tblResumenParcializada.getColumnName(8), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                        cell8.setUseBorderPadding(true);
                        // Setting cell's background color
                        cell8.setBackgroundColor(BaseColor.ORANGE);

                        PdfPCell cell9 = new PdfPCell(new Phrase(tblResumenParcializada.getColumnName(9), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                        cell9.setUseBorderPadding(true);
                        // Setting cell's background color
                        cell9.setBackgroundColor(BaseColor.ORANGE);

                        pdfTable2.addCell(cell0);
                        pdfTable2.addCell(cell1);
                        pdfTable2.addCell(cell2);
                        pdfTable2.addCell(cell3);
                        pdfTable2.addCell(cell4);
                        pdfTable2.addCell(cell5);
                        pdfTable2.addCell(cell6);
                        pdfTable2.addCell(cell7);
                        pdfTable2.addCell(cell8);
                        pdfTable2.addCell(cell9);

                        for (int rows = 0; rows < tblResumenParcializada.getRowCount(); rows++) {
                            pdfTable2.addCell(new Phrase(tblResumenParcializada.getModel().getValueAt(rows, 0).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable2.addCell(new Phrase(tblResumenParcializada.getModel().getValueAt(rows, 1).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable2.addCell(new Phrase(tblResumenParcializada.getModel().getValueAt(rows, 2).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable2.addCell(new Phrase(tblResumenParcializada.getModel().getValueAt(rows, 3).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable2.addCell(new Phrase(tblResumenParcializada.getModel().getValueAt(rows, 4).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable2.addCell(new Phrase(tblResumenParcializada.getModel().getValueAt(rows, 5).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable2.addCell(new Phrase(tblResumenParcializada.getModel().getValueAt(rows, 6).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable2.addCell(new Phrase(tblResumenParcializada.getModel().getValueAt(rows, 7).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable2.addCell(new Phrase(tblResumenParcializada.getModel().getValueAt(rows, 8).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));
                            pdfTable2.addCell(new Phrase(tblResumenParcializada.getModel().getValueAt(rows, 9).toString(), FontFactory.getFont(FontFactory.HELVETICA, 8)));

                        }

                        pdfTable2.setWidths(new int[]{1, 1, 1, 2, 1, 1, 1, 1, 1, 1});

                        doc.add(pdfTable2);

                        doc.add(myTable);
                        //Iconos
                        try {
                            PdfPTable table = new PdfPTable(2);
                            table.setWidths(new int[]{1, 12});
                            table.getDefaultCell().setBorder(Rectangle.NO_BORDER);
                            //D:\Plataforma Operaciones\src\imagenes\465892689e(1).png
                            Image img1 = Image.getInstance("src\\PlataformaVentas\\Imagenes\\phone-icon-11-64.png");
                            Image img2 = Image.getInstance("src\\PlataformaVentas\\Imagenes\\mail-64.png");

                            PdfPCell imagen1 = new PdfPCell(img1, false);
                            imagen1.setBorder(Rectangle.NO_BORDER);
                            imagen1.setBackgroundColor(BaseColor.WHITE);
                            imagen1.setHorizontalAlignment(com.itextpdf.text.Element.ALIGN_RIGHT);

                            PdfPCell imagen2 = new PdfPCell(img2, false);
                            imagen2.setBorder(Rectangle.NO_BORDER);
                            imagen2.setBackgroundColor(BaseColor.WHITE);
                            imagen2.setHorizontalAlignment(com.itextpdf.text.Element.ALIGN_RIGHT);

                            table.addCell(imagen1);
                            table.addCell(new Phrase("Central telef√≥nica: +56-232 107 900", FontFactory.getFont(FontFactory.TIMES, 12)));
                            table.addCell(imagen2);
                            table.addCell(new Phrase("ventas@acima.cl - comercial@acima.cl - gerencia@acima.cl", FontFactory.getFont(FontFactory.TIMES, 12)));
                            Paragraph tableFooter = new Paragraph();
                            tableFooter.add(table);
                            tableFooter.setSpacingBefore(15f);
                            tableFooter.setSpacingBefore(15f);
                            tableFooter.setAlignment(Paragraph.ALIGN_RIGHT);
                            doc.add(tableFooter);

                            doc.close();
                            JOptionPane.showMessageDialog(null, "PDF Generado Correctamente");

                        } catch (BadElementException | IOException ex) {
                            Logger.getLogger(OrdenTrabajo.class
                                    .getName()).log(Level.SEVERE, null, ex);

                        }
                    } catch (DocumentException ex) {
                        JOptionPane.showMessageDialog(null, "Ha ocurrido un error: sss" + ex.getMessage());
                    }

                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "Ingrese el c√≥digo de autorizaci√≥n correcto");
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha Ocurrido un error: " + ex);
        }
    }//GEN-LAST:event_btnGuardarOrdenActionPerformed

    private void tblProductosPendientesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblProductosPendientesKeyPressed

    }//GEN-LAST:event_tblProductosPendientesKeyPressed

    private void txtQtyInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtQtyInputMethodTextChanged

    }//GEN-LAST:event_txtQtyInputMethodTextChanged

    private void txtQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQtyActionPerformed

    private void txtQtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQtyKeyPressed

    }//GEN-LAST:event_txtQtyKeyPressed

    private void txtQtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQtyKeyReleased

    }//GEN-LAST:event_txtQtyKeyReleased

    private void btnAgregarNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarNVActionPerformed
        try {
            //Se clona el modelo de productos pendientes
            TableModel productosSinNV = tblProductosPendientes.getModel();
            //Se saca la fila seleccionada
            int indexs[] = tblProductosPendientes.getSelectedRows();
            //Se determina la variable de fila
            Object[] row = new Object[14];
            //Este es el modelo al que se le pasar√°n datos
            DefaultTableModel modeloNuevo = (DefaultTableModel) tblPaso.getModel();
            //Se resta la cantidad de productos cuando se asignan
            TableModel modelo = tblProductosPendientes.getModel();

            int indice = 0;
            indice = tblProductosPendientes.getSelectedRow();

            if (tblProductosPendientes.getValueAt(indice, 4).toString().equals("-")) {
                JOptionPane.showMessageDialog(null, "El precio no puede ser nulo");
            } else {

                //Variable que resta
                int cantidadInicial = 0;
                cantidadInicial = Integer.parseInt(tblProductosPendientes.getValueAt(indice, 2).toString());
                System.out.println(cantidadInicial);

                if (Integer.parseInt(txtQty.getText()) < 0) {
                    JOptionPane.showMessageDialog(null, "No debe ser n√∫mero negativo");
                } else {
                    if (Integer.parseInt(txtQty.getText()) <= cantidadInicial && Integer.parseInt(txtQty.getText()) != 0) {
                        //Ciclo que recorre las filas seleccionadas
                        for (int i = 0; i < indexs.length; i++) {

                            int cantidad = Integer.parseInt(txtQty.getText());

                            if (cantidad <= cantidadInicial) {
                                row[0] = "No se ha asignado una nota de venta";
                                row[1] = txtCodigoOCOT.getText();
                                row[2] = productosSinNV.getValueAt(indexs[i], 0);
                                row[3] = productosSinNV.getValueAt(indexs[i], 1);
                                row[4] = cantidad;
                                row[5] = productosSinNV.getValueAt(indexs[i], 3);
                                row[6] = productosSinNV.getValueAt(indexs[i], 4);
                                row[7] = productosSinNV.getValueAt(indexs[i], 5);
                                row[8] = productosSinNV.getValueAt(indexs[i], 6);
                                row[9] = productosSinNV.getValueAt(indexs[i], 7);

                                modeloNuevo.addRow(row);

                                modelo.setValueAt((cantidadInicial - cantidad), indexs[i], 2);
                            }
                        }
                        txtQty.setText("");
                        tblProductosPendientes.clearSelection();
                        tblPaso.clearSelection();

                        int sumCantidad = 0;
                        for (int i = 0; i < tblProductosPendientes.getRowCount(); i++) {
                            sumCantidad = sumCantidad + Integer.parseInt(tblProductosPendientes.getValueAt(i, 2).toString());
                        }

                        for (int x = 0; x < tblPaso.getRowCount(); x++) {
                            int cantidad = Integer.parseInt(tblPaso.getValueAt(x, 4).toString());
                            int precioUnitario = Integer.parseInt(tblPaso.getValueAt(x, 6).toString());
                            int descuento = Integer.parseInt(tblPaso.getValueAt(x, 7).toString());
                            int cargos = Integer.parseInt(tblPaso.getValueAt(x, 8).toString());

                            int calculo = (precioUnitario * cantidad) + descuento + cargos;
                            tblPaso.setValueAt(calculo, x, 9);
                        }

                        if (sumCantidad == 0) {
                            JOptionPane.showMessageDialog(null, "Ya se lleg√≥ al l√≠mite de la cantidad seleccionada de productos");
                        }

                    } else if (Integer.parseInt(txtQty.getText()) < 0) {
                        JOptionPane.showMessageDialog(null, "Debe introducir una cantidad menor o igual a la mostrada en la tabla");
                    } else {
                        JOptionPane.showMessageDialog(null, "Debe introducir una cantidad menor o igual a la mostrada en la tabla");
                    }
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: Debe seleccionar un producto..." + ex);
        }
    }//GEN-LAST:event_btnAgregarNVActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        int cantidadFilas = tblPaso.getRowCount();
        if (cantidadFilas == 0) {

            int index = tblProductosPendientes.getRowCount();
            int index2 = tblProdsAgregadosNV.getRowCount();

            boolean check = false;
            int cuenta = 0;

            for (int i = 0; i < index; i++) {
                if (tblProductosPendientes.getValueAt(i, 2).toString().equals("0")) {
                    cuenta = cuenta + 1;
                }
            }

            if (cuenta == index) {
                System.out.println("Todo Verdadero");
                // DefaultTableModel modelo = (DefaultTableModel) tblProdsAgregadosNV.getModel();
                //tblResumenParcializada.setModel(modelo);
                bultos.dispose();

                /*
                DefaultTableModel modelo_paso = (DefaultTableModel) tblProductosPendientes.getModel();
                for (int i = index - 1; i >= 0; i--) {
                    modelo_paso.removeRow(i);
                }
                 */
                DefaultTableModel modeloResumen = (DefaultTableModel) tblResumenParcializada.getModel();
                //Se determina la variable de fila
                Object[] row2 = new Object[14];
                //cantidad de filas en tabla paso
                int filas = tblProdsAgregadosNV.getRowCount();
                //Ciclo que recorre las filas de la tabla paso
                for (int p = 0; p < filas; p++) {
                    row2[0] = tblProdsAgregadosNV.getValueAt(p, 0).toString();
                    row2[1] = tblProdsAgregadosNV.getValueAt(p, 1).toString();
                    row2[2] = tblProdsAgregadosNV.getValueAt(p, 2).toString();
                    row2[3] = tblProdsAgregadosNV.getValueAt(p, 3).toString();
                    row2[4] = tblProdsAgregadosNV.getValueAt(p, 4).toString();
                    row2[5] = tblProdsAgregadosNV.getValueAt(p, 5).toString();
                    row2[6] = tblProdsAgregadosNV.getValueAt(p, 6).toString();
                    row2[7] = tblProdsAgregadosNV.getValueAt(p, 7).toString();
                    row2[8] = tblProdsAgregadosNV.getValueAt(p, 8).toString();
                    row2[9] = tblProdsAgregadosNV.getValueAt(p, 9).toString();

                    modeloResumen.addRow(row2);
                }

                DefaultTableModel modelo_Agregados = (DefaultTableModel) tblProdsAgregadosNV.getModel();
                for (int i = index2 - 1; i >= 0; i--) {
                    modelo_Agregados.removeRow(i);
                }
                int index_borrar = tblPaso.getRowCount();
                DefaultTableModel modelo_paso = (DefaultTableModel) tblPaso.getModel();
                for (int i = index_borrar - 1; i >= 0; i--) {
                    modelo_paso.removeRow(i);
                }

                int index_productosPendientes = tblProductosPendientes.getRowCount();
                DefaultTableModel modelo_pendientes = (DefaultTableModel) tblProductosPendientes.getModel();
                for (int i = index_productosPendientes - 1; i >= 0; i--) {
                    modelo_pendientes.removeRow(i);
                }

                modelo_Agregados.setRowCount(0);

            } else {
                JOptionPane.showMessageDialog(null, "A√∫n quedan productos pendientes");
            }
        } else {
            JOptionPane.showMessageDialog(null, "A√∫n quedan productos pendientes");
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "¬øConfirma los productos para la nota de venta actual?", "Alerta", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION) {
                //Ingresar la orden como nota de venta gen√©rica

                Object[] options = {"Aceptar"};
                JPanel panelAlto = new JPanel();
                JLabel lblAlto = new JLabel("Confirme direcci√≥n de despacho: ");
                JTextField txtAlto = new JTextField(10);
                txtAlto.setText(txtDireccionesDespachoOC.getText());
                panelAlto.add(lblAlto);
                panelAlto.add(txtAlto);
                int selectedOptionAlto = JOptionPane.showOptionDialog(null, panelAlto, "Direcciones de despacho", JOptionPane.NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                String text = "";
                if (selectedOptionAlto == 0) {
                    text = txtAlto.getText();
                }

                String query2 = "INSERT INTO `acimabasededatos`.`ordentrabajo` ("
                        + "`codigoOrdenCompra`,"
                        + "`nombre_proveedor` ,"
                        + "`rutCliente`,"
                        + " `DireccionDemandante`,"
                        + " `Telefono`, "
                        + "`Demandante`,"
                        + " `UnidadCompra`, "
                        + "`fechaEnvioOC`,"
                        + " `codigoEstado`, "
                        + "`nombreOrdenCompra`,"
                        + " `fechaAceptacion`,"
                        + " `direccionesDespacho`,"
                        + " `direccionEnvioFactura`, "
                        + "`tipoDespacho`,"
                        + " `contactoPago`, "
                        + "`formaPago`, "
                        + "`contactoOC`, "
                        + "`emailEnvioFactura`,"
                        + "`neto`,"
                        + " `dcto`,"
                        + " `subtotal`, "
                        + "`iva`,"
                        + " `impuestoEspecifico`,"
                        + " `total`,observacion,observacion_despacho,"
                        + "`codigo_autorizacion`)"
                        + "VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                PreparedStatement pst2;

                pst2 = cn.prepareStatement(query2);

                pst2.setString(1, txtCodigoOCOT.getText().toUpperCase());
                pst2.setString(2, txtProveedorOC.getText());
                pst2.setString(3, txtRutCompradorOC.getText());
                pst2.setString(4, txtDireccionDemandanteOC.getText());
                pst2.setString(5, txtTelefonoComprador.getText());
                pst2.setString(6, txtNombreDemandanteOC.getText());
                pst2.setString(7, txtUnidadCompraCliente.getText());
                pst2.setString(8, txtFechaEntregaProductoOC.getText());
                pst2.setString(9, "-");
                pst2.setString(10, txtNombreOrdenCompra.getText());
                pst2.setString(11, txtFechaEntregaProductoOC.getText());
                pst2.setString(12, txtDireccionesDespachoOC.getText());
                pst2.setString(13, txtDireccionEnvioFacturaOC.getText());
                pst2.setString(14, cmbMetodoDespacho.getSelectedItem().toString().substring(0, 2));
                pst2.setString(15, txtContactoPagoOC.getText());
                pst2.setString(16, cmbFormaPago.getSelectedItem().toString().substring(0, 2));
                pst2.setString(17, txtContactoOC.getText());
                pst2.setString(18, txtEmail.getText());
                pst2.setString(19, txtNetoOC.getText());
                pst2.setString(20, txtDCTOOC.getText());
                pst2.setString(21, txtSubtotalOC.getText());
                pst2.setString(22, txtIVAOC.getText());
                pst2.setString(23, txtImpuestoEspecifico.getText());
                pst2.setString(24, txtTotalOC.getText());
                pst2.setString(25, txtObservacionDespacho.getText());
                pst2.setString(26, text);
                pst2.setInt(27, Integer.parseInt(lblCodigo.getText()));
                int x1 = pst2.executeUpdate();

                //Actualizar el idOrden
                String queryUpNV = "update ordentrabajo set idOrden = idOrdenTrabajo;";
                PreparedStatement pstUp1 = cn.prepareStatement(queryUpNV);
                int x3 = pstUp1.executeUpdate();

                //Sacar el maximo numero de orden
                int max = 0;

                String queryMaxNV = "Select MAX(idOrden) from ordentrabajo;";
                PreparedStatement pstNV = cn.prepareStatement(queryMaxNV);
                ResultSet rsNV = pstNV.executeQuery();
                while (rsNV.next()) {
                    max = rsNV.getInt(1);
                }

                int filas = tblPaso.getRowCount();
                for (int x = 0; x < filas; x++) {
                    tblPaso.setValueAt(max, x, 0);
                }

                //Se determina la variable de fila
                Object[] row2 = new Object[14];
                //Nuevamente el modelo de paso
                DefaultTableModel modeloPaso = (DefaultTableModel) tblPaso.getModel();
                DefaultTableModel modeloProds = (DefaultTableModel) tblProdsAgregadosNV.getModel();

                //cantidad de filas en tabla paso
                int filasPaso = tblPaso.getRowCount();
                //Ciclo que recorre las filas de la tabla paso
                for (int p = 0; p < filasPaso; p++) {
                    row2[0] = modeloPaso.getValueAt(p, 0);
                    row2[1] = modeloPaso.getValueAt(p, 1);
                    row2[2] = modeloPaso.getValueAt(p, 2);
                    row2[3] = modeloPaso.getValueAt(p, 3);
                    row2[4] = modeloPaso.getValueAt(p, 4);
                    row2[5] = modeloPaso.getValueAt(p, 5);
                    row2[6] = modeloPaso.getValueAt(p, 6);
                    row2[7] = modeloPaso.getValueAt(p, 7);
                    row2[8] = modeloPaso.getValueAt(p, 8);
                    row2[9] = modeloPaso.getValueAt(p, 9);

                    modeloProds.addRow(row2);
                }

                int index_borrar = tblPaso.getRowCount();
                DefaultTableModel modelo_paso = (DefaultTableModel) tblPaso.getModel();
                for (int i = index_borrar - 1; i >= 0; i--) {
                    modelo_paso.removeRow(i);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Operaci√≥n cancelada");
            }
        } catch (SQLException ex) {
            Logger.getLogger(ConsultaMP.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton6ActionPerformed

    private void btnBorrarNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarNVActionPerformed
        try {
            DefaultTableModel model = (DefaultTableModel) tblPaso.getModel();
            int indexNV = tblPaso.getSelectedRow();
            int cantidad = Integer.parseInt(tblPaso.getValueAt(indexNV, 4).toString());
            int indexOC = tblProductosPendientes.getSelectedRow();
            int cantidadOC = Integer.parseInt(tblProductosPendientes.getValueAt(indexOC, 2).toString());
            cantidadOC = cantidadOC + cantidad;
            model.removeRow(indexNV);
            tblProductosPendientes.setValueAt(cantidadOC, indexOC, 2);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnBorrarNVActionPerformed

    private void btnCalcularValActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularValActionPerformed
        try {
            int index = tblProductosPendientes.getSelectedRow();
            int cantidad = Integer.parseInt(tblProductosPendientes.getValueAt(index, 2).toString());

            String precioUnitario = JOptionPane.showInputDialog("Ingrese precio");

            int precioUnitarioFormat = Integer.parseInt(precioUnitario);
            int descuento = Integer.parseInt(tblProductosPendientes.getValueAt(index, 5).toString());
            int cargos = Integer.parseInt(tblProductosPendientes.getValueAt(index, 6).toString());
            int valorTotal = Integer.parseInt(tblProductosPendientes.getValueAt(index, 7).toString());

            int total = ((precioUnitarioFormat + cargos) - descuento) * cantidad;

            tblProductosPendientes.setValueAt(cantidad, index, 2);
            tblProductosPendientes.setValueAt(precioUnitario, index, 4);
            tblProductosPendientes.setValueAt(descuento, index, 5);
            tblProductosPendientes.setValueAt(cargos, index, 6);
            tblProductosPendientes.setValueAt(total, index, 7);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnCalcularValActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        int index2 = tblProdsAgregadosNV.getRowCount();
        DefaultTableModel modelo_Agregados = (DefaultTableModel) tblProdsAgregadosNV.getModel();
        for (int i = index2 - 1; i >= 0; i--) {
            modelo_Agregados.removeRow(i);
        }
        int index_borrar = tblPaso.getRowCount();
        DefaultTableModel modelo_paso = (DefaultTableModel) tblPaso.getModel();
        for (int i = index_borrar - 1; i >= 0; i--) {
            modelo_paso.removeRow(i);
        }

        int index_productosPendientes = tblProductosPendientes.getRowCount();
        DefaultTableModel modelo_pendientes = (DefaultTableModel) tblProductosPendientes.getModel();
        for (int i = index_productosPendientes - 1; i >= 0; i--) {
            modelo_pendientes.removeRow(i);
        }
        bultos.dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void txtNombreProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreProductoActionPerformed

    }//GEN-LAST:event_txtNombreProductoActionPerformed

    private void txtNombreProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreProductoKeyPressed

    }//GEN-LAST:event_txtNombreProductoKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            String queryProducto = "Select inv.idProducto as 'ID producto', inv.SKU, inv.categoria as 'Categor√≠a', inv.nombreProducto as 'Producto',\n"
                    + "inv.descripcion as 'Descripci√≥n' ,inv.precioVenta as 'Precio Venta',inv.StatusProducto as 'Estado', inv.stock as 'Stock en la bodega'\n"
                    + "FROM inventario inv where inv.nombreProducto RLIKE ?;";
            String param = txtNombreProducto.getText();
            PreparedStatement pstProducto = cn.prepareStatement(queryProducto);
            pstProducto.setString(1, param);
            ResultSet rsProducto = pstProducto.executeQuery();
            tblAgregarProdOT.setModel(DbUtils.resultSetToTableModel(rsProducto));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtIDProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDProductoKeyPressed

    }//GEN-LAST:event_txtIDProductoKeyPressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            String queryProducto = "Select inv.idProducto as 'ID producto', inv.SKU, inv.categoria as 'Categor√≠a', inv.nombreProducto as 'Producto',\n"
                    + "inv.descripcion as 'Descripci√≥n' ,inv.precioVenta as 'Precio Venta',inv.StatusProducto as 'Estado', inv.stock as 'Stock en la bodega'\n"
                    + "FROM inventario inv WHERE inv.idProducto RLIKE ?;";
            String param = txtIDProducto.getText();
            PreparedStatement pstProducto = cn.prepareStatement(queryProducto);
            pstProducto.setInt(1, Integer.parseInt(param));
            ResultSet rsProducto = pstProducto.executeQuery();
            tblAgregarProdOT.setModel(DbUtils.resultSetToTableModel(rsProducto));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtSKUKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSKUKeyPressed

    }//GEN-LAST:event_txtSKUKeyPressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            String queryProducto = "Select inv.idProducto as 'ID producto', inv.SKU, inv.categoria as 'Categor√≠a', inv.nombreProducto as 'Producto',\n"
                    + "inv.descripcion as 'Descripci√≥n' ,inv.precioVenta as 'Precio Venta',inv.StatusProducto as 'Estado', inv.stock as 'Stock en la bodega'\n"
                    + "FROM inventario inv WHERE inv.SKU RLIKE ?;";
            String param = txtSKU.getText();
            PreparedStatement pstProducto = cn.prepareStatement(queryProducto);
            pstProducto.setString(1, param);
            ResultSet rsProducto = pstProducto.executeQuery();
            tblAgregarProdOT.setModel(DbUtils.resultSetToTableModel(rsProducto));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void tblAgregarProdOTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAgregarProdOTMouseClicked
        btnCalcularValores.setEnabled(false);
    }//GEN-LAST:event_tblAgregarProdOTMouseClicked

    private void tblProdaddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProdaddMouseClicked
        btnCalcularValores.setEnabled(true);
    }//GEN-LAST:event_tblProdaddMouseClicked

    private void tblProdaddKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblProdaddKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tblProdaddKeyPressed

    private void jTabbedPane14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane14MouseClicked
        if (jTabbedPane14.getSelectedIndex() == 0) {
            btnBorrarProducto1.setEnabled(false);
            btnAgregarProdOT.setEnabled(true);
        } else {
            btnAgregarProdOT.setEnabled(false);
            btnBorrarProducto1.setEnabled(true);
        }
    }//GEN-LAST:event_jTabbedPane14MouseClicked

    private void cmbMonedaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMonedaItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbMonedaItemStateChanged

    private void btnConfirmarVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarVolverActionPerformed

        DefaultTableModel cotizacion = (DefaultTableModel) tblProdadd.getModel();
        int indexs = tblProdadd.getRowCount();

        Object[] row = new Object[15];

        DefaultTableModel modeloNuevo = (DefaultTableModel) tblProductosOrdenCompra.getModel();

        for (int i = 0; i < indexs; i++) {
            row[0] = cotizacion.getValueAt(i, 0);
            row[1] = cotizacion.getValueAt(i, 1);
            row[2] = cotizacion.getValueAt(i, 3);
            row[3] = cotizacion.getValueAt(i, 4);
            row[4] = cotizacion.getValueAt(i, 5);
            row[5] = cotizacion.getValueAt(i, 6);
            row[6] = cotizacion.getValueAt(i, 7);
            row[7] = cotizacion.getValueAt(i, 8);
            row[8] = cotizacion.getValueAt(i, 9);
            row[9] = cotizacion.getValueAt(i, 10);
            modeloNuevo.addRow(row);

        }

        cotizacion.setRowCount(0);
        AgregarProductoOT.dispose();
        cmbMoneda.setSelectedIndex(0);
        this.setVisible(true);
        btnCalculoTotales.doClick();
    }//GEN-LAST:event_btnConfirmarVolverActionPerformed

    private void btnCalcularValoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularValoresActionPerformed
        try {

            DefaultTableModel modelo = (DefaultTableModel) tblProdadd.getModel();
            int selectedRows = tblProdadd.getSelectedRow();
            String idProducto = "";
            String nombreProducto = "";
            String especComprador = txtEspecificacionComprador.getText();
            String especProveedor = txtEspecificacionProveedor.getText();
            String cantidad = txtCantidad.getText();
            String moneda = cmbMoneda.getSelectedItem().toString();

            //El calculo de d√≥lares ser√° solo para HW y SW
            if (moneda.equals("CLP")) {

                System.out.println(moneda);
                String descuento = txtDescuento.getText();
                String cargos = txtCargos1.getText();
                int descuentoTabla = Integer.parseInt(descuento);
                int cantidadProd = Integer.parseInt(cantidad);
                int precioUnitarioProd = 0;
                int precioUnitCalculo = 0;
                int cantidadCalculo = 0;
                int descuentoCalculo = 0;
                int cargosSinCalculo = 0;
                int cargosCalculo = 0;
                int totalCalculo = 0;
                int sumNeto = 0;
                int sumDescuento = 0;
                int sumCargoTotal = 0;
                int sumValorTotal = 0;
                int selectedRow[] = tblProdadd.getSelectedRows();
                for (int i : selectedRow) {

                    idProducto = tblProdadd.getValueAt(i, 0).toString();
                    nombreProducto = tblProdadd.getValueAt(i, 1).toString();
                    cantidadProd = Integer.parseInt(cantidad);
                    //Sacar el valor del precio unitario
                    precioUnitarioProd = Integer.parseInt(tblProdadd.getValueAt(i, 7).toString());
                    precioUnitarioProd = precioUnitarioProd * cantidadProd;

                    cargosSinCalculo = Integer.parseInt(cargos);
                    cargosCalculo = Integer.parseInt(cargos);
                    cargosCalculo = precioUnitarioProd + cargosCalculo;
                    totalCalculo = cargosCalculo - Integer.parseInt(descuento);

                    tblProdadd.setValueAt(idProducto, i, 0);
                    tblProdadd.setValueAt(nombreProducto, i, 1);
                    tblProdadd.setValueAt(cantidad, i, 3);
                    tblProdadd.setValueAt(especComprador, i, 4);
                    tblProdadd.setValueAt(especProveedor, i, 5);
                    tblProdadd.setValueAt(moneda, i, 6);

                    String cargosSinCalculo_string = java.text.NumberFormat.getCurrencyInstance().format(cargosSinCalculo);
                    String descuentoTabla_string = java.text.NumberFormat.getCurrencyInstance().format(descuentoTabla);
                    String totalCalculo_string = java.text.NumberFormat.getCurrencyInstance().format(totalCalculo);
                    tblProdadd.setValueAt(cargosSinCalculo, i, 8);
                    tblProdadd.setValueAt(descuentoTabla, i, 9);
                    tblProdadd.setValueAt(totalCalculo, i, 10);
                }
            } else if (moneda.equals("USD")) {

                NumberFormat nF = NumberFormat.getCurrencyInstance(Locale.US);

                System.out.println(moneda);
                String descuento = txtDescuento.getText();
                String cargos = txtCargos1.getText();
                double descuentoTabla = Double.parseDouble(descuento);
                double cantidadProd = Double.parseDouble(cantidad);
                double precioUnitarioProd = 0;
                double precioUnitCalculo = 0;
                double cantidadCalculo = 0;
                double descuentoCalculo = 0;
                double cargosSinCalculo = 0;
                double cargosCalculo = 0;
                double totalCalculo = 0;
                double sumNeto = 0;
                double sumDescuento = 0;
                double sumCargoTotal = 0;
                double sumValorTotal = 0;
                int selectedRow[] = tblProdadd.getSelectedRows();
                for (int i : selectedRow) {

                    idProducto = tblProdadd.getValueAt(i, 0).toString();
                    nombreProducto = tblProdadd.getValueAt(i, 1).toString();
                    cantidadProd = Double.parseDouble(cantidad);
                    //Sacar el valor del precio unitario
                    precioUnitarioProd = Double.parseDouble(tblProdadd.getValueAt(i, 7).toString());
                    precioUnitarioProd = precioUnitarioProd * cantidadProd;

                    cargosSinCalculo = Double.parseDouble(cargos);
                    cargosCalculo = Double.parseDouble(cargos);
                    cargosCalculo = precioUnitarioProd + cargosCalculo;
                    totalCalculo = cargosCalculo - Double.parseDouble(descuento);

                    tblProdadd.setValueAt(idProducto, i, 0);
                    tblProdadd.setValueAt(nombreProducto, i, 1);
                    tblProdadd.setValueAt(cantidad, i, 3);
                    tblProdadd.setValueAt(especComprador, i, 4);
                    tblProdadd.setValueAt(especProveedor, i, 5);
                    tblProdadd.setValueAt(moneda, i, 6);
                    tblProdadd.setValueAt(new DecimalFormat("#,##0.00").format(cargosSinCalculo), i, 8);
                    tblProdadd.setValueAt(new DecimalFormat("#,##0.00").format(descuentoTabla), i, 9);
                    tblProdadd.setValueAt(new DecimalFormat("#,##0.00").format(totalCalculo), i, 10);

                }
            }

            txtEspecificacionComprador.setText("");
            txtEspecificacionProveedor.setText("");
            txtCantidad.setText("");
            txtCargos1.setText("");
            txtDescuento.setText("");

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage() + " debe ingresar la informaci√≥n requerida de los productos");
        }
    }//GEN-LAST:event_btnCalcularValoresActionPerformed

    private void btnBorrarProducto1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarProducto1ActionPerformed
        DefaultTableModel modeloTabla = (DefaultTableModel) tblProdadd.getModel();
        // Se obtiene el numero de columna seleccionado
        try {
            int seleccion = tblProdadd.getSelectedRow();
            //Se borra
            modeloTabla.removeRow(seleccion);
            if (tblProdadd.getRowCount() == 0) {
                btnBorrarProducto1.setEnabled(false);
            }
            JOptionPane.showMessageDialog(null, "Producto borrado de Selecci√≥n");
            btnBorrarProducto1.setEnabled(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnBorrarProducto1ActionPerformed

    private void btnAgregarProdOTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarProdOTActionPerformed
        try {
            TableModel cotizacion = tblAgregarProdOT.getModel();
            int indexs[] = tblAgregarProdOT.getSelectedRows();
            Object[] row = new Object[14];
            DefaultTableModel modeloNuevo = (DefaultTableModel) tblProdadd.getModel();
            TableModel modelo = tblAgregarProdOT.getModel();
            int selectedRows[] = tblAgregarProdOT.getSelectedRows();
            for (int i = 0; i < indexs.length; i++) {
                row[0] = cotizacion.getValueAt(indexs[i], 0);
                row[1] = cotizacion.getValueAt(indexs[i], 3);
                row[2] = cotizacion.getValueAt(indexs[i], 2);
                row[7] = cotizacion.getValueAt(indexs[i], 5);
                modeloNuevo.addRow(row);
            }
            JOptionPane.showMessageDialog(null, "Productos Agregados a OT");
            btnBorrarProducto.setEnabled(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnAgregarProdOTActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        AgregarProductoOT.dispose();
        this.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnReiniciarFiltrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReiniciarFiltrosActionPerformed
        try {

            String queryProducto = "Select inv.idProducto as 'ID producto', inv.SKU, inv.categoria as 'Categor√≠a', inv.nombreProducto as 'Producto',\n"
                    + "inv.descripcion as 'Descripci√≥n' ,inv.precioVenta as 'Precio Venta',inv.StatusProducto as 'Estado', inv.stock as 'Stock en la bodega'\n"
                    + "FROM inventario inv;";
            PreparedStatement pstProducto = cn.prepareStatement(queryProducto);
            ResultSet rsProducto = pstProducto.executeQuery();
            tblAgregarProdOT.setModel(DbUtils.resultSetToTableModel(rsProducto));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnReiniciarFiltrosActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        try {

            InventarioPorBodega.setVisible(true);
            cmbBodega2.removeAllItems();
            cmbSeccionBodega1.removeAllItems();
            String query2 = "select nombreBodega,seccion from bodega";
            PreparedStatement pst2 = cn.prepareStatement(query2);
            ResultSet rs2 = pst2.executeQuery();
            while (rs2.next()) {
                cmbBodega2.addItem(rs2.getString(1));
                cmbSeccionBodega1.addItem(rs2.getString(2));
            }
            cmbConvenioMarco.removeAllItems();
            String query3 = "select nombreConvenio FROM acimabasededatos.conveniomarco order by codigoConvenio desc;";
            PreparedStatement pst3 = cn.prepareStatement(query3);
            ResultSet rs3 = pst3.executeQuery();
            while (rs3.next()) {
                cmbConvenioMarco.addItem(rs3.getString(1));
            }

            cmbDistribuidorStock0.removeAllItems();
            String query4 = "select nombreDistribuidor from distribuidor order by idDistribuidor;";
            PreparedStatement pst4 = cn.prepareStatement(query4);
            ResultSet rs4 = pst4.executeQuery();
            while (rs4.next()) {
                cmbDistribuidorStock0.addItem(rs4.getString(1));
            }

            cmbCM.removeAllItems();
            String queryCM = "select subcategoria from categoria;";
            PreparedStatement pstCM = cn.prepareStatement(queryCM);
            ResultSet rsCM = pstCM.executeQuery();
            while (rsCM.next()) {
                cmbCM.addItem(rsCM.getString(1));
            }

            cmbMaterial.removeAllItems();
            String queryMat = "select material from material;";
            PreparedStatement pstMat = cn.prepareStatement(queryMat);
            ResultSet rsMat = pstMat.executeQuery();
            while (rsMat.next()) {
                cmbMaterial.addItem(rsMat.getString(1));
            }
            cmbTalla.removeAllItems();
            String queryTa = "select talla from talla;";
            PreparedStatement pstTa = cn.prepareStatement(queryTa);
            ResultSet rsTa = pstTa.executeQuery();
            while (rsTa.next()) {
                cmbTalla.addItem(rsTa.getString(1));
            }

            int idProducto = 0;
            String queryprod = "SELECT \n"
                    + "    CASE\n"
                    + "        WHEN ID IS NULL THEN 1\n"
                    + "        WHEN ID IS NOT NULL THEN MAX(ID)+1\n"
                    + "    END\n"
                    + "FROM\n"
                    + "    acimabasededatos.inventario;";
            PreparedStatement pstProd = cn.prepareStatement(queryprod);

            ResultSet rsProd = pstProd.executeQuery();
            while (rsProd.next()) {
                idProducto = rsProd.getInt("CASE\n"
                        + "        WHEN ID IS NULL THEN 1\n"
                        + "        WHEN ID IS NOT NULL THEN MAX(ID)+1\n"
                        + "    END");
            }

            txtID.setText(Integer.toString(idProducto));

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void btnConfirmarInfoProd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarInfoProd1ActionPerformed
        try {
            int idBodega = 0;
            String cm = "";

            String query = "select * from bodega where nombreBodega = ?";
            PreparedStatement pst3 = cn.prepareStatement(query);
            pst3.setString(1, cmbBodega2.getSelectedItem().toString());
            ResultSet rs3 = pst3.executeQuery();
            while (rs3.next()) {
                idBodega = rs3.getInt("idBodega");
            }

            String queryCM = "select * from convenioMarco where nombreConvenio = ?";
            PreparedStatement pst4 = cn.prepareStatement(queryCM);
            pst4.setString(1, cmbConvenioMarco.getSelectedItem().toString());
            ResultSet rs4 = pst4.executeQuery();
            while (rs4.next()) {
                cm = rs4.getString("codigoConvenio");
            }

            int idMaterial = 0;
            String queryMaterial = "select idMaterial from material where material = ?";
            PreparedStatement pstMat = cn.prepareStatement(queryMaterial);
            pstMat.setString(1, cmbMaterial.getSelectedItem().toString());
            ResultSet rsMat = pstMat.executeQuery();
            while (rsMat.next()) {
                idMaterial = rsMat.getInt("idMaterial");
            }
            System.out.println("Id de material: " + idMaterial);

            int idTalla = 0;
            String queryTalla = "select id_talla from talla where talla = ?";
            PreparedStatement pstTalla = cn.prepareStatement(queryTalla);
            pstTalla.setString(1, cmbTalla.getSelectedItem().toString());
            ResultSet rsTalla = pstTalla.executeQuery();
            while (rsTalla.next()) {
                idTalla = rsTalla.getInt("id_talla");
            }
            System.out.println("Id de Talla: " + idTalla);

            int idCategoria = 0;
            String queryCategoria = "select id from categoria where subcategoria = ?";
            PreparedStatement pstCategoria = cn.prepareStatement(queryCategoria);
            pstCategoria.setString(1, cmbCM.getSelectedItem().toString());
            ResultSet rsCategoria = pstCategoria.executeQuery();
            while (rsCategoria.next()) {
                idCategoria = rsCategoria.getInt("id");
            }
            System.out.println("Id de Categoria: " + idCategoria);

            System.out.println(cmbDistribuidorStock0.getSelectedItem().toString());

            try {
                String queryINV = "INSERT INTO inventario(`idBodega`,`idProducto`,`sku`,`nombreProducto`,codigoConvenio,`categoria`,"
                        + "`precioventa`,`precioCosto`,`iddistribuidor`,`descripcion`,`regiones`,`condiciondespacho`,`diashabiles`,"
                        + "`statusproducto`,`stock`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);";
                PreparedStatement pstINV = cn.prepareStatement(queryINV);
                pstINV.setInt(1, cmbBodega2.getSelectedIndex());
                pstINV.setString(2, txtIDproductoIngreso1.getText());
                pstINV.setString(3, Integer.toString(idCategoria) + Integer.toString(idMaterial) + Integer.toString(idTalla) + txtID.getText());
                pstINV.setString(4, txtNombreProductoIngreso1.getText());
                pstINV.setString(5, cm);
                pstINV.setString(6, cmbConvenioMarco.getSelectedItem().toString());
                pstINV.setInt(7, Integer.parseInt(txtPrecioVentaIngreso1.getText()));
                pstINV.setInt(8, Integer.parseInt(txtPrecioCostoIngreso1.getText()));
                pstINV.setInt(9, cmbConvenioMarco.getSelectedIndex() + 1);
                pstINV.setString(10, txtDescripcionIngreso1.getText());
                pstINV.setString(11, txtRegionesIngreso1.getText());
                pstINV.setString(12, txtCondicionDespachoIngreso1.getText());
                pstINV.setString(13, txtDiasHabilesIngreso1.getText());
                pstINV.setString(14, cmbStatusProdIngreso1.getSelectedItem().toString());
                pstINV.setInt(15, Integer.parseInt(txtStockIngresado1.getText()));

                int upINV = pstINV.executeUpdate();

                JOptionPane.showMessageDialog(null, "Producto Ingresado");
                txtIDproductoIngreso1.setText("");
                //txtSKUIngreso1.setText("");
            } catch (SQLException | NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
            cmbBodega2.setSelectedIndex(0);
            txtIDproductoIngreso1.setText("");
            //txtSKUIngreso1.setText("");
            txtNombreProductoIngreso1.setText("");
            cmbConvenioMarco.setSelectedIndex(0);
            txtPrecioVentaIngreso1.setText("");
            txtPrecioCostoIngreso1.setText("");

            txtDescripcionIngreso1.setText("");
            txtRegionesIngreso1.setText("");
            txtCondicionDespachoIngreso1.setText("");
            txtDiasHabilesIngreso1.setText("");
            cmbStatusProdIngreso1.setSelectedItem(0);
            txtStockIngresado1.setText("0");

            InventarioPorBodega.dispose();
            btnReiniciarFiltros.doClick();

        } catch (SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnConfirmarInfoProd1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NotaVenta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NotaVenta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NotaVenta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NotaVenta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NotaVenta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame AgregarProductoOT;
    public javax.swing.JFrame InventarioPorBodega;
    private javax.swing.JButton btnAddProductoOT;
    private javax.swing.JButton btnAgregarNV;
    private javax.swing.JButton btnAgregarProdOT;
    private javax.swing.JButton btnBorrarNV;
    private javax.swing.JButton btnBorrarProducto;
    private javax.swing.JButton btnBorrarProducto1;
    private javax.swing.JButton btnCalcularVal;
    private javax.swing.JButton btnCalcularValores;
    private javax.swing.JButton btnCalculoTotales;
    private javax.swing.JButton btnConfirmarInfoProd1;
    private javax.swing.JButton btnConfirmarVolver;
    private javax.swing.JButton btnGuardarOrden;
    private javax.swing.JButton btnNVParcializada;
    private javax.swing.JButton btnReiniciarFiltros;
    private javax.swing.JButton btnVolver4;
    private javax.swing.JFrame bultos;
    private javax.swing.ButtonGroup buttonGroup1;
    public javax.swing.JComboBox<String> cmbBodega2;
    private javax.swing.JComboBox<String> cmbCM;
    public javax.swing.JComboBox cmbConvenioMarco;
    public javax.swing.JComboBox cmbDistribuidorStock0;
    private javax.swing.JComboBox<String> cmbFormaPago;
    private javax.swing.JComboBox<String> cmbMaterial;
    private javax.swing.JComboBox<String> cmbMetodoDespacho;
    private javax.swing.JComboBox cmbMoneda;
    public javax.swing.JComboBox cmbSeccionBodega1;
    public javax.swing.JComboBox cmbStatusProdIngreso1;
    private javax.swing.JComboBox<String> cmbTalla;
    private javax.swing.JComboBox<String> cmbTransporte1;
    private javax.swing.JComboBox<String> comboempresa;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel108;
    private javax.swing.JLabel jLabel109;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel114;
    private javax.swing.JLabel jLabel115;
    private javax.swing.JLabel jLabel116;
    private javax.swing.JLabel jLabel117;
    private javax.swing.JLabel jLabel118;
    private javax.swing.JLabel jLabel119;
    private javax.swing.JLabel jLabel120;
    private javax.swing.JLabel jLabel121;
    private javax.swing.JLabel jLabel123;
    private javax.swing.JLabel jLabel124;
    private javax.swing.JLabel jLabel126;
    private javax.swing.JLabel jLabel127;
    private javax.swing.JLabel jLabel128;
    private javax.swing.JLabel jLabel129;
    private javax.swing.JLabel jLabel132;
    private javax.swing.JLabel jLabel133;
    private javax.swing.JLabel jLabel134;
    private javax.swing.JLabel jLabel135;
    private javax.swing.JLabel jLabel136;
    private javax.swing.JLabel jLabel141;
    private javax.swing.JLabel jLabel146;
    private javax.swing.JLabel jLabel148;
    private javax.swing.JLabel jLabel149;
    private javax.swing.JLabel jLabel150;
    private javax.swing.JLabel jLabel157;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLayeredPane jLayeredPane13;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane26;
    private javax.swing.JScrollPane jScrollPane28;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane14;
    private javax.swing.JTabbedPane jTabbedPane16;
    private javax.swing.JTabbedPane jTabbedPane17;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTabbedPane jTabbedPane9;
    public javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblCodigoOCTitulo;
    private javax.swing.JLabel lblNombreProducto;
    private javax.swing.JPanel panelIngresoProducto1;
    private javax.swing.JTable tblAgregarProdOT;
    private javax.swing.JTable tblPaso;
    private javax.swing.JTable tblProdadd;
    private javax.swing.JTable tblProdsAgregadosNV;
    private javax.swing.JTable tblProductosOrdenCompra;
    private javax.swing.JTable tblProductosPendientes;
    private javax.swing.JTable tblResumenParcializada;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtCargos1;
    private javax.swing.JTextField txtCargosOC;
    private javax.swing.JTextField txtCodigoOCOT;
    private javax.swing.JTextField txtCondicionDespachoIngreso1;
    public javax.swing.JTextField txtConsultarOC;
    private javax.swing.JTextField txtContactoOC;
    private javax.swing.JTextField txtContactoPagoOC;
    private javax.swing.JTextField txtDCTOOC;
    private javax.swing.JTextField txtDescripcionIngreso1;
    private javax.swing.JTextField txtDescuento;
    private javax.swing.JTextField txtDiasHabilesIngreso1;
    public javax.swing.JTextField txtDireccionDemandanteOC;
    private javax.swing.JTextField txtDireccionEnvioFacturaOC;
    private javax.swing.JTextField txtDireccionesDespachoOC;
    public javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEspecificacionComprador;
    private javax.swing.JTextField txtEspecificacionProveedor;
    private javax.swing.JTextField txtFechaEntregaProductoOC;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtIDProducto;
    private javax.swing.JTextField txtIDproductoIngreso1;
    private javax.swing.JTextField txtIVAOC;
    private javax.swing.JTextField txtImpuestoEspecifico;
    private javax.swing.JTextField txtMailEnvioFactura;
    private javax.swing.JTextField txtNetoOC;
    public javax.swing.JTextField txtNombreDemandanteOC;
    private javax.swing.JTextField txtNombreOrdenCompra;
    private javax.swing.JTextField txtNombreProducto;
    private javax.swing.JTextField txtNombreProductoIngreso1;
    private javax.swing.JTextField txtNumeroNotaVenta;
    private javax.swing.JTextField txtObservacion1;
    private javax.swing.JTextField txtObservacionDespacho;
    private javax.swing.JTextField txtPrecioCostoIngreso1;
    private javax.swing.JTextField txtPrecioVentaIngreso1;
    private javax.swing.JTextField txtProveedorOC;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtRegionesIngreso1;
    public javax.swing.JTextField txtRutCompradorOC;
    private javax.swing.JTextField txtSKU;
    private javax.swing.JTextField txtStockIngresado1;
    private javax.swing.JTextField txtSubtotalOC;
    public javax.swing.JTextField txtTelefonoComprador;
    private javax.swing.JTextField txtTotalOC;
    public javax.swing.JTextField txtUnidadCompraCliente;
    private javax.swing.JTextField txtcorreo;
    private javax.swing.JTextField txtdireccion;
    private javax.swing.JTextField txtfono;
    public javax.swing.JTextField txtorganizacion;
    public javax.swing.JTextField txtrazonsocial;
    private javax.swing.JTextField txtrut;
    // End of variables declaration//GEN-END:variables
}
